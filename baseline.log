INFO: :load_directory <- development
INFO: :target_dir : c:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
INFO: :target_dir : c:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :load_directory <- development
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:2503: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

DEBUG:matplotlib.axes._base:update_title_pos
DEBUG:matplotlib.font_manager:findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\markh\\Work\\my_dcase\\testing\\env\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\markh\\Work\\my_dcase\\testing\\env\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan.hdf5
<<<<<<< HEAD
=======
INFO: :load_directory <- development
INFO: :target_dir : D:\������\������\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.4482309582309582
INFO: :pAUC : 0.499676710203026
INFO: :target_dir : D:\������\������\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.4989136490250697
INFO: :pAUC : 0.5164931828177687
INFO: :target_dir : D:\������\������\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.4881609195402299
INFO: :pAUC : 0.48865698729582574
INFO: :target_dir : D:\������\������\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.5950692520775623
INFO: :pAUC : 0.5317101618311707
INFO: :AUC and pAUC results -> ./result/result.csv
INFO: :load_directory <- development
INFO: :target_dir : D:\������\������\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.4482309582309582
INFO: :pAUC : 0.499676710203026
INFO: :target_dir : D:\������\������\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib:CONFIGDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib:(private) matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:loaded rc file D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data\matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.1
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is win32
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_winapi', '_bootlocale', '_locale', 'encodings.cp1251', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'pywin32_bootstrap', 'glob', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'fnmatch', 'posixpath', 'numpy', '__future__', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'ctypes', '_ctypes', 'struct', '_struct', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', 'time', 'math', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'errno', 'urllib', 'urllib.parse', 'pickle', '_compat_pickle', '_pickle', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'collections.abc', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'subprocess', 'signal', 'threading', 'traceback', 'linecache', 'tokenize', 'token', '_weakrefset', 'msvcrt', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'ast', '_ast', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'weakref', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random._bit_generator', '_cython_0_29_17', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'tqdm', 'tqdm.std', 'tqdm.utils', 'socket', '_socket', 'selectors', 'select', 'colorama', 'colorama.initialise', 'atexit', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes.wintypes', 'unicodedata', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'logging', 'string', '_string', 'common', 'argparse', 'gettext', 'locale', 'librosa', 'librosa.version', 'librosa._cache', 'joblib', 'joblib.memory', 'pydoc', 'inspect', 'dis', 'opcode', '_opcode', 'pkgutil', 'joblib.hashing', 'joblib._compat', 'joblib.func_inspect', 'joblib.logger', 'pprint', 'joblib.disk', 'joblib._memory_helpers', 'joblib._store_backends', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'joblib.backports', 'distutils', 'distutils.version', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'tempfile', '_multiprocessing', 'joblib.format_stack', 'joblib.my_exceptions', 'joblib._parallel_backends', 'gc', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'uuid', 'multiprocessing.pool', 'queue', '_queue', 'multiprocessing.util', 'joblib.executor', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_win32', 'multiprocessing.popen_spawn_win32', 'multiprocessing.spawn', 'runpy', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._win_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'librosa.core', 'librosa.core.time_frequency', 'six', 'librosa.util', 'librosa.util.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'typing', 'typing.io', 'typing.re', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_cython_0_29_14', '_ni_label', 'scipy.ndimage.morphology', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'difflib', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy._lib._util', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'numba', 'numba._version', 'numba.core', 'numba.core.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'pkg_resources', 'zipfile', 'plistlib', 'xml', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources.py31compat', 'pkg_resources._vendor.appdirs', 'win32com', 'win32api', 'pythoncom', 'pywintypes', 'imp', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'copy', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'sysconfig', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.testing', 'numba.testing.main', 'cProfile', '_lsprof', 'profile', 'numba.testing.loader', 'numba.testing._runtests', 'numba.core.types', 'numba.core.utils', 'timeit', 'numba.core.types.abstract', 'numba.core.types.containers', 'numba.core.types.common', 'numba.core.types.misc', 'numba.core.typeconv', 'numba.core.typeconv.castgraph', 'numba.core.errors', 'numba.core.types.functions', 'numba.core.types.iterators', 'numba.core.types.npytypes', 'numba.core.types.scalars', 'numba.np', 'numba.np.npdatetime_helpers', 'numba.core.types.function_type', 'numba.misc', 'numba.misc.special', 'numba.core.typing', 'numba.core.typing.context', 'numba.core.typeconv.rules', 'numba.core.typeconv.typeconv', 'numba.core.typeconv._typeconv', 'numba.core.typing.templates', 'numba.core.cpu_options', 'numba.core.typing.typeof', 'numba.np.numpy_support', 'numba.core.cgutils', 'numba.core.datamodel', 'numba.core.datamodel.manager', 'numba.core.datamodel.packer', 'numba.core.datamodel.registry', 'numba.core.datamodel.models', 'numba.core.decorators', 'numba.stencils', 'numba.stencils.stencil', 'numba.core.ir', 'numba.core.consts', 'numba.core.ir_utils', 'numba.core.extending', 'numba.core.imputils', 'numba.core.pythonapi', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._helperlib', 'numba.core.lowering', 'numba._dynfunc', 'numba.core.debuginfo', 'numba.core.funcdesc', 'numba.core.itanium_mangler', 'numba.core.generators', 'numba.core.analysis', 'numba.core.controlflow', 'numba.core.postproc', 'numba.core.transforms', 'numba.core.rewrites', 'numba.core.rewrites.registry', 'numba.core.rewrites.static_getitem', 'numba.core.rewrites.static_raise', 'numba.core.rewrites.static_binop', 'numba.core.rewrites.ir_print', 'numba.core.rewrites.macros', 'numba.core.registry', 'numba.core.descriptors', 'numba.core.dispatcher', 'numba._dispatcher', 'numba.core.serialize', 'numba.core.bytecode', 'numba.core.compiler', 'numba.core.tracing', 'numba.core.interpreter', 'numba.core.dataflow', 'numba.core.byteflow', 'numba.core.unsafe', 'numba.core.unsafe.eh', 'numba.core.callconv', 'numba.core.base', 'numba.core.compiler_lock', 'numba.np.arrayobj', 'numba.misc.quicksort', 'numba.misc.mergesort', 'numba.cpython', 'numba.cpython.slicing', 'numba.cpython.unsafe', 'numba.cpython.unsafe.tuple', 'numba.cpython.builtins', 'numba.core.typing.builtins', 'numba.parfors', 'numba.parfors.parfor_lowering', 'numba.parfors.parfor', 'numba.core.typeinfer', 'numba.stencils.stencilparfor', 'numba.core.typing.npydecl', 'numba.parfors.array_analysis', 'numba.core.sigutils', 'numba.parfors.parfor_lowering_utils', 'numba.extending', 'numba.core.cpu', 'numba.core.callwrapper', 'numba.core.codegen', 'llvmlite.llvmpy.passes', 'numba.core.runtime', 'numba.core.runtime.nrt', 'numba.core.runtime.nrtdynmod', 'numba.core.runtime._nrt_python', 'numba.core.runtime.nrtopt', 'numba.misc.inspection', 'numba.core.externals', 'numba.core.intrinsics', 'numba.core.fastmathpass', 'numba.core.options', 'numba.core.entrypoints', 'numba.cpython.setobj', 'numba.cpython.listobj', 'numba.core.inline_closurecall', 'numba.cpython.rangeobj', 'numba.np.unsafe', 'numba.np.unsafe.ndarray', 'numba.core.compiler_machinery', 'numba.core.untyped_passes', 'numba.core.ssa', 'numba.core.typed_passes', 'numba.core.annotations', 'numba.core.annotations.type_annotations', 'numba.core.object_mode_passes', 'numba.core.pylowering', 'numba.core.caching', 'numba.misc.appdirs', 'numba.np.ufunc', 'numba.np.ufunc.decorators', 'numba.np.ufunc._internal', 'numba.np.ufunc.ufuncbuilder', 'numba.np.ufunc.sigparse', 'numba.np.ufunc.wrappers', 'numba.np.ufunc.parallel', 'numba.np.ufunc.dufunc', 'numba.np.ufunc.array_exprs', 'numba.experimental', 'numba.experimental.jitclass', 'numba.experimental.jitclass.decorators', 'numba.experimental.jitclass.base', 'numba.experimental.jitclass._box', 'numba.experimental.jitclass.boxing', 'numba.core.withcontexts', 'numba.cpython.charseq', 'numba.cpython.unicode', 'numba.cpython.hashing', 'numba.core.unsafe.bytes', 'numba.cpython.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.typed.dictobject', 'numba.typed.typedobjectutils', 'numba.core.boxing', 'numba.typed.dictimpl', 'numba.experimental.function_type', 'numba.core.ccallback', 'numba.core.typing.ctypes_utils', 'numba.typed.typedlist', 'numba.typed.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'decorator', 'numba.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy._lib.messagestream', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy._lib.decorator', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.integrate', 'scipy.integrate.quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.stats', 'scipy.stats.stats', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.stats._stats', 'scipy.stats._tukeylambda_stats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._rvs_sampling', 'scipy.stats._hypotests', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'sklearn.utils.fixes', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils.deprecation', 'sklearn.utils._estimator_html_repr', 'html', 'html.entities', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils.sparsefuncs', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'array', 'sklearn.utils.multiclass', 'sklearn.preprocessing._discretization', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'threadpoolctl', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'csv', '_csv', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'keras_model', 'keras', 'keras.utils', 'keras.utils.np_utils', 'keras.utils.generic_utils', 'keras.utils.data_utils', 'tarfile', 'six.moves', 'six.moves.urllib', 'six.moves.urllib.error', 'urllib.error', 'urllib.response', 'six.moves.urllib.request', 'urllib.request', 'http', 'http.client', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'nturl2path', 'keras.utils.io_utils', 'h5py', 'h5py._errors', 'h5py._hl', 'h5py._hl.compat', 'h5py.version', 'h5py.h5', '_cython_0_29_13', 'h5py.defs', 'h5py._objects', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.utils', 'h5py.h5py_warnings', 'h5py.h5z', 'h5py.h5a', 'h5py.h5s', 'h5py.h5p', 'h5py.h5ac', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl.filters', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'keras.utils.conv_utils', 'keras.backend', 'keras.backend.load_backend', 'keras.backend.common', 'keras.backend.tensorflow_backend', 'tensorflow', 'tensorflow.python', 'tensorflow.python.pywrap_tensorflow', 'tensorflow.python.platform', 'tensorflow.python.platform.self_check', 'tensorflow.python.platform.build_info', 'tensorflow.python.pywrap_dlopen_global_flags', 'tensorflow.python.pywrap_tensorflow_internal', 'swig_runtime_data4', '_pywrap_tensorflow_internal', 'tensorflow.core', 'tensorflow.core.framework', 'tensorflow.core.framework.graph_pb2', 'google.protobuf', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorflow.core.framework.function_pb2', 'tensorflow.core.framework.attr_value_pb2', 'tensorflow.core.framework.tensor_pb2', 'tensorflow.core.framework.resource_handle_pb2', 'tensorflow.core.framework.tensor_shape_pb2', 'google.protobuf.internal.well_known_types', 'tensorflow.core.framework.types_pb2', 'tensorflow.core.framework.node_def_pb2', 'tensorflow.core.framework.op_def_pb2', 'tensorflow.core.framework.versions_pb2', 'tensorflow.core.framework.summary_pb2', 'tensorflow.core.protobuf', 'tensorflow.core.protobuf.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorflow.core.protobuf.saved_object_graph_pb2', 'tensorflow.core.framework.variable_pb2', 'tensorflow.core.protobuf.struct_pb2', 'tensorflow.core.protobuf.trackable_object_graph_pb2', 'tensorflow.core.protobuf.saver_pb2', 'tensorflow.core.protobuf.config_pb2', 'tensorflow.core.framework.cost_graph_pb2', 'tensorflow.core.framework.step_stats_pb2', 'tensorflow.core.framework.allocation_description_pb2', 'tensorflow.core.framework.tensor_description_pb2', 'tensorflow.core.protobuf.cluster_pb2', 'tensorflow.core.protobuf.debug_pb2', 'tensorflow.core.protobuf.rewriter_config_pb2', 'tensorflow.core.protobuf.verifier_config_pb2', 'tensorflow.core.protobuf.tensorflow_server_pb2', 'tensorflow.core.protobuf.device_filters_pb2', 'tensorflow.core.util', 'tensorflow.core.util.event_pb2', 'tensorflow.python.framework', 'tensorflow.python.framework.framework_lib', 'tensorflow.python.framework.device', 'tensorflow.python.tf2', 'tensorflow.python.framework.device_spec', 'tensorflow.python.util', 'tensorflow.python.util.tf_export', 'tensorflow.python.util.tf_decorator', 'tensorflow.python.util.tf_stack', 'tensorflow.python._tf_stack', 'tensorflow.python.util.tf_inspect', 'tensorflow.python.framework.ops', 'tensorflow.python.pywrap_tfe', 'tensorflow.python._pywrap_tfe', 'tensorflow.python.client', 'tensorflow.python.client.pywrap_tf_session', 'tensorflow.python._pywrap_tf_session', 'tensorflow.python.eager', 'tensorflow.python.eager.context', 'absl', 'absl.logging', 'getpass', 'absl.flags', 'getopt', 'absl.flags._argument_parser', 'absl.flags._helpers', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'absl.flags._validators', 'absl.logging.converter', 'tensorflow.python.eager.executor', 'tensorflow.python.eager.monitoring', 'tensorflow.python.framework.c_api_util', 'tensorflow.core.framework.api_def_pb2', 'tensorflow.python.util.compat', 'tensorflow.python.util.tf_contextlib', 'tensorflow.python.util.is_in_graph_mode', 'tensorflow.python.eager.core', 'tensorflow.python.framework.errors', 'tensorflow.python.framework.errors_impl', 'tensorflow.core.lib', 'tensorflow.core.lib.core', 'tensorflow.core.lib.core.error_codes_pb2', 'tensorflow.core.protobuf.error_codes_pb2', 'tensorflow.python._pywrap_py_exception_registry', 'tensorflow.python.framework.error_interpolation', 'tensorflow.core.protobuf.graph_debug_info_pb2', 'tensorflow.python.util.deprecation', 'tensorflow.python.platform.tf_logging', 'tensorflow.python.util.decorator_utils', 'tensorflow.python.eager.tape', 'tensorflow.python.util.lazy_loader', 'tensorflow.python.framework.composite_tensor', 'tensorflow.python._pywrap_utils', 'tensorflow.python.util.nest', 'wrapt', 'wrapt.wrappers', 'wrapt._wrappers', 'wrapt.decorators', 'wrapt.importer', 'tensorflow.python.framework.dtypes', 'tensorflow.python._pywrap_bfloat16', 'tensorflow.python._dtypes', 'tensorflow.python.framework.indexed_slices', 'tensorflow.python.framework.tensor_conversion_registry', 'tensorflow.python.framework.tensor_like', 'tensorflow.python.framework.tensor_shape', 'tensorflow.python.framework.type_spec', 'tensorflow.python.framework.registry', 'tensorflow.python.framework.traceable_stack', 'tensorflow.python.framework.versions', 'tensorflow.python.ops', 'tensorflow.python.ops.control_flow_util', 'tensorflow.python.platform.app', 'absl.app', 'pdb', 'cmd', 'bdb', 'code', 'codeop', 'absl.command_name', 'faulthandler', 'tensorflow.python.platform.flags', 'tensorflow.python.util.function_utils', 'tensorflow.python.util.lock_util', 'tensorflow.python.util.memory', 'tensorflow.python.util.object_identity', 'tensorflow.python.framework.sparse_tensor', 'tensorflow.python.framework.constant_op', 'tensorflow.python.eager.execute', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'tensorflow.python.framework.tensor_util', 'tensorflow.python.framework.tensor_spec', 'tensorflow.python.framework.common_shapes', 'tensorflow.python.ops.gen_sparse_ops', 'tensorflow.python.framework.op_def_registry', 'tensorflow.python._op_def_registry', 'tensorflow.python.framework.op_def_library', 'tensorflow.python.framework.op_callbacks', 'tensorflow.python.util.dispatch', 'tensorflow.python.framework.random_seed', 'tensorflow.python.framework.importer', 'tensorflow.python.framework.function', 'tensorflow.python.framework.graph_to_function_def', 'tensorflow.python.ops.array_ops', 'tensorflow.python.ops.gen_array_ops', 'tensorflow.python.ops.gen_math_ops', 'tensorflow.python.ops.resource_variable_ops', 'tensorflow.python.framework.auto_control_deps_utils', 'tensorflow.python.framework.cpp_shape_inference_pb2', 'tensorflow.python.ops.gen_logging_ops', 'tensorflow.python.ops.gen_resource_variable_ops', 'tensorflow.python.ops.gen_state_ops', 'tensorflow.python.ops.math_ops', 'tensorflow.python.framework.graph_util', 'tensorflow.python.framework.graph_util_impl', 'tensorflow.python.ops.gen_data_flow_ops', 'tensorflow.python.ops.gen_nn_ops', 'tensorflow.python.ops.state_ops', 'tensorflow.python.ops.variables', 'tensorflow.python.ops.control_flow_ops', 'tensorflow.core.protobuf.control_flow_pb2', 'tensorflow.python.ops.gen_control_flow_ops', 'tensorflow.python.ops.tensor_array_ops', 'tensorflow.python.ops.list_ops', 'tensorflow.python.ops.gen_list_ops', 'tensorflow.python.util.tf_should_use', 'tensorflow.python.training', 'tensorflow.python.training.tracking', 'tensorflow.python.training.tracking.base', 'tensorflow.python.ops.gen_io_ops', 'tensorflow.python.training.saving', 'tensorflow.python.training.saving.saveable_object', 'tensorflow.python.ops.variable_scope', 'tensorflow.python.client.session', 'tensorflow.python.ops.session_ops', 'tensorflow.python.training.experimental', 'tensorflow.python.training.experimental.mixed_precision_global_state', 'tensorflow.python.ops.init_ops', 'tensorflow.python.ops.gen_linalg_ops', 'tensorflow.python.ops.linalg_ops_impl', 'tensorflow.python.ops.random_ops', 'tensorflow.python.ops.gen_random_ops', 'tensorflow.python.framework.load_library', 'tensorflow.python._pywrap_python_op_gen', 'tensorflow.python.lib', 'tensorflow.python.lib.io', 'tensorflow.python.lib.io.file_io', 'tensorflow.python._pywrap_file_io', 'tensorflow.python.framework.config', 'tensorflow.python.client.client_lib', 'tensorflow.python.ops.standard_ops', 'tensorflow.python.autograph', 'tensorflow.python.autograph.operators', 'tensorflow.python.autograph.operators.control_flow', 'tensorflow.python.autograph.operators.py_builtins', 'tensorflow.python.autograph.utils', 'tensorflow.python.autograph.utils.context_managers', 'tensorflow.python.autograph.utils.misc', 'tensorflow.python.autograph.utils.py_func', 'tensorflow.python.ops.script_ops', 'tensorflow.python._pywrap_py_func', 'tensorflow.python.eager.backprop', 'tensorflow.python.eager.backprop_util', 'tensorflow.python.eager.imperative_grad', 'tensorflow.python.ops.unconnected_gradients', 'tensorflow.python.ops.check_ops', 'tensorflow.python.ops.default_gradient', 'tensorflow.python.framework.func_graph', 'tensorflow.python.eager.graph_only_ops', 'tensorflow.python.framework.auto_control_deps', 'tensorflow.python.ops.custom_gradient', 'tensorflow.python.ops.op_selector', 'tensorflow.python.ops.gen_script_ops', 'tensorflow.python.autograph.utils.tensor_list', 'tensorflow.python.autograph.utils.testing', 'tensorflow.python.autograph.utils.type_check', 'tensorflow.python.autograph.utils.tensors', 'tensorflow.python.data', 'tensorflow.python.data.experimental', 'tensorflow.python.data.experimental.ops', 'tensorflow.python.data.experimental.ops.batching', 'tensorflow.python.data.ops', 'tensorflow.python.data.ops.dataset_ops', 'tensorflow.python.compat', 'tensorflow.python.compat.compat', 'tensorflow.python.data.experimental.ops.distribute_options', 'tensorflow.python.data.util', 'tensorflow.python.data.util.options', 'tensorflow.python.data.experimental.ops.optimization_options', 'tensorflow.python.data.experimental.ops.stats_options', 'tensorflow.python.data.experimental.ops.stats_aggregator', 'tensorflow.python.ops.gen_experimental_dataset_ops', 'tensorflow.python.ops.summary_ops_v2', 'tensorflow.python.eager.profiler', 'tensorflow.python._pywrap_events_writer', 'tensorflow.python.platform.gfile', 'tensorflow.python.profiler', 'tensorflow.python.profiler.internal', 'tensorflow.python.profiler.internal._pywrap_profiler', 'tensorflow.python.framework.smart_cond', 'tensorflow.python.ops.gen_summary_ops', 'tensorflow.python.ops.summary_op_util', 'tensorflow.python.training.training_util', 'tensorflow.python.framework.graph_io', 'tensorflow.python.data.experimental.ops.threading_options', 'tensorflow.python.data.ops.iterator_ops', 'tensorflow.python.data.ops.optional_ops', 'tensorflow.python.data.util.structure', 'tensorflow.python.data.util.nest', 'tensorflow.python.ops.ragged', 'tensorflow.python.ops.ragged.ragged_array_ops', 'tensorflow.python.ops.sort_ops', 'tensorflow.python.ops.nn_ops', 'tensorflow.python.platform.device_context', 'tensorflow.python.ops.ragged.ragged_functional_ops', 'tensorflow.python.ops.ragged.ragged_config', 'tensorflow.python.ops.ragged.ragged_tensor', 'tensorflow.python.ops.gen_ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_tensor_value', 'tensorflow.python.ops.ragged.ragged_util', 'tensorflow.python.ops.gen_ragged_math_ops', 'tensorflow.python.ops.ragged.segment_id_ops', 'tensorflow.python.ops.ragged.ragged_math_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_ops', 'tensorflow.python.ops.ragged.ragged_gather_ops', 'tensorflow.python.ops.gen_ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_with_default_op', 'tensorflow.python.ops.ragged.ragged_dispatch', 'tensorflow.python.ops.clip_ops', 'tensorflow.python.ops.data_flow_ops', 'tensorflow.python.lib.io.python_io', 'tensorflow.python.lib.io.tf_record', 'tensorflow.python._pywrap_record_io', 'tensorflow.python.ops.gen_bitwise_ops', 'tensorflow.python.ops.parsing_ops', 'tensorflow.python.ops.gen_parsing_ops', 'tensorflow.python.ops.parsing_config', 'tensorflow.python.ops.sparse_ops', 'tensorflow.python.ops.string_ops', 'tensorflow.python.ops.gen_string_ops', 'tensorflow.python.ops.ragged.ragged_concat_ops', 'tensorflow.python.ops.ragged.ragged_squeeze_op', 'tensorflow.python.ops.ragged.ragged_string_ops', 'tensorflow.python.ops.ragged.ragged_tensor_shape', 'tensorflow.python.ops.ragged.ragged_where_op', 'tensorflow.python.ops.ragged.ragged_operators', 'tensorflow.python.ops.ragged.ragged_getitem', 'tensorflow.python.ops.ragged.ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_factory_ops', 'tensorflow.python.ops.ragged.ragged_map_ops', 'tensorflow.python.ops.gen_dataset_ops', 'tensorflow.python.training.saver', 'tensorflow.python.framework.meta_graph', 'tensorflow.python.ops.io_ops', 'tensorflow.python.training.checkpoint_management', 'tensorflow.python.training.checkpoint_state_pb2', 'tensorflow.python.training.py_checkpoint_reader', 'tensorflow.python._pywrap_checkpoint_reader', 'tensorflow.python.training.saving.saveable_object_util', 'tensorflow.python.data.util.random_seed', 'tensorflow.python.data.util.traverse', 'tensorflow.python.eager.function', 'tensorflow.python.eager.forwardprop_util', 'tensorflow.python.ops.functional_ops', 'tensorflow.python.ops.gen_functional_ops', 'tensorflow.python.ops.gradients_util', 'tensorflow.python.ops.control_flow_state', 'tensorflow.python.ops.control_flow_v2_func_graphs', 'tensorflow.python.training.tracking.tracking', 'tensorflow.python.eager.def_function', 'tensorflow.python.eager.lift_to_graph', 'tensorflow.python.training.tracking.data_structures', 'tensorflow.python.saved_model', 'tensorflow.python.saved_model.revived_types', 'tensorflow.python.training.tracking.layer_utils', 'tensorflow.python.data.util.convert', 'tensorflow.python.data.experimental.ops.cardinality', 'tensorflow.python.data.experimental.ops.counter', 'tensorflow.python.data.experimental.ops.scan_ops', 'tensorflow.python.data.experimental.ops.enumerate_ops', 'tensorflow.python.data.experimental.ops.error_ops', 'tensorflow.python.data.experimental.ops.get_single_element', 'tensorflow.python.data.experimental.ops.grouping', 'tensorflow.python.data.experimental.ops.interleave_ops', 'tensorflow.python.data.experimental.ops.random_ops', 'tensorflow.python.data.ops.readers', 'tensorflow.python.ops.gen_stateless_random_ops', 'tensorflow.python.data.experimental.ops.iterator_ops', 'tensorflow.python.training.basic_session_run_hooks', 'tensorflow.python.client.timeline', 'tensorflow.python.training.session_run_hook', 'tensorflow.python.training.summary_io', 'tensorflow.python.summary', 'tensorflow.python.summary.summary_iterator', 'tensorflow.python.summary.writer', 'tensorflow.python.summary.writer.writer', 'tensorflow.python.summary.plugin_asset', 'tensorflow.python.summary.writer.event_file_writer', 'tensorflow.python.summary.writer.event_file_writer_v2', 'tensorflow.python.summary.writer.writer_cache', 'tensorflow.python.data.experimental.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.prefetching_ops', 'tensorflow.python.data.experimental.ops.readers', 'gzip', 'tensorflow.python.data.experimental.ops.resampling', 'tensorflow.python.ops.logging_ops', 'tensorflow.python.data.experimental.ops.shuffle_ops', 'tensorflow.python.data.experimental.ops.stats_ops', 'tensorflow.python.data.experimental.ops.take_while_ops', 'tensorflow.python.data.experimental.ops.unique', 'tensorflow.python.data.experimental.ops.writers', 'tensorflow.python.util.all_util', 'tensorflow.python.autograph.operators.special_values', 'tensorflow.python.autograph.utils.ag_logging', 'tensorflow.python.autograph.utils.compat_util', 'tensorflow.python.autograph.operators.data_structures', 'tensorflow.python.autograph.operators.exceptions', 'tensorflow.python.autograph.operators.logical', 'tensorflow.python.autograph.operators.slices', 'tensorflow.python.autograph.core', 'tensorflow.python.autograph.core.converter', 'tensorflow.python.autograph.pyct', 'tensorflow.python.autograph.pyct.anno', 'gast', 'gast.gast', 'gast.ast3', 'gast.astn', 'tensorflow.python.autograph.pyct.ast_util', 'tensorflow.python.autograph.pyct.parser', 'astunparse', 'astunparse.unparser', 'astunparse.printer', 'tensorflow.python.autograph.pyct.errors', 'tensorflow.python.autograph.pyct.inspect_utils', 'tensorflow.python.autograph.pyct.qual_names', 'tensorflow.python.autograph.pyct.cfg', 'tensorflow.python.autograph.pyct.templates', 'tensorflow.python.autograph.pyct.transformer', 'tensorflow.python.autograph.pyct.loader', 'tensorflow.python.autograph.pyct.origin_info', 'tensorflow.python.autograph.pyct.pretty_printer', 'termcolor', 'tensorflow.python.autograph.pyct.static_analysis', 'tensorflow.python.autograph.pyct.static_analysis.activity', 'tensorflow.python.autograph.pyct.static_analysis.annos', 'tensorflow.python.autograph.pyct.static_analysis.liveness', 'tensorflow.python.autograph.pyct.static_analysis.reaching_definitions', 'tensorflow.python.autograph.impl', 'tensorflow.python.autograph.impl.api', 'tensorflow.python.autograph.core.ag_ctx', 'tensorflow.python.autograph.impl.conversion', 'tensorflow.python.autograph.converters', 'tensorflow.python.autograph.converters.arg_defaults', 'tensorflow.python.autograph.converters.asserts', 'tensorflow.python.autograph.converters.break_statements', 'tensorflow.python.autograph.converters.call_trees', 'tensorflow.python.autograph.converters.conditional_expressions', 'tensorflow.python.autograph.converters.continue_statements', 'tensorflow.python.autograph.converters.control_flow', 'tensorflow.python.autograph.lang', 'tensorflow.python.autograph.lang.directives', 'tensorflow.python.autograph.converters.directives', 'tensorflow.python.autograph.converters.function_scopes', 'tensorflow.python.autograph.converters.lists', 'tensorflow.python.autograph.converters.logical_expressions', 'tensorflow.python.autograph.converters.return_statements', 'tensorflow.python.autograph.converters.slices', 'tensorflow.python.autograph.core.config', 'tensorflow.python.autograph.core.config_lib', 'tensorflow.python.autograph.core.function_wrappers', 'tensorflow.python.autograph.core.naming', 'tensorflow.python.autograph.core.unsupported_features_checker', 'tensorflow.python.autograph.lang.special_functions', 'tensorflow.python.autograph.pyct.error_utils', 'tensorflow.python.training.experimental.loss_scaling_gradient_tape', 'tensorflow.python.distribute', 'tensorflow.python.distribute.cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.cluster_resolver', 'tensorflow.python.training.server_lib', 'tensorflow.python.distribute.cluster_resolver.gce_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.kubernetes_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.slurm_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tfconfig_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver', 'tensorflow.python.tpu', 'tensorflow.python.tpu.client', 'tensorflow.python.tpu.client.client', 'tensorflow.python.distribute.cross_device_ops', 'tensorflow.python.client.device_lib', 'tensorflow.core.framework.device_attributes_pb2', 'tensorflow.python._pywrap_device_lib', 'tensorflow.python.distribute.collective_util', 'tensorflow.python.distribute.cross_device_utils', 'tensorflow.python.distribute.all_reduce', 'tensorflow.python.ops.nccl_ops', 'tensorflow.python.ops.gen_nccl_ops', 'tensorflow.python.distribute.values', 'tensorflow.python.distribute.device_util', 'tensorflow.python.distribute.distribute_lib', 'tensorflow.python.distribute.distribution_strategy_context', 'tensorflow.python.distribute.numpy_dataset', 'tensorflow.python.distribute.reduce_util', 'tensorflow.python.ops.losses', 'tensorflow.python.ops.losses.loss_reduction', 'tensorflow.python.ops.losses.losses_impl', 'tensorflow.python.ops.confusion_matrix', 'tensorflow.python.ops.nn', 'tensorflow.python.ops.ctc_ops', 'tensorflow.python.ops.gen_ctc_ops', 'tensorflow.python.ops.inplace_ops', 'tensorflow.python.ops.linalg_ops', 'tensorflow.python.ops.map_fn', 'tensorflow.python.ops.nn_grad', 'tensorflow.python.ops.embedding_ops', 'tensorflow.python.ops.data_flow_grad', 'tensorflow.python.ops.nn_impl', 'tensorflow.python.ops.candidate_sampling_ops', 'tensorflow.python.ops.gen_candidate_sampling_ops', 'tensorflow.python.ops.losses.util', 'tensorflow.python.ops.weights_broadcast_ops', 'tensorflow.python.ops.sets', 'tensorflow.python.ops.sets_impl', 'tensorflow.python.ops.gen_set_ops', 'tensorflow.tools', 'tensorflow.tools.docs', 'tensorflow.tools.docs.doc_controls', 'tensorflow.python.ops.collective_ops', 'tensorflow.python.ops.gen_collective_ops', 'tensorflow.python.distribute.tpu_values', 'tensorflow.python.tpu.tpu', 'tensorflow.core.protobuf.tpu', 'tensorflow.core.protobuf.tpu.dynamic_padding_pb2', 'tensorflow.python.compiler', 'tensorflow.python.compiler.xla', 'tensorflow.python.compiler.xla.jit', 'tensorflow.python.compiler.xla.xla', 'tensorflow.compiler', 'tensorflow.compiler.jit', 'tensorflow.compiler.jit.ops', 'tensorflow.compiler.jit.ops.xla_ops', 'tensorflow.compiler.jit.ops.xla_ops_grad', 'tensorflow.python.distribute.summary_op_util', 'tensorflow.python.tpu.tpu_function', 'tensorflow.python.tpu.ops', 'tensorflow.python.tpu.ops.tpu_ops', 'tensorflow.python.ops.gen_tpu_ops', 'tensorflow.python.framework.kernels', 'tensorflow.core.framework.kernel_def_pb2', 'tensorflow.python.distribute.mirrored_strategy', 'tensorflow.python.distribute.input_lib', 'tensorflow.python.data.experimental.ops.distribute', 'tensorflow.python.data.ops.multi_device_iterator_ops', 'tensorflow.python.distribute.input_ops', 'tensorflow.python.distribute.multi_worker_util', 'tensorflow.python.distribute.distribute_coordinator_context', 'tensorflow.python.distribute.shared_variable_creator', 'tensorflow.python.training.coordinator', 'tensorflow.python.distribute.one_device_strategy', 'tensorflow.python.distribute.experimental', 'tensorflow.python.distribute.central_storage_strategy', 'tensorflow.python.distribute.parameter_server_strategy', 'tensorflow.python.training.device_setter', 'tensorflow.python.distribute.collective_all_reduce_strategy', 'tensorflow.python.distribute.tpu_strategy', 'tensorflow.compiler.xla', 'tensorflow.compiler.xla.experimental', 'tensorflow.compiler.xla.experimental.xla_sharding', 'tensorflow.compiler.xla.experimental.xla_sharding.xla_sharding', 'tensorflow.compiler.tf2xla', 'tensorflow.compiler.tf2xla.python', 'tensorflow.compiler.tf2xla.python.xla', 'tensorflow.compiler.tf2xla.ops', 'tensorflow.compiler.tf2xla.ops.gen_xla_ops', 'tensorflow.python.ops.bitwise_ops', 'tensorflow.compiler.xla.xla_data_pb2', 'tensorflow.python.tpu.device_assignment', 'tensorflow.python.tpu.topology', 'tensorflow.core.protobuf.tpu.topology_pb2', 'tensorflow.python.tpu.tpu_strategy_util', 'tensorflow.python.tpu.tpu_system_metadata', 'tensorflow.python.tpu.training_loop', 'tensorflow.python.tpu.tensor_tracer', 'tensorflow.python.platform.analytics', 'tensorflow.python.tpu.tensor_tracer_flags', 'tensorflow.python.tpu.tensor_tracer_report', 'tensorflow.python.tpu.tensor_tracer_pb2', 'tensorflow.python.training.experimental.loss_scale', 'tensorflow.python.ops.array_grad', 'tensorflow.python.ops.cudnn_rnn_grad', 'tensorflow.python.ops.gen_cudnn_rnn_ops', 'tensorflow.python.ops.manip_grad', 'tensorflow.python.ops.manip_ops', 'tensorflow.python.ops.gen_manip_ops', 'tensorflow.python.ops.math_grad', 'tensorflow.python.ops.random_grad', 'tensorflow.python.ops.rnn_grad', 'tensorflow.python.ops.gen_rnn_ops', 'tensorflow.python.ops.sparse_grad', 'tensorflow.python.ops.state_grad', 'tensorflow.python.ops.tensor_array_grad', 'tensorflow.python.ops.special_math_ops', 'opt_einsum', 'opt_einsum.blas', 'opt_einsum.helpers', 'opt_einsum.parser', 'opt_einsum.paths', 'opt_einsum.path_random', 'opt_einsum.contract', 'opt_einsum.backends', 'opt_einsum.backends.cupy', 'opt_einsum.sharing', 'opt_einsum.backends.dispatch', 'opt_einsum.backends.jax', 'opt_einsum.backends.tensorflow', 'opt_einsum.backends.theano', 'opt_einsum.backends.torch', 'opt_einsum._version', 'tensorflow.python.ops.gen_special_math_ops', 'tensorflow.python.eager.wrap_function', 'tensorflow.python.saved_model.nested_structure_coder', 'tensorflow.python.ops.batch_ops', 'tensorflow.python.ops.gen_batch_ops', 'tensorflow.python.ops.critical_section_ops', 'tensorflow.python.ops.gradients', 'tensorflow.python.eager.forwardprop', 'tensorflow.python.ops.gradients_impl', 'tensorflow.python.ops.control_flow_grad', 'tensorflow.python.ops.image_grad', 'tensorflow.python.ops.gen_image_ops', 'tensorflow.python.ops.linalg_grad', 'tensorflow.python.ops.linalg', 'tensorflow.python.ops.linalg.linalg_impl', 'tensorflow.python.ops.optional_grad', 'tensorflow.python.ops.histogram_ops', 'tensorflow.python.ops.lookup_ops', 'tensorflow.python.ops.gen_lookup_ops', 'tensorflow.python.ops.numerics', 'tensorflow.python.ops.partitioned_variables', 'tensorflow.python.ops.proto_ops', 'tensorflow.python.ops.gen_decode_proto_ops', 'tensorflow.python.ops.gen_encode_proto_ops', 'tensorflow.python.ops.stateless_random_ops', 'tensorflow.python.ops.template', 'tensorflow.python.training.tracking.util', 'tensorflow.python.training.saving.functional_saver', 'tensorflow.python.training.saving.saveable_hook', 'tensorflow.python.training.tracking.graph_view', 'tensorflow.python.training.optimizer', 'tensorflow.python.training.slot_creator', 'tensorflow.python.ops.parallel_for', 'tensorflow.python.ops.parallel_for.control_flow_ops', 'tensorflow.python.ops.parallel_for.pfor', 'tensorflow.python.ops.gen_spectral_ops', 'tensorflow.python.ops.parallel_for.gradients', 'tensorflow.python.compiler.tensorrt', 'tensorflow.python.compiler.tensorrt.trt_convert_windows', 'tensorflow.python.ops.initializers_ns', 'tensorflow.python.keras', 'tensorflow.python.keras.models', 'tensorflow.python.keras.backend', 'tensorflow.python.distribute.distribute_coordinator', 'tensorflow.python.training.monitored_session', 'tensorflow.python.ops.resources', 'tensorflow.python.summary.summary', 'google.protobuf.json_format', 'tensorflow.python.training.queue_runner', 'tensorflow.python.training.queue_runner_impl', 'tensorflow.core.protobuf.queue_runner_pb2', 'tensorflow.python.training.session_manager', 'tensorflow.python.keras.backend_config', 'tensorflow.python.ops.image_ops', 'tensorflow.python.ops.image_ops_impl', 'tensorflow.python.training.moving_averages', 'tensorflow.python.keras.metrics', 'tensorflow.python.keras.engine', 'tensorflow.python.keras.engine.base_layer', 'tensorflow.python.keras.constraints', 'tensorflow.python.keras.utils', 'tensorflow.python.keras.utils.generic_utils', 'tensorflow.python.keras.initializers', 'tensorflow.python.ops.init_ops_v2', 'tensorflow.python.keras.regularizers', 'tensorflow.python.keras.engine.base_layer_utils', 'tensorflow.python.keras.engine.input_spec', 'tensorflow.python.keras.engine.node', 'tensorflow.python.keras.mixed_precision', 'tensorflow.python.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.autocast_variable', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale_optimizer', 'tensorflow.python.keras.optimizers', 'tensorflow.python.keras.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.adadelta', 'tensorflow.python.keras.optimizer_v2.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.learning_rate_schedule', 'tensorflow.python.keras.utils.tf_utils', 'tensorflow.python.training.training_ops', 'tensorflow.python.training.gen_training_ops', 'tensorflow.python.keras.optimizer_v2.adagrad', 'tensorflow.python.keras.optimizer_v2.adam', 'tensorflow.python.keras.optimizer_v2.adamax', 'tensorflow.python.keras.optimizer_v2.ftrl', 'tensorflow.python.keras.optimizer_v2.gradient_descent', 'tensorflow.python.keras.optimizer_v2.nadam', 'tensorflow.python.keras.optimizer_v2.rmsprop', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale', 'tensorflow.python.keras.mixed_precision.experimental.policy', 'tensorflow.python.keras.mixed_precision.experimental.device_compatibility_check', 'tensorflow.python.framework.gpu_util', 'tensorflow.python.keras.saving', 'tensorflow.python.keras.saving.saved_model', 'tensorflow.python.keras.saving.saved_model.layer_serialization', 'tensorflow.python.keras.saving.saved_model.base_serialization', 'tensorflow.python.keras.saving.saved_model.json_utils', 'tensorflow.python.util.serialization', 'tensorflow.python.keras.saving.saved_model.constants', 'tensorflow.python.keras.saving.saved_model.save_impl', 'tensorflow.python.keras.saving.saving_utils', 'tensorflow.python.keras.losses', 'tensorflow.python.keras.utils.losses_utils', 'tensorflow.python.keras.utils.io_utils', 'tensorflow.python.keras.saving.saved_model.load', 'tensorflow.python.keras.saving.saved_model.utils', 'tensorflow.python.keras.saving.saved_model.serialized_attributes', 'tensorflow.python.keras.utils.metrics_utils', 'tensorflow.python.saved_model.load', 'tensorflow.python.saved_model.function_deserialization', 'tensorflow.python.framework.function_def_to_graph', 'tensorflow.python.saved_model.load_v1_in_v2', 'tensorflow.python.saved_model.loader_impl', 'tensorflow.core.protobuf.saved_model_pb2', 'tensorflow.python.saved_model.constants', 'tensorflow.python.saved_model.signature_def_utils', 'tensorflow.python.saved_model.signature_def_utils_impl', 'tensorflow.python.saved_model.signature_constants', 'tensorflow.python.saved_model.utils_impl', 'tensorflow.python.saved_model.signature_serialization', 'tensorflow.python.saved_model.function_serialization', 'tensorflow.python.keras.utils.layer_utils', 'tensorflow.python.keras.utils.conv_utils', 'tensorflow.python.keras.utils.version_utils', 'tensorflow.python.module', 'tensorflow.python.module.module', 'tensorflow.python.keras.saving.saved_model.metric_serialization', 'tensorflow.python.keras.engine.network', 'tensorflow.python.keras.engine.compile_utils', 'tensorflow.python.keras.engine.input_layer', 'tensorflow.python.keras.distribute', 'tensorflow.python.keras.distribute.distributed_training_utils', 'tensorflow.python.keras.callbacks', 'tensorflow.python.distribute.distributed_file_utils', 'tensorflow.python.keras.distribute.multi_worker_training_state', 'tensorflow.python.keras.utils.mode_keys', 'tensorflow.python.saved_model.model_utils', 'tensorflow.python.saved_model.model_utils.export_output', 'tensorflow.python.saved_model.model_utils.export_utils', 'tensorflow.python.saved_model.tag_constants', 'tensorflow.python.saved_model.model_utils.mode_keys', 'tensorflow.python.keras.utils.data_utils', 'multiprocessing.dummy', 'multiprocessing.dummy.connection', 'tensorflow.python.profiler.profiler_v2', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'mimetypes', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'tensorflow.python.keras.engine.training_utils', 'tensorflow.python.framework.composite_tensor_utils', 'tensorflow.python.keras.saving.hdf5_format', 'tensorflow.python.keras.saving.model_config', 'tensorflow.python.keras.saving.save', 'tensorflow.python.keras.saving.saved_model.save', 'tensorflow.python.saved_model.save', 'tensorflow.python.saved_model.builder_impl', 'tensorflow.python.saved_model.save_options', 'tensorflow.python.keras.saving.saved_model.network_serialization', 'tensorflow.python.keras.engine.sequential', 'tensorflow.python.keras.layers', 'tensorflow.python.keras.engine.base_preprocessing_layer', 'tensorflow.python.keras.engine.training_generator', 'tensorflow.python.keras.layers.preprocessing', 'tensorflow.python.keras.layers.preprocessing.image_preprocessing', 'tensorflow.python.ops.stateful_random_ops', 'tensorflow.python.ops.gen_stateful_random_ops', 'tensorflow.python.keras.layers.preprocessing.normalization', 'tensorflow.python.keras.layers.preprocessing.normalization_v1', 'tensorflow.python.keras.engine.base_preprocessing_layer_v1', 'tensorflow.python.keras.layers.preprocessing.text_vectorization', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding', 'tensorflow.python.keras.layers.preprocessing.index_lookup', 'tensorflow.python.keras.layers.preprocessing.text_vectorization_v1', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding_v1', 'tensorflow.python.keras.layers.preprocessing.index_lookup_v1', 'tensorflow.python.keras.layers.advanced_activations', 'tensorflow.python.keras.layers.convolutional', 'tensorflow.python.keras.activations', 'tensorflow.python.keras.layers.pooling', 'tensorflow.python.keras.layers.core', 'tensorflow.python.keras.layers.dense_attention', 'tensorflow.python.keras.layers.embeddings', 'tensorflow.python.keras.layers.local', 'tensorflow.python.keras.layers.merge', 'tensorflow.python.keras.layers.noise', 'tensorflow.python.keras.layers.normalization', 'tensorflow.python.keras.layers.normalization_v2', 'tensorflow.python.keras.layers.kernelized', 'tensorflow.python.keras.layers.recurrent', 'tensorflow.python.keras.layers.recurrent_v2', 'tensorflow.python.keras.layers.convolutional_recurrent', 'tensorflow.python.keras.layers.cudnn_recurrent', 'tensorflow.python.keras.layers.wrappers', 'tensorflow.python.keras.layers.rnn_cell_wrapper_v2', 'tensorflow.python.ops.rnn_cell_wrapper_impl', 'tensorflow.python.keras.layers.serialization', 'tensorflow.python.keras.engine.training', 'tensorflow.python.keras.engine.data_adapter', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'dateutil', 'dateutil._version', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'dateutil.relativedelta', 'dateutil._common', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'tensorflow.python.keras.saving.saved_model.model_serialization', 'tensorflow.python.profiler.traceme', 'tensorflow.python.profiler.internal._pywrap_traceme', 'tensorflow.python.keras.engine.training_v1', 'tensorflow.python.keras.engine.training_arrays', 'tensorflow.python.keras.engine.training_distributed', 'tensorflow.python.keras.engine.partial_batch_padding_handler', 'tensorflow.python.keras.engine.training_eager', 'tensorflow.python.feature_column', 'tensorflow.python.feature_column.feature_column_lib', 'tensorflow.python.feature_column.dense_features_v2', 'tensorflow.python.feature_column.dense_features', 'tensorflow.python.feature_column.feature_column_v2', 'tensorflow.python.feature_column.feature_column', 'tensorflow.python.feature_column.utils', 'tensorflow.python.layers', 'tensorflow.python.layers.base', 'tensorflow.python.training.checkpoint_utils', 'tensorflow.python.feature_column.sequence_feature_column', 'tensorflow.python.feature_column.serialization', 'tensorflow.python.layers.layers', 'tensorflow.python.layers.core', 'tensorflow.python.layers.convolutional', 'tensorflow.python.layers.pooling', 'tensorflow.python.layers.normalization', 'tensorflow.python.ops.gradient_checker_v2', 'tensorflow.python.ops.metrics', 'tensorflow.python.ops.metrics_impl', 'tensorflow.python.ops.distributions', 'tensorflow.python.ops.distributions.distributions', 'tensorflow.python.ops.distributions.bernoulli', 'tensorflow.python.ops.distributions.distribution', 'tensorflow.python.ops.distributions.kullback_leibler', 'tensorflow.python.ops.distributions.util', 'tensorflow.python.ops.distributions.beta', 'tensorflow.python.ops.distributions.categorical', 'tensorflow.python.ops.distributions.dirichlet', 'tensorflow.python.ops.distributions.dirichlet_multinomial', 'tensorflow.python.ops.distributions.exponential', 'tensorflow.python.ops.distributions.gamma', 'tensorflow.python.ops.distributions.laplace', 'tensorflow.python.ops.distributions.special_math', 'tensorflow.python.ops.distributions.multinomial', 'tensorflow.python.ops.distributions.normal', 'tensorflow.python.ops.distributions.student_t', 'tensorflow.python.ops.distributions.uniform', 'tensorflow.python.ops.linalg.linalg', 'tensorflow.python.ops.linalg.adjoint_registrations', 'tensorflow.python.ops.linalg.linear_operator', 'tensorflow.python.ops.linalg.linear_operator_algebra', 'tensorflow.python.ops.linalg.linear_operator_util', 'tensorflow.python.ops.linalg.linear_operator_adjoint', 'tensorflow.python.ops.linalg.linear_operator_block_diag', 'tensorflow.python.ops.linalg.linear_operator_circulant', 'tensorflow.python.ops.signal', 'tensorflow.python.ops.signal.fft_ops', 'tensorflow.python.ops.linalg.linear_operator_diag', 'tensorflow.python.ops.linalg.linear_operator_householder', 'tensorflow.python.ops.linalg.linear_operator_identity', 'tensorflow.python.ops.linalg.linear_operator_kronecker', 'tensorflow.python.ops.linalg.cholesky_registrations', 'tensorflow.python.ops.linalg.linear_operator_lower_triangular', 'tensorflow.python.ops.linalg.inverse_registrations', 'tensorflow.python.ops.linalg.linear_operator_addition', 'tensorflow.python.ops.linalg.linear_operator_full_matrix', 'tensorflow.python.ops.linalg.linear_operator_block_lower_triangular', 'tensorflow.python.ops.linalg.linear_operator_inversion', 'tensorflow.python.ops.linalg.matmul_registrations', 'tensorflow.python.ops.linalg.linear_operator_composition', 'tensorflow.python.ops.linalg.linear_operator_zeros', 'tensorflow.python.ops.linalg.registrations_util', 'tensorflow.python.ops.linalg.solve_registrations', 'tensorflow.python.ops.linalg.linear_operator_low_rank_update', 'tensorflow.python.ops.linalg.linear_operator_permutation', 'tensorflow.python.ops.linalg.linear_operator_toeplitz', 'tensorflow.python.ops.linalg.linear_operator_tridiag', 'tensorflow.python.ops.linalg.sparse', 'tensorflow.python.ops.linalg.sparse.sparse', 'tensorflow.python.ops.linalg.sparse.conjugate_gradient', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_grad', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_ops', 'tensorflow.python.ops.linalg.sparse.gen_sparse_csr_matrix_ops', 'tensorflow.python.ops.losses.losses', 'tensorflow.python.ops.signal.signal', 'tensorflow.python.ops.signal.dct_ops', 'tensorflow.python.ops.signal.mel_ops', 'tensorflow.python.ops.signal.shape_ops', 'tensorflow.python.ops.signal.util_ops', 'tensorflow.python.ops.signal.mfcc_ops', 'tensorflow.python.ops.signal.reconstruction_ops', 'tensorflow.python.ops.signal.spectral_ops', 'tensorflow.python.ops.signal.window_ops', 'tensorflow.python.profiler.profiler', 'tensorflow.core.profiler', 'tensorflow.core.profiler.tfprof_log_pb2', 'tensorflow.core.profiler.tfprof_output_pb2', 'tensorflow.python.profiler.model_analyzer', 'tensorflow.core.profiler.tfprof_options_pb2', 'tensorflow.python._pywrap_tfprof', 'tensorflow.python.profiler.option_builder', 'tensorflow.python.profiler.tfprof_logger', 'tensorflow.python.profiler.internal.flops_registry', 'tensorflow.python.profiler.profiler_client', 'tensorflow.python.saved_model.saved_model', 'tensorflow.python.saved_model.builder', 'tensorflow.python.saved_model.loader', 'tensorflow.python.saved_model.main_op', 'tensorflow.python.saved_model.main_op_impl', 'tensorflow.python.saved_model.method_name_updater', 'tensorflow.python.saved_model.utils', 'tensorflow.python.saved_model.simple_save', 'tensorflow.python.tpu.api', 'tensorflow.python.tpu.bfloat16', 'tensorflow.python.tpu.feature_column_v2', 'tensorflow.python.tpu.feature_column', 'tensorflow.python.tpu.tpu_embedding', 'tensorflow.core.protobuf.tpu.optimization_parameters_pb2', 'google.protobuf.wrappers_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_output_layout_pb2', 'tensorflow.python.tpu.tpu_optimizer', 'tensorflow.python.user_ops', 'tensorflow.python.user_ops.user_ops', 'tensorflow.python.ops.gen_user_ops', 'tensorflow.python.ops.gen_audio_ops', 'tensorflow.python.ops.gen_boosted_trees_ops', 'tensorflow.python.ops.gen_sendrecv_ops', 'tensorflow.python.training.training', 'tensorflow.python.ops.sdca_ops', 'tensorflow.python.ops.gen_sdca_ops', 'tensorflow.python.training.adadelta', 'tensorflow.python.training.adagrad', 'tensorflow.python.training.adagrad_da', 'tensorflow.python.training.proximal_adagrad', 'tensorflow.python.training.adam', 'tensorflow.python.training.ftrl', 'tensorflow.python.training.experimental.loss_scale_optimizer', 'tensorflow.python.training.experimental.mixed_precision', 'tensorflow.python.training.momentum', 'tensorflow.python.training.rmsprop', 'tensorflow.python.training.gradient_descent', 'tensorflow.python.training.proximal_gradient_descent', 'tensorflow.python.training.sync_replicas_optimizer', 'tensorflow.python.training.input', 'tensorflow.python.layers.utils', 'tensorflow.python.training.basic_loops', 'tensorflow.python.training.tracking.python_state', 'tensorflow.python.training.supervisor', 'tensorflow.python.training.warm_starting_util', 'tensorflow.python.training.checkpoint_ops', 'tensorflow.python.ops.gen_checkpoint_ops', 'tensorflow.core.example', 'tensorflow.core.example.example_pb2', 'tensorflow.core.example.feature_pb2', 'tensorflow.python.training.learning_rate_decay', 'tensorflow.python.training.quantize_training', 'tensorflow.python._pywrap_quantize_training', 'tensorflow.python.platform.resource_loader', 'tensorflow.python.platform.sysconfig', 'tensorflow.python.platform.test', 'tensorflow.python.framework.test_util', 'absl.testing', 'absl.testing.parameterized', 'absl.testing.absltest', 'shlex', 'absl._enum_module', 'absl.testing._pretty_print_reporter', 'absl.third_party', 'absl.third_party.unittest3_backport', 'absl.third_party.unittest3_backport.case', 'absl.third_party.unittest3_backport.result', 'absl.testing.xml_reporter', 'xml.sax', 'xml.sax.xmlreader', 'xml.sax.handler', 'xml.sax._exceptions', 'xml.sax.saxutils', 'unittest.mock', 'tensorflow.python._pywrap_stacktrace_handler', 'tensorflow.python._pywrap_util_port', 'tensorflow.python.ops.control_flow_util_v2', 'tensorflow.python.platform.googletest', 'tensorflow.python.platform.benchmark', 'tensorflow.core.util.test_log_pb2', 'tensorflow.python.util.protobuf', 'tensorflow.python.util.protobuf.compare', 'tensorflow.python.ops.gradient_checker', 'tensorflow.python.compat.v2_compat', 'tensorflow.python.ops.control_flow_v2_toggles', 'tensorflow.python.eager.remote', 'tensorflow.python.platform.remote_utils', 'tensorflow.python.ops.rnn', 'tensorflow.python.ops.rnn_cell_impl', 'tensorflow.python.ops.rnn_cell', 'tensorflow.python.debug', 'tensorflow.python.debug.lib', 'tensorflow.python.debug.lib.debug_data', 'tensorflow.python.debug.lib.debug_graphs', 'tensorflow.python.debug.lib.debug_gradients', 'tensorflow.python.debug.lib.debug_utils', 'tensorflow.python.debug.wrappers', 'tensorflow.python.debug.wrappers.dumping_wrapper', 'tensorflow.python.debug.wrappers.framework', 'tensorflow.python.debug.wrappers.grpc_wrapper', 'tensorflow.python.debug.lib.common', 'tensorflow.python.debug.wrappers.hooks', 'tensorflow.python.debug.wrappers.local_cli_wrapper', 'tensorflow.python.debug.cli', 'tensorflow.python.debug.cli.analyzer_cli', 'tensorflow.python.debug.cli.cli_config', 'tensorflow.python.debug.cli.debugger_cli_common', 'tensorflow.python.debug.cli.cli_shared', 'tensorflow.python.debug.cli.command_parser', 'tensorflow.python.debug.cli.tensor_format', 'tensorflow.python.debug.cli.evaluator', 'tensorflow.python.debug.cli.ui_factory', 'tensorflow.python.debug.lib.source_utils', 'tensorflow.python.debug.lib.profiling', 'tensorflow.python.debug.cli.profile_analyzer_cli', 'tensorflow.python.debug.lib.check_numerics_callback', 'tensorflow.core.protobuf.debug_event_pb2', 'tensorflow.python.debug.lib.op_callbacks_common', 'tensorflow.python.ops.gen_debug_ops', 'tensorflow.python.debug.lib.dumping_callback', 'tensorflow.python.debug.lib.debug_events_writer', 'tensorflow.python._pywrap_debug_events_writer', 'tensorflow.python.dlpack', 'tensorflow.python.dlpack.dlpack', 'tensorflow.python.compiler.mlir', 'tensorflow.python.compiler.mlir.mlir', 'tensorflow.python.pywrap_mlir', 'tensorflow.python._pywrap_mlir', 'tensorflow.python.tools', 'tensorflow.python.tools.module_util', 'tensorflow._api', 'tensorflow._api.v2', 'tensorflow._api.v2.audio', 'tensorflow._api.v2.autodiff', 'tensorflow._api.v2.autograph', 'tensorflow._api.v2.autograph.experimental', 'tensorflow._api.v2.bitwise', 'tensorflow._api.v2.compat', 'tensorflow._api.v2.compat.v1', 'tensorflow._api.v2.compat.v1.app', 'tensorflow._api.v2.compat.v1.audio', 'tensorflow._api.v2.compat.v1.autograph', 'tensorflow._api.v2.compat.v1.autograph.experimental', 'tensorflow._api.v2.compat.v1.bitwise', 'tensorflow._api.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v1.compat.v1', 'tensorflow._api.v2.compat.v1.compat.v1.compat', 'tensorflow._api.v2.compat.v1.config', 'tensorflow._api.v2.compat.v1.config.experimental', 'tensorflow._api.v2.compat.v1.config.optimizer', 'tensorflow._api.v2.compat.v1.config.threading', 'tensorflow._api.v2.compat.v1.data', 'tensorflow._api.v2.compat.v1.data.experimental', 'tensorflow._api.v2.compat.v1.debugging', 'tensorflow._api.v2.compat.v1.debugging.experimental', 'tensorflow._api.v2.compat.v1.distribute', 'tensorflow._api.v2.compat.v1.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v1.distribute.experimental', 'tensorflow._api.v2.compat.v1.distributions', 'tensorflow._api.v2.compat.v1.dtypes', 'tensorflow._api.v2.compat.v1.errors', 'tensorflow._api.v2.compat.v1.experimental', 'tensorflow._api.v2.compat.v1.feature_column', 'tensorflow._api.v2.compat.v1.gfile', 'tensorflow._api.v2.compat.v1.graph_util', 'tensorflow._api.v2.compat.v1.image', 'tensorflow._api.v2.compat.v1.initializers', 'tensorflow._api.v2.compat.v1.io', 'tensorflow._api.v2.compat.v1.io.gfile', 'tensorflow._api.v2.compat.v1.layers', 'tensorflow._api.v2.compat.v1.layers.experimental', 'tensorflow._api.v2.compat.v1.linalg', 'tensorflow._api.v2.compat.v1.linalg.experimental', 'tensorflow._api.v2.compat.v1.lite', 'tensorflow._api.v2.compat.v1.lite.constants', 'tensorflow.lite', 'tensorflow.lite.python', 'tensorflow.lite.python.lite_constants', 'tensorflow.lite.toco', 'tensorflow.lite.toco.toco_flags_pb2', 'tensorflow.lite.toco.types_pb2', 'tensorflow._api.v2.compat.v1.lite.experimental', 'tensorflow._api.v2.compat.v1.lite.experimental.nn', 'tensorflow.lite.python.lite', 'tensorflow.lite.experimental', 'tensorflow.lite.experimental.examples', 'tensorflow.lite.experimental.examples.lstm', 'tensorflow.lite.experimental.examples.lstm.rnn', 'tensorflow.lite.python.op_hint', 'tensorflow.lite.experimental.examples.lstm.rnn_cell', 'tensorflow.lite.experimental.microfrontend', 'tensorflow.lite.experimental.microfrontend.python', 'tensorflow.lite.experimental.microfrontend.python.ops', 'tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op', 'tensorflow.lite.experimental.microfrontend.ops', 'tensorflow.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op', '0294638c8bf50491b025b096f3dba0a1', 'tensorflow.lite.experimental.tensorboard', 'tensorflow.lite.experimental.tensorboard.ops_util', 'tensorflow.lite.python.wrap_toco', 'tensorflow.python._pywrap_toco_api', 'tensorflow.lite.python.convert', 'distutils.spawn', 'distutils.errors', 'distutils.debug', 'distutils.log', 'tensorflow.lite.python.util', 'tensorflow.python.framework.convert_to_constants', 'tensorflow.python.grappler', 'tensorflow.python.grappler.tf_optimizer', 'tensorflow.python._pywrap_tf_optimizer', 'tensorflow.python.grappler.cluster', 'tensorflow.core.grappler', 'tensorflow.core.grappler.costs', 'tensorflow.core.grappler.costs.op_performance_data_pb2', 'tensorflow.core.protobuf.device_properties_pb2', 'tensorflow.python._pywrap_tf_cluster', 'tensorflow.lite.toco.model_flags_pb2', 'tensorflow.lite.python.convert_saved_model', 'tensorflow.lite.python.interpreter', 'tensorflow.lite.python.optimize', 'tensorflow.lite.python.optimize.calibrator', 'tensorflow._api.v2.compat.v1.logging', 'tensorflow._api.v2.compat.v1.lookup', 'tensorflow._api.v2.compat.v1.lookup.experimental', 'tensorflow._api.v2.compat.v1.losses', 'tensorflow._api.v2.compat.v1.manip', 'tensorflow._api.v2.compat.v1.math', 'tensorflow._api.v2.compat.v1.math.special', 'tensorflow._api.v2.compat.v1.metrics', 'tensorflow._api.v2.compat.v1.mixed_precision', 'tensorflow._api.v2.compat.v1.mixed_precision.experimental', 'tensorflow._api.v2.compat.v1.mlir', 'tensorflow._api.v2.compat.v1.mlir.experimental', 'tensorflow._api.v2.compat.v1.nest', 'tensorflow._api.v2.compat.v1.nn', 'tensorflow._api.v2.compat.v1.nn.rnn_cell', 'tensorflow._api.v2.compat.v1.profiler', 'tensorflow._api.v2.compat.v1.python_io', 'tensorflow._api.v2.compat.v1.quantization', 'tensorflow._api.v2.compat.v1.queue', 'tensorflow._api.v2.compat.v1.ragged', 'tensorflow._api.v2.compat.v1.random', 'tensorflow._api.v2.compat.v1.random.experimental', 'tensorflow._api.v2.compat.v1.raw_ops', 'tensorflow._api.v2.compat.v1.resource_loader', 'tensorflow._api.v2.compat.v1.saved_model', 'tensorflow._api.v2.compat.v1.saved_model.builder', 'tensorflow._api.v2.compat.v1.saved_model.constants', 'tensorflow._api.v2.compat.v1.saved_model.experimental', 'tensorflow._api.v2.compat.v1.saved_model.loader', 'tensorflow._api.v2.compat.v1.saved_model.main_op', 'tensorflow._api.v2.compat.v1.saved_model.signature_constants', 'tensorflow._api.v2.compat.v1.saved_model.signature_def_utils', 'tensorflow._api.v2.compat.v1.saved_model.tag_constants', 'tensorflow._api.v2.compat.v1.saved_model.utils', 'tensorflow._api.v2.compat.v1.sets', 'tensorflow._api.v2.compat.v1.signal', 'tensorflow._api.v2.compat.v1.sparse', 'tensorflow._api.v2.compat.v1.spectral', 'tensorflow._api.v2.compat.v1.strings', 'tensorflow._api.v2.compat.v1.summary', 'tensorflow._api.v2.compat.v1.sysconfig', 'tensorflow._api.v2.compat.v1.test', 'tensorflow._api.v2.compat.v1.tpu', 'tensorflow._api.v2.compat.v1.tpu.experimental', 'tensorflow._api.v2.compat.v1.train', 'tensorflow._api.v2.compat.v1.train.experimental', 'tensorflow._api.v2.compat.v1.train.queue_runner', 'tensorflow._api.v2.compat.v1.user_ops', 'tensorflow._api.v2.compat.v1.version', 'tensorflow._api.v2.compat.v1.xla', 'tensorflow._api.v2.compat.v1.xla.experimental', 'tensorflow.python.keras.api', 'tensorflow.python.keras.api.keras', 'tensorflow.python.keras.api.keras.activations', 'tensorflow.python.util.module_wrapper', 'tensorflow.tools.compatibility', 'tensorflow.tools.compatibility.all_renames_v2', 'tensorflow.tools.compatibility.renames_v2', 'tensorflow.python.keras.api.keras.applications', 'tensorflow.python.keras.api.keras.applications.densenet', 'tensorflow.python.keras.applications', 'tensorflow.python.keras.applications.densenet', 'tensorflow.python.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api.keras.applications.inception_v3', 'tensorflow.python.keras.applications.inception_v3', 'tensorflow.python.keras.api.keras.applications.mobilenet', 'tensorflow.python.keras.applications.mobilenet', 'tensorflow.python.keras.api.keras.applications.mobilenet_v2', 'tensorflow.python.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api.keras.applications.nasnet', 'tensorflow.python.keras.applications.nasnet', 'tensorflow.python.keras.api.keras.applications.resnet', 'tensorflow.python.keras.applications.resnet', 'tensorflow.python.keras.api.keras.applications.resnet50', 'tensorflow.python.keras.api.keras.applications.resnet_v2', 'tensorflow.python.keras.applications.resnet_v2', 'tensorflow.python.keras.api.keras.applications.vgg16', 'tensorflow.python.keras.applications.vgg16', 'tensorflow.python.keras.api.keras.applications.vgg19', 'tensorflow.python.keras.applications.vgg19', 'tensorflow.python.keras.api.keras.applications.xception', 'tensorflow.python.keras.applications.xception', 'tensorflow.python.keras.api.keras.backend', 'tensorflow.python.keras.api.keras.callbacks', 'tensorflow.python.keras.callbacks_v1', 'tensorflow.python.keras.api.keras.constraints', 'tensorflow.python.keras.api.keras.datasets', 'tensorflow.python.keras.api.keras.datasets.boston_housing', 'tensorflow.python.keras.datasets', 'tensorflow.python.keras.datasets.boston_housing', 'tensorflow.python.keras.api.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar', 'tensorflow.python.keras.api.keras.datasets.cifar100', 'tensorflow.python.keras.datasets.cifar100', 'tensorflow.python.keras.api.keras.datasets.fashion_mnist', 'tensorflow.python.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api.keras.datasets.imdb', 'tensorflow.python.keras.datasets.imdb', 'tensorflow.python.keras.preprocessing', 'keras_preprocessing', 'tensorflow.python.keras.preprocessing.image', 'keras_preprocessing.image', 'keras_preprocessing.image.affine_transformations', 'keras_preprocessing.image.utils', 'keras_preprocessing.image.dataframe_iterator', 'keras_preprocessing.image.iterator', 'keras_preprocessing.image.directory_iterator', 'keras_preprocessing.image.image_data_generator', 'keras_preprocessing.image.numpy_array_iterator', 'tensorflow.python.keras.preprocessing.sequence', 'keras_preprocessing.sequence', 'tensorflow.python.keras.preprocessing.text', 'keras_preprocessing.text', 'tensorflow.python.keras.utils.all_utils', 'tensorflow.python.keras.utils.multi_gpu_utils', 'tensorflow.python.keras.utils.np_utils', 'tensorflow.python.keras.utils.vis_utils', 'tensorflow.python.keras.api.keras.datasets.mnist', 'tensorflow.python.keras.datasets.mnist', 'tensorflow.python.keras.api.keras.datasets.reuters', 'tensorflow.python.keras.datasets.reuters', 'tensorflow.python.keras.api.keras.estimator', 'tensorflow.python.keras.estimator', 'tensorflow.python.keras.api.keras.experimental', 'tensorflow.python.keras.premade', 'tensorflow.python.keras.premade.linear', 'tensorflow.python.keras.premade.wide_deep', 'tensorflow.python.keras.saving.saved_model_experimental', 'tensorflow.python.keras.api.keras.initializers', 'tensorflow.python.keras.api.keras.layers', 'tensorflow.python.keras.api.keras.layers.experimental', 'tensorflow.python.keras.api.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api.keras.losses', 'tensorflow.python.keras.api.keras.metrics', 'tensorflow.python.keras.api.keras.mixed_precision', 'tensorflow.python.keras.api.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.get_layer_policy', 'tensorflow.python.keras.api.keras.models', 'tensorflow.python.keras.api.keras.optimizers', 'tensorflow.python.keras.api.keras.optimizers.schedules', 'tensorflow.python.keras.api.keras.preprocessing', 'tensorflow.python.keras.api.keras.preprocessing.image', 'tensorflow.python.keras.api.keras.preprocessing.sequence', 'tensorflow.python.keras.api.keras.preprocessing.text', 'tensorflow.python.keras.api.keras.regularizers', 'tensorflow.python.keras.api.keras.utils', 'tensorflow.python.keras.api.keras.wrappers', 'tensorflow.python.keras.api.keras.wrappers.scikit_learn', 'tensorflow.python.keras.wrappers', 'tensorflow.python.keras.wrappers.scikit_learn', 'tensorflow.python.keras.api._v1', 'tensorflow.python.keras.api._v1.keras', 'tensorflow.python.keras.api._v1.keras.activations', 'tensorflow.python.keras.api._v1.keras.applications', 'tensorflow.python.keras.api._v1.keras.applications.densenet', 'tensorflow.python.keras.api._v1.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v1.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.inception_v3', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v1.keras.applications.nasnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet50', 'tensorflow.python.keras.api._v1.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.vgg16', 'tensorflow.python.keras.api._v1.keras.applications.vgg19', 'tensorflow.python.keras.api._v1.keras.applications.xception', 'tensorflow.python.keras.api._v1.keras.backend', 'tensorflow.python.keras.api._v1.keras.callbacks', 'tensorflow.python.keras.api._v1.keras.constraints', 'tensorflow.python.keras.api._v1.keras.datasets', 'tensorflow.python.keras.api._v1.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v1.keras.datasets.cifar10', 'tensorflow.python.keras.api._v1.keras.datasets.cifar100', 'tensorflow.python.keras.api._v1.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v1.keras.datasets.imdb', 'tensorflow.python.keras.api._v1.keras.datasets.mnist', 'tensorflow.python.keras.api._v1.keras.datasets.reuters', 'tensorflow.python.keras.api._v1.keras.estimator', 'tensorflow.python.keras.api._v1.keras.experimental', 'tensorflow.python.keras.api._v1.keras.initializers', 'tensorflow.python.keras.api._v1.keras.layers', 'tensorflow.python.keras.api._v1.keras.layers.experimental', 'tensorflow.python.keras.api._v1.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v1.keras.losses', 'tensorflow.python.keras.api._v1.keras.metrics', 'tensorflow.python.keras.api._v1.keras.mixed_precision', 'tensorflow.python.keras.api._v1.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v1.keras.models', 'tensorflow.python.keras.api._v1.keras.optimizers', 'tensorflow.python.keras.api._v1.keras.optimizers.schedules', 'tensorflow.python.keras.api._v1.keras.preprocessing', 'tensorflow.python.keras.api._v1.keras.preprocessing.image', 'tensorflow.python.keras.api._v1.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v1.keras.preprocessing.text', 'tensorflow.python.keras.api._v1.keras.regularizers', 'tensorflow.python.keras.api._v1.keras.utils', 'tensorflow.python.keras.api._v1.keras.wrappers', 'tensorflow.python.keras.api._v1.keras.wrappers.scikit_learn', 'tensorflow._api.v2.compat.v1.compat.v2', 'tensorflow._api.v2.compat.v1.compat.v2.compat', 'tensorflow._api.v2.compat.v2', 'tensorflow._api.v2.compat.v2.audio', 'tensorflow._api.v2.compat.v2.autodiff', 'tensorflow._api.v2.compat.v2.autograph', 'tensorflow._api.v2.compat.v2.autograph.experimental', 'tensorflow._api.v2.compat.v2.bitwise', 'tensorflow._api.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.compat.v1', 'tensorflow._api.v2.compat.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v2.compat.v2', 'tensorflow._api.v2.compat.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.config', 'tensorflow._api.v2.compat.v2.config.experimental', 'tensorflow._api.v2.compat.v2.config.optimizer', 'tensorflow._api.v2.compat.v2.config.threading', 'tensorflow._api.v2.compat.v2.data', 'tensorflow._api.v2.compat.v2.data.experimental', 'tensorflow._api.v2.compat.v2.debugging', 'tensorflow._api.v2.compat.v2.debugging.experimental', 'tensorflow._api.v2.compat.v2.distribute', 'tensorflow._api.v2.compat.v2.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v2.distribute.experimental', 'tensorflow._api.v2.compat.v2.dtypes', 'tensorflow._api.v2.compat.v2.errors', 'tensorflow._api.v2.compat.v2.experimental', 'tensorflow._api.v2.compat.v2.experimental.dlpack', 'tensorflow._api.v2.compat.v2.experimental.tensorrt', 'tensorflow._api.v2.compat.v2.feature_column', 'tensorflow._api.v2.compat.v2.graph_util', 'tensorflow._api.v2.compat.v2.image', 'tensorflow._api.v2.compat.v2.io', 'tensorflow._api.v2.compat.v2.io.gfile', 'tensorflow._api.v2.compat.v2.linalg', 'tensorflow._api.v2.compat.v2.linalg.experimental', 'tensorflow._api.v2.compat.v2.lite', 'tensorflow._api.v2.compat.v2.lite.experimental', 'tensorflow._api.v2.compat.v2.lookup', 'tensorflow._api.v2.compat.v2.lookup.experimental', 'tensorflow._api.v2.compat.v2.math', 'tensorflow._api.v2.compat.v2.math.special', 'tensorflow._api.v2.compat.v2.mixed_precision', 'tensorflow._api.v2.compat.v2.mixed_precision.experimental', 'tensorflow._api.v2.compat.v2.mlir', 'tensorflow._api.v2.compat.v2.mlir.experimental', 'tensorflow._api.v2.compat.v2.nest', 'tensorflow._api.v2.compat.v2.nn', 'tensorflow._api.v2.compat.v2.profiler', 'tensorflow._api.v2.compat.v2.profiler.experimental', 'tensorflow._api.v2.compat.v2.profiler.experimental.client', 'tensorflow._api.v2.compat.v2.profiler.experimental.server', 'tensorflow._api.v2.compat.v2.quantization', 'tensorflow._api.v2.compat.v2.queue', 'tensorflow._api.v2.compat.v2.ragged', 'tensorflow._api.v2.compat.v2.random', 'tensorflow._api.v2.compat.v2.random.experimental', 'tensorflow._api.v2.compat.v2.raw_ops', 'tensorflow._api.v2.compat.v2.saved_model', 'tensorflow._api.v2.compat.v2.sets', 'tensorflow._api.v2.compat.v2.signal', 'tensorflow._api.v2.compat.v2.sparse', 'tensorflow._api.v2.compat.v2.strings', 'tensorflow._api.v2.compat.v2.summary', 'tensorflow._api.v2.compat.v2.summary.experimental', 'tensorflow._api.v2.compat.v2.sysconfig', 'tensorflow._api.v2.compat.v2.test', 'tensorflow._api.v2.compat.v2.tpu', 'tensorflow._api.v2.compat.v2.tpu.experimental', 'tensorflow._api.v2.compat.v2.train', 'tensorflow._api.v2.compat.v2.train.experimental', 'tensorflow._api.v2.compat.v2.version', 'tensorflow._api.v2.compat.v2.xla', 'tensorflow._api.v2.compat.v2.xla.experimental', 'tensorboard', 'tensorboard.errors', 'tensorboard.lazy', 'tensorboard.version', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_shape_pb2', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.util.lazy_tensor_creator', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.event_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary._tf', 'tensorboard.summary._tf.summary', 'tensorflow.python.keras.api._v2', 'tensorflow.python.keras.api._v2.keras', 'tensorflow.python.keras.api._v2.keras.activations', 'tensorflow.python.keras.api._v2.keras.applications', 'tensorflow.python.keras.api._v2.keras.applications.densenet', 'tensorflow.python.keras.api._v2.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v2.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.inception_v3', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v2.keras.applications.nasnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet50', 'tensorflow.python.keras.api._v2.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.vgg16', 'tensorflow.python.keras.api._v2.keras.applications.vgg19', 'tensorflow.python.keras.api._v2.keras.applications.xception', 'tensorflow.python.keras.api._v2.keras.backend', 'tensorflow.python.keras.api._v2.keras.callbacks', 'tensorflow.python.keras.api._v2.keras.constraints', 'tensorflow.python.keras.api._v2.keras.datasets', 'tensorflow.python.keras.api._v2.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v2.keras.datasets.cifar10', 'tensorflow.python.keras.api._v2.keras.datasets.cifar100', 'tensorflow.python.keras.api._v2.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v2.keras.datasets.imdb', 'tensorflow.python.keras.api._v2.keras.datasets.mnist', 'tensorflow.python.keras.api._v2.keras.datasets.reuters', 'tensorflow.python.keras.api._v2.keras.estimator', 'tensorflow.python.keras.api._v2.keras.experimental', 'tensorflow.python.keras.api._v2.keras.initializers', 'tensorflow.python.keras.api._v2.keras.layers', 'tensorflow.python.keras.api._v2.keras.layers.experimental', 'tensorflow.python.keras.api._v2.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v2.keras.losses', 'tensorflow.python.keras.api._v2.keras.metrics', 'tensorflow.python.keras.api._v2.keras.mixed_precision', 'tensorflow.python.keras.api._v2.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v2.keras.models', 'tensorflow.python.keras.api._v2.keras.optimizers', 'tensorflow.python.keras.api._v2.keras.optimizers.schedules', 'tensorflow.python.keras.api._v2.keras.preprocessing', 'tensorflow.python.keras.api._v2.keras.preprocessing.image', 'tensorflow.python.keras.api._v2.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v2.keras.preprocessing.text', 'tensorflow.python.keras.api._v2.keras.regularizers', 'tensorflow.python.keras.api._v2.keras.utils', 'tensorflow.python.keras.api._v2.keras.wrappers', 'tensorflow.python.keras.api._v2.keras.wrappers.scikit_learn', 'tensorflow._api.v2.config', 'tensorflow._api.v2.config.experimental', 'tensorflow._api.v2.config.optimizer', 'tensorflow._api.v2.config.threading', 'tensorflow._api.v2.data', 'tensorflow._api.v2.data.experimental', 'tensorflow._api.v2.debugging', 'tensorflow._api.v2.debugging.experimental', 'tensorflow._api.v2.distribute', 'tensorflow._api.v2.distribute.cluster_resolver', 'tensorflow._api.v2.distribute.experimental', 'tensorflow._api.v2.dtypes', 'tensorflow._api.v2.errors', 'tensorflow._api.v2.experimental', 'tensorflow._api.v2.experimental.dlpack', 'tensorflow._api.v2.experimental.tensorrt', 'tensorflow._api.v2.feature_column', 'tensorflow._api.v2.graph_util', 'tensorflow._api.v2.image', 'tensorflow._api.v2.io', 'tensorflow._api.v2.io.gfile', 'tensorflow._api.v2.linalg', 'tensorflow._api.v2.linalg.experimental', 'tensorflow._api.v2.lite', 'tensorflow._api.v2.lite.experimental', 'tensorflow._api.v2.lookup', 'tensorflow._api.v2.lookup.experimental', 'tensorflow._api.v2.math', 'tensorflow._api.v2.math.special', 'tensorflow._api.v2.mixed_precision', 'tensorflow._api.v2.mixed_precision.experimental', 'tensorflow._api.v2.mlir', 'tensorflow._api.v2.mlir.experimental', 'tensorflow._api.v2.nest', 'tensorflow._api.v2.nn', 'tensorflow._api.v2.profiler', 'tensorflow._api.v2.profiler.experimental', 'tensorflow._api.v2.profiler.experimental.client', 'tensorflow._api.v2.profiler.experimental.server', 'tensorflow._api.v2.quantization', 'tensorflow._api.v2.queue', 'tensorflow._api.v2.ragged', 'tensorflow._api.v2.random', 'tensorflow._api.v2.random.experimental', 'tensorflow._api.v2.raw_ops', 'tensorflow._api.v2.saved_model', 'tensorflow._api.v2.sets', 'tensorflow._api.v2.signal', 'tensorflow._api.v2.sparse', 'tensorflow._api.v2.strings', 'tensorflow._api.v2.summary', 'tensorflow._api.v2.summary.experimental', 'tensorflow._api.v2.sysconfig', 'tensorflow._api.v2.test', 'tensorflow._api.v2.tpu', 'tensorflow._api.v2.tpu.experimental', 'tensorflow._api.v2.train', 'tensorflow._api.v2.train.experimental', 'tensorflow._api.v2.version', 'tensorflow._api.v2.xla', 'tensorflow._api.v2.xla.experimental', 'tensorflow.keras', 'tensorflow.keras.activations', 'tensorflow.keras.applications', 'tensorflow.keras.applications.densenet', 'tensorflow.keras.applications.imagenet_utils', 'tensorflow.keras.applications.inception_resnet_v2', 'tensorflow.keras.applications.inception_v3', 'tensorflow.keras.applications.mobilenet', 'tensorflow.keras.applications.mobilenet_v2', 'tensorflow.keras.applications.nasnet', 'tensorflow.keras.applications.resnet', 'tensorflow.keras.applications.resnet50', 'tensorflow.keras.applications.resnet_v2', 'tensorflow.keras.applications.vgg16', 'tensorflow.keras.applications.vgg19', 'tensorflow.keras.applications.xception', 'tensorflow.keras.backend', 'tensorflow.keras.callbacks', 'tensorflow.keras.constraints', 'tensorflow.keras.datasets', 'tensorflow.keras.datasets.boston_housing', 'tensorflow.keras.datasets.cifar10', 'tensorflow.keras.datasets.cifar100', 'tensorflow.keras.datasets.fashion_mnist', 'tensorflow.keras.datasets.imdb', 'tensorflow.keras.datasets.mnist', 'tensorflow.keras.datasets.reuters', 'tensorflow.keras.estimator', 'tensorflow.keras.experimental', 'tensorflow.keras.initializers', 'tensorflow.keras.layers', 'tensorflow.keras.layers.experimental', 'tensorflow.keras.layers.experimental.preprocessing', 'tensorflow.keras.losses', 'tensorflow.keras.metrics', 'tensorflow.keras.mixed_precision', 'tensorflow.keras.mixed_precision.experimental', 'tensorflow.keras.models', 'tensorflow.keras.optimizers', 'tensorflow.keras.optimizers.schedules', 'tensorflow.keras.preprocessing', 'tensorflow.keras.preprocessing.image', 'tensorflow.keras.preprocessing.sequence', 'tensorflow.keras.preprocessing.text', 'tensorflow.keras.regularizers', 'tensorflow.keras.utils', 'tensorflow.keras.wrappers', 'tensorflow.keras.wrappers.scikit_learn', 'keras.utils.losses_utils', 'keras.utils.metrics_utils', 'keras.utils.layer_utils', 'keras.utils.vis_utils', 'keras.models', 'keras.engine', 'keras.engine.input_layer', 'keras.engine.base_layer', 'keras.initializers', 'keras.legacy', 'keras.legacy.interfaces', 'keras.engine.network', 'keras.engine.saving', 'keras.losses', 'keras.optimizers', 'keras.engine.training', 'keras.engine.training_utils', 'keras.metrics', 'keras.layers', 'keras.layers.merge', 'keras.layers.core', 'keras.activations', 'keras.regularizers', 'keras.constraints', 'keras.layers.convolutional', 'keras.layers.pooling', 'keras.legacy.layers', 'keras.layers.local', 'keras.layers.recurrent', 'keras.layers.cudnn_recurrent', 'keras.layers.normalization', 'keras.layers.embeddings', 'keras.layers.noise', 'keras.layers.advanced_activations', 'keras.layers.wrappers', 'keras.layers.convolutional_recurrent', 'keras.engine.training_arrays', 'keras.callbacks', 'keras.callbacks.callbacks', 'keras.callbacks.tensorboard_v2', 'keras.engine.training_generator', 'keras.engine.sequential', 'keras.utils.multi_gpu_utils', 'keras.applications', 'keras_applications', 'keras_applications.vgg16', 'keras_applications.imagenet_utils', 'keras_applications.vgg19', 'keras_applications.resnet50', 'keras_applications.inception_v3', 'keras_applications.inception_resnet_v2', 'keras_applications.xception', 'keras_applications.mobilenet', 'keras_applications.mobilenet_v2', 'keras_applications.densenet', 'keras_applications.nasnet', 'keras_applications.resnet', 'keras_applications.resnet_common', 'keras_applications.resnet_v2', 'keras_applications.resnext', 'keras.applications.vgg16', 'keras.applications.vgg19', 'keras.applications.resnet50', 'keras.applications.inception_v3', 'keras.applications.inception_resnet_v2', 'keras.applications.xception', 'keras.applications.mobilenet', 'keras.applications.mobilenet_v2', 'keras.applications.densenet', 'keras.applications.nasnet', 'keras.applications.resnet', 'keras.applications.resnet_v2', 'keras.datasets', 'keras.datasets.mnist', 'keras.datasets.imdb', 'keras.preprocessing', 'keras.preprocessing.image', 'keras.preprocessing.sequence', 'keras.preprocessing.text', 'keras.datasets.reuters', 'keras.datasets.cifar10', 'keras.datasets.cifar', 'keras.datasets.cifar100', 'keras.datasets.boston_housing', 'keras.datasets.fashion_mnist', 'keras.wrappers', 'keras.wrappers.scikit_learn', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from C:\Users\Chelovek\.matplotlib\fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :model exists
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib:CONFIGDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib:(private) matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:loaded rc file D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data\matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.1
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is win32
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_winapi', '_bootlocale', '_locale', 'encodings.cp1251', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'pywin32_bootstrap', 'glob', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'fnmatch', 'posixpath', 'numpy', '__future__', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'ctypes', '_ctypes', 'struct', '_struct', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', 'time', 'math', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'errno', 'urllib', 'urllib.parse', 'pickle', '_compat_pickle', '_pickle', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'collections.abc', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'subprocess', 'signal', 'threading', 'traceback', 'linecache', 'tokenize', 'token', '_weakrefset', 'msvcrt', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'ast', '_ast', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'weakref', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random._bit_generator', '_cython_0_29_17', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'tqdm', 'tqdm.std', 'tqdm.utils', 'socket', '_socket', 'selectors', 'select', 'colorama', 'colorama.initialise', 'atexit', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes.wintypes', 'unicodedata', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'logging', 'string', '_string', 'common', 'argparse', 'gettext', 'locale', 'librosa', 'librosa.version', 'librosa._cache', 'joblib', 'joblib.memory', 'pydoc', 'inspect', 'dis', 'opcode', '_opcode', 'pkgutil', 'joblib.hashing', 'joblib._compat', 'joblib.func_inspect', 'joblib.logger', 'pprint', 'joblib.disk', 'joblib._memory_helpers', 'joblib._store_backends', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'joblib.backports', 'distutils', 'distutils.version', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'tempfile', '_multiprocessing', 'joblib.format_stack', 'joblib.my_exceptions', 'joblib._parallel_backends', 'gc', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'uuid', 'multiprocessing.pool', 'queue', '_queue', 'multiprocessing.util', 'joblib.executor', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_win32', 'multiprocessing.popen_spawn_win32', 'multiprocessing.spawn', 'runpy', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._win_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'librosa.core', 'librosa.core.time_frequency', 'six', 'librosa.util', 'librosa.util.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'typing', 'typing.io', 'typing.re', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_cython_0_29_14', '_ni_label', 'scipy.ndimage.morphology', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'difflib', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy._lib._util', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'numba', 'numba._version', 'numba.core', 'numba.core.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'pkg_resources', 'zipfile', 'plistlib', 'xml', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources.py31compat', 'pkg_resources._vendor.appdirs', 'win32com', 'win32api', 'pythoncom', 'pywintypes', 'imp', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'copy', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'sysconfig', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.testing', 'numba.testing.main', 'cProfile', '_lsprof', 'profile', 'numba.testing.loader', 'numba.testing._runtests', 'numba.core.types', 'numba.core.utils', 'timeit', 'numba.core.types.abstract', 'numba.core.types.containers', 'numba.core.types.common', 'numba.core.types.misc', 'numba.core.typeconv', 'numba.core.typeconv.castgraph', 'numba.core.errors', 'numba.core.types.functions', 'numba.core.types.iterators', 'numba.core.types.npytypes', 'numba.core.types.scalars', 'numba.np', 'numba.np.npdatetime_helpers', 'numba.core.types.function_type', 'numba.misc', 'numba.misc.special', 'numba.core.typing', 'numba.core.typing.context', 'numba.core.typeconv.rules', 'numba.core.typeconv.typeconv', 'numba.core.typeconv._typeconv', 'numba.core.typing.templates', 'numba.core.cpu_options', 'numba.core.typing.typeof', 'numba.np.numpy_support', 'numba.core.cgutils', 'numba.core.datamodel', 'numba.core.datamodel.manager', 'numba.core.datamodel.packer', 'numba.core.datamodel.registry', 'numba.core.datamodel.models', 'numba.core.decorators', 'numba.stencils', 'numba.stencils.stencil', 'numba.core.ir', 'numba.core.consts', 'numba.core.ir_utils', 'numba.core.extending', 'numba.core.imputils', 'numba.core.pythonapi', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._helperlib', 'numba.core.lowering', 'numba._dynfunc', 'numba.core.debuginfo', 'numba.core.funcdesc', 'numba.core.itanium_mangler', 'numba.core.generators', 'numba.core.analysis', 'numba.core.controlflow', 'numba.core.postproc', 'numba.core.transforms', 'numba.core.rewrites', 'numba.core.rewrites.registry', 'numba.core.rewrites.static_getitem', 'numba.core.rewrites.static_raise', 'numba.core.rewrites.static_binop', 'numba.core.rewrites.ir_print', 'numba.core.rewrites.macros', 'numba.core.registry', 'numba.core.descriptors', 'numba.core.dispatcher', 'numba._dispatcher', 'numba.core.serialize', 'numba.core.bytecode', 'numba.core.compiler', 'numba.core.tracing', 'numba.core.interpreter', 'numba.core.dataflow', 'numba.core.byteflow', 'numba.core.unsafe', 'numba.core.unsafe.eh', 'numba.core.callconv', 'numba.core.base', 'numba.core.compiler_lock', 'numba.np.arrayobj', 'numba.misc.quicksort', 'numba.misc.mergesort', 'numba.cpython', 'numba.cpython.slicing', 'numba.cpython.unsafe', 'numba.cpython.unsafe.tuple', 'numba.cpython.builtins', 'numba.core.typing.builtins', 'numba.parfors', 'numba.parfors.parfor_lowering', 'numba.parfors.parfor', 'numba.core.typeinfer', 'numba.stencils.stencilparfor', 'numba.core.typing.npydecl', 'numba.parfors.array_analysis', 'numba.core.sigutils', 'numba.parfors.parfor_lowering_utils', 'numba.extending', 'numba.core.cpu', 'numba.core.callwrapper', 'numba.core.codegen', 'llvmlite.llvmpy.passes', 'numba.core.runtime', 'numba.core.runtime.nrt', 'numba.core.runtime.nrtdynmod', 'numba.core.runtime._nrt_python', 'numba.core.runtime.nrtopt', 'numba.misc.inspection', 'numba.core.externals', 'numba.core.intrinsics', 'numba.core.fastmathpass', 'numba.core.options', 'numba.core.entrypoints', 'numba.cpython.setobj', 'numba.cpython.listobj', 'numba.core.inline_closurecall', 'numba.cpython.rangeobj', 'numba.np.unsafe', 'numba.np.unsafe.ndarray', 'numba.core.compiler_machinery', 'numba.core.untyped_passes', 'numba.core.ssa', 'numba.core.typed_passes', 'numba.core.annotations', 'numba.core.annotations.type_annotations', 'numba.core.object_mode_passes', 'numba.core.pylowering', 'numba.core.caching', 'numba.misc.appdirs', 'numba.np.ufunc', 'numba.np.ufunc.decorators', 'numba.np.ufunc._internal', 'numba.np.ufunc.ufuncbuilder', 'numba.np.ufunc.sigparse', 'numba.np.ufunc.wrappers', 'numba.np.ufunc.parallel', 'numba.np.ufunc.dufunc', 'numba.np.ufunc.array_exprs', 'numba.experimental', 'numba.experimental.jitclass', 'numba.experimental.jitclass.decorators', 'numba.experimental.jitclass.base', 'numba.experimental.jitclass._box', 'numba.experimental.jitclass.boxing', 'numba.core.withcontexts', 'numba.cpython.charseq', 'numba.cpython.unicode', 'numba.cpython.hashing', 'numba.core.unsafe.bytes', 'numba.cpython.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.typed.dictobject', 'numba.typed.typedobjectutils', 'numba.core.boxing', 'numba.typed.dictimpl', 'numba.experimental.function_type', 'numba.core.ccallback', 'numba.core.typing.ctypes_utils', 'numba.typed.typedlist', 'numba.typed.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'decorator', 'numba.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy._lib.messagestream', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy._lib.decorator', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.integrate', 'scipy.integrate.quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.stats', 'scipy.stats.stats', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.stats._stats', 'scipy.stats._tukeylambda_stats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._rvs_sampling', 'scipy.stats._hypotests', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'sklearn.utils.fixes', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils.deprecation', 'sklearn.utils._estimator_html_repr', 'html', 'html.entities', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils.sparsefuncs', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'array', 'sklearn.utils.multiclass', 'sklearn.preprocessing._discretization', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'threadpoolctl', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'csv', '_csv', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'keras_model', 'keras', 'keras.utils', 'keras.utils.np_utils', 'keras.utils.generic_utils', 'keras.utils.data_utils', 'tarfile', 'six.moves', 'six.moves.urllib', 'six.moves.urllib.error', 'urllib.error', 'urllib.response', 'six.moves.urllib.request', 'urllib.request', 'http', 'http.client', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'nturl2path', 'keras.utils.io_utils', 'h5py', 'h5py._errors', 'h5py._hl', 'h5py._hl.compat', 'h5py.version', 'h5py.h5', '_cython_0_29_13', 'h5py.defs', 'h5py._objects', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.utils', 'h5py.h5py_warnings', 'h5py.h5z', 'h5py.h5a', 'h5py.h5s', 'h5py.h5p', 'h5py.h5ac', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl.filters', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'keras.utils.conv_utils', 'keras.backend', 'keras.backend.load_backend', 'keras.backend.common', 'keras.backend.tensorflow_backend', 'tensorflow', 'tensorflow.python', 'tensorflow.python.pywrap_tensorflow', 'tensorflow.python.platform', 'tensorflow.python.platform.self_check', 'tensorflow.python.platform.build_info', 'tensorflow.python.pywrap_dlopen_global_flags', 'tensorflow.python.pywrap_tensorflow_internal', 'swig_runtime_data4', '_pywrap_tensorflow_internal', 'tensorflow.core', 'tensorflow.core.framework', 'tensorflow.core.framework.graph_pb2', 'google.protobuf', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorflow.core.framework.function_pb2', 'tensorflow.core.framework.attr_value_pb2', 'tensorflow.core.framework.tensor_pb2', 'tensorflow.core.framework.resource_handle_pb2', 'tensorflow.core.framework.tensor_shape_pb2', 'google.protobuf.internal.well_known_types', 'tensorflow.core.framework.types_pb2', 'tensorflow.core.framework.node_def_pb2', 'tensorflow.core.framework.op_def_pb2', 'tensorflow.core.framework.versions_pb2', 'tensorflow.core.framework.summary_pb2', 'tensorflow.core.protobuf', 'tensorflow.core.protobuf.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorflow.core.protobuf.saved_object_graph_pb2', 'tensorflow.core.framework.variable_pb2', 'tensorflow.core.protobuf.struct_pb2', 'tensorflow.core.protobuf.trackable_object_graph_pb2', 'tensorflow.core.protobuf.saver_pb2', 'tensorflow.core.protobuf.config_pb2', 'tensorflow.core.framework.cost_graph_pb2', 'tensorflow.core.framework.step_stats_pb2', 'tensorflow.core.framework.allocation_description_pb2', 'tensorflow.core.framework.tensor_description_pb2', 'tensorflow.core.protobuf.cluster_pb2', 'tensorflow.core.protobuf.debug_pb2', 'tensorflow.core.protobuf.rewriter_config_pb2', 'tensorflow.core.protobuf.verifier_config_pb2', 'tensorflow.core.protobuf.tensorflow_server_pb2', 'tensorflow.core.protobuf.device_filters_pb2', 'tensorflow.core.util', 'tensorflow.core.util.event_pb2', 'tensorflow.python.framework', 'tensorflow.python.framework.framework_lib', 'tensorflow.python.framework.device', 'tensorflow.python.tf2', 'tensorflow.python.framework.device_spec', 'tensorflow.python.util', 'tensorflow.python.util.tf_export', 'tensorflow.python.util.tf_decorator', 'tensorflow.python.util.tf_stack', 'tensorflow.python._tf_stack', 'tensorflow.python.util.tf_inspect', 'tensorflow.python.framework.ops', 'tensorflow.python.pywrap_tfe', 'tensorflow.python._pywrap_tfe', 'tensorflow.python.client', 'tensorflow.python.client.pywrap_tf_session', 'tensorflow.python._pywrap_tf_session', 'tensorflow.python.eager', 'tensorflow.python.eager.context', 'absl', 'absl.logging', 'getpass', 'absl.flags', 'getopt', 'absl.flags._argument_parser', 'absl.flags._helpers', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'absl.flags._validators', 'absl.logging.converter', 'tensorflow.python.eager.executor', 'tensorflow.python.eager.monitoring', 'tensorflow.python.framework.c_api_util', 'tensorflow.core.framework.api_def_pb2', 'tensorflow.python.util.compat', 'tensorflow.python.util.tf_contextlib', 'tensorflow.python.util.is_in_graph_mode', 'tensorflow.python.eager.core', 'tensorflow.python.framework.errors', 'tensorflow.python.framework.errors_impl', 'tensorflow.core.lib', 'tensorflow.core.lib.core', 'tensorflow.core.lib.core.error_codes_pb2', 'tensorflow.core.protobuf.error_codes_pb2', 'tensorflow.python._pywrap_py_exception_registry', 'tensorflow.python.framework.error_interpolation', 'tensorflow.core.protobuf.graph_debug_info_pb2', 'tensorflow.python.util.deprecation', 'tensorflow.python.platform.tf_logging', 'tensorflow.python.util.decorator_utils', 'tensorflow.python.eager.tape', 'tensorflow.python.util.lazy_loader', 'tensorflow.python.framework.composite_tensor', 'tensorflow.python._pywrap_utils', 'tensorflow.python.util.nest', 'wrapt', 'wrapt.wrappers', 'wrapt._wrappers', 'wrapt.decorators', 'wrapt.importer', 'tensorflow.python.framework.dtypes', 'tensorflow.python._pywrap_bfloat16', 'tensorflow.python._dtypes', 'tensorflow.python.framework.indexed_slices', 'tensorflow.python.framework.tensor_conversion_registry', 'tensorflow.python.framework.tensor_like', 'tensorflow.python.framework.tensor_shape', 'tensorflow.python.framework.type_spec', 'tensorflow.python.framework.registry', 'tensorflow.python.framework.traceable_stack', 'tensorflow.python.framework.versions', 'tensorflow.python.ops', 'tensorflow.python.ops.control_flow_util', 'tensorflow.python.platform.app', 'absl.app', 'pdb', 'cmd', 'bdb', 'code', 'codeop', 'absl.command_name', 'faulthandler', 'tensorflow.python.platform.flags', 'tensorflow.python.util.function_utils', 'tensorflow.python.util.lock_util', 'tensorflow.python.util.memory', 'tensorflow.python.util.object_identity', 'tensorflow.python.framework.sparse_tensor', 'tensorflow.python.framework.constant_op', 'tensorflow.python.eager.execute', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'tensorflow.python.framework.tensor_util', 'tensorflow.python.framework.tensor_spec', 'tensorflow.python.framework.common_shapes', 'tensorflow.python.ops.gen_sparse_ops', 'tensorflow.python.framework.op_def_registry', 'tensorflow.python._op_def_registry', 'tensorflow.python.framework.op_def_library', 'tensorflow.python.framework.op_callbacks', 'tensorflow.python.util.dispatch', 'tensorflow.python.framework.random_seed', 'tensorflow.python.framework.importer', 'tensorflow.python.framework.function', 'tensorflow.python.framework.graph_to_function_def', 'tensorflow.python.ops.array_ops', 'tensorflow.python.ops.gen_array_ops', 'tensorflow.python.ops.gen_math_ops', 'tensorflow.python.ops.resource_variable_ops', 'tensorflow.python.framework.auto_control_deps_utils', 'tensorflow.python.framework.cpp_shape_inference_pb2', 'tensorflow.python.ops.gen_logging_ops', 'tensorflow.python.ops.gen_resource_variable_ops', 'tensorflow.python.ops.gen_state_ops', 'tensorflow.python.ops.math_ops', 'tensorflow.python.framework.graph_util', 'tensorflow.python.framework.graph_util_impl', 'tensorflow.python.ops.gen_data_flow_ops', 'tensorflow.python.ops.gen_nn_ops', 'tensorflow.python.ops.state_ops', 'tensorflow.python.ops.variables', 'tensorflow.python.ops.control_flow_ops', 'tensorflow.core.protobuf.control_flow_pb2', 'tensorflow.python.ops.gen_control_flow_ops', 'tensorflow.python.ops.tensor_array_ops', 'tensorflow.python.ops.list_ops', 'tensorflow.python.ops.gen_list_ops', 'tensorflow.python.util.tf_should_use', 'tensorflow.python.training', 'tensorflow.python.training.tracking', 'tensorflow.python.training.tracking.base', 'tensorflow.python.ops.gen_io_ops', 'tensorflow.python.training.saving', 'tensorflow.python.training.saving.saveable_object', 'tensorflow.python.ops.variable_scope', 'tensorflow.python.client.session', 'tensorflow.python.ops.session_ops', 'tensorflow.python.training.experimental', 'tensorflow.python.training.experimental.mixed_precision_global_state', 'tensorflow.python.ops.init_ops', 'tensorflow.python.ops.gen_linalg_ops', 'tensorflow.python.ops.linalg_ops_impl', 'tensorflow.python.ops.random_ops', 'tensorflow.python.ops.gen_random_ops', 'tensorflow.python.framework.load_library', 'tensorflow.python._pywrap_python_op_gen', 'tensorflow.python.lib', 'tensorflow.python.lib.io', 'tensorflow.python.lib.io.file_io', 'tensorflow.python._pywrap_file_io', 'tensorflow.python.framework.config', 'tensorflow.python.client.client_lib', 'tensorflow.python.ops.standard_ops', 'tensorflow.python.autograph', 'tensorflow.python.autograph.operators', 'tensorflow.python.autograph.operators.control_flow', 'tensorflow.python.autograph.operators.py_builtins', 'tensorflow.python.autograph.utils', 'tensorflow.python.autograph.utils.context_managers', 'tensorflow.python.autograph.utils.misc', 'tensorflow.python.autograph.utils.py_func', 'tensorflow.python.ops.script_ops', 'tensorflow.python._pywrap_py_func', 'tensorflow.python.eager.backprop', 'tensorflow.python.eager.backprop_util', 'tensorflow.python.eager.imperative_grad', 'tensorflow.python.ops.unconnected_gradients', 'tensorflow.python.ops.check_ops', 'tensorflow.python.ops.default_gradient', 'tensorflow.python.framework.func_graph', 'tensorflow.python.eager.graph_only_ops', 'tensorflow.python.framework.auto_control_deps', 'tensorflow.python.ops.custom_gradient', 'tensorflow.python.ops.op_selector', 'tensorflow.python.ops.gen_script_ops', 'tensorflow.python.autograph.utils.tensor_list', 'tensorflow.python.autograph.utils.testing', 'tensorflow.python.autograph.utils.type_check', 'tensorflow.python.autograph.utils.tensors', 'tensorflow.python.data', 'tensorflow.python.data.experimental', 'tensorflow.python.data.experimental.ops', 'tensorflow.python.data.experimental.ops.batching', 'tensorflow.python.data.ops', 'tensorflow.python.data.ops.dataset_ops', 'tensorflow.python.compat', 'tensorflow.python.compat.compat', 'tensorflow.python.data.experimental.ops.distribute_options', 'tensorflow.python.data.util', 'tensorflow.python.data.util.options', 'tensorflow.python.data.experimental.ops.optimization_options', 'tensorflow.python.data.experimental.ops.stats_options', 'tensorflow.python.data.experimental.ops.stats_aggregator', 'tensorflow.python.ops.gen_experimental_dataset_ops', 'tensorflow.python.ops.summary_ops_v2', 'tensorflow.python.eager.profiler', 'tensorflow.python._pywrap_events_writer', 'tensorflow.python.platform.gfile', 'tensorflow.python.profiler', 'tensorflow.python.profiler.internal', 'tensorflow.python.profiler.internal._pywrap_profiler', 'tensorflow.python.framework.smart_cond', 'tensorflow.python.ops.gen_summary_ops', 'tensorflow.python.ops.summary_op_util', 'tensorflow.python.training.training_util', 'tensorflow.python.framework.graph_io', 'tensorflow.python.data.experimental.ops.threading_options', 'tensorflow.python.data.ops.iterator_ops', 'tensorflow.python.data.ops.optional_ops', 'tensorflow.python.data.util.structure', 'tensorflow.python.data.util.nest', 'tensorflow.python.ops.ragged', 'tensorflow.python.ops.ragged.ragged_array_ops', 'tensorflow.python.ops.sort_ops', 'tensorflow.python.ops.nn_ops', 'tensorflow.python.platform.device_context', 'tensorflow.python.ops.ragged.ragged_functional_ops', 'tensorflow.python.ops.ragged.ragged_config', 'tensorflow.python.ops.ragged.ragged_tensor', 'tensorflow.python.ops.gen_ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_tensor_value', 'tensorflow.python.ops.ragged.ragged_util', 'tensorflow.python.ops.gen_ragged_math_ops', 'tensorflow.python.ops.ragged.segment_id_ops', 'tensorflow.python.ops.ragged.ragged_math_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_ops', 'tensorflow.python.ops.ragged.ragged_gather_ops', 'tensorflow.python.ops.gen_ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_with_default_op', 'tensorflow.python.ops.ragged.ragged_dispatch', 'tensorflow.python.ops.clip_ops', 'tensorflow.python.ops.data_flow_ops', 'tensorflow.python.lib.io.python_io', 'tensorflow.python.lib.io.tf_record', 'tensorflow.python._pywrap_record_io', 'tensorflow.python.ops.gen_bitwise_ops', 'tensorflow.python.ops.parsing_ops', 'tensorflow.python.ops.gen_parsing_ops', 'tensorflow.python.ops.parsing_config', 'tensorflow.python.ops.sparse_ops', 'tensorflow.python.ops.string_ops', 'tensorflow.python.ops.gen_string_ops', 'tensorflow.python.ops.ragged.ragged_concat_ops', 'tensorflow.python.ops.ragged.ragged_squeeze_op', 'tensorflow.python.ops.ragged.ragged_string_ops', 'tensorflow.python.ops.ragged.ragged_tensor_shape', 'tensorflow.python.ops.ragged.ragged_where_op', 'tensorflow.python.ops.ragged.ragged_operators', 'tensorflow.python.ops.ragged.ragged_getitem', 'tensorflow.python.ops.ragged.ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_factory_ops', 'tensorflow.python.ops.ragged.ragged_map_ops', 'tensorflow.python.ops.gen_dataset_ops', 'tensorflow.python.training.saver', 'tensorflow.python.framework.meta_graph', 'tensorflow.python.ops.io_ops', 'tensorflow.python.training.checkpoint_management', 'tensorflow.python.training.checkpoint_state_pb2', 'tensorflow.python.training.py_checkpoint_reader', 'tensorflow.python._pywrap_checkpoint_reader', 'tensorflow.python.training.saving.saveable_object_util', 'tensorflow.python.data.util.random_seed', 'tensorflow.python.data.util.traverse', 'tensorflow.python.eager.function', 'tensorflow.python.eager.forwardprop_util', 'tensorflow.python.ops.functional_ops', 'tensorflow.python.ops.gen_functional_ops', 'tensorflow.python.ops.gradients_util', 'tensorflow.python.ops.control_flow_state', 'tensorflow.python.ops.control_flow_v2_func_graphs', 'tensorflow.python.training.tracking.tracking', 'tensorflow.python.eager.def_function', 'tensorflow.python.eager.lift_to_graph', 'tensorflow.python.training.tracking.data_structures', 'tensorflow.python.saved_model', 'tensorflow.python.saved_model.revived_types', 'tensorflow.python.training.tracking.layer_utils', 'tensorflow.python.data.util.convert', 'tensorflow.python.data.experimental.ops.cardinality', 'tensorflow.python.data.experimental.ops.counter', 'tensorflow.python.data.experimental.ops.scan_ops', 'tensorflow.python.data.experimental.ops.enumerate_ops', 'tensorflow.python.data.experimental.ops.error_ops', 'tensorflow.python.data.experimental.ops.get_single_element', 'tensorflow.python.data.experimental.ops.grouping', 'tensorflow.python.data.experimental.ops.interleave_ops', 'tensorflow.python.data.experimental.ops.random_ops', 'tensorflow.python.data.ops.readers', 'tensorflow.python.ops.gen_stateless_random_ops', 'tensorflow.python.data.experimental.ops.iterator_ops', 'tensorflow.python.training.basic_session_run_hooks', 'tensorflow.python.client.timeline', 'tensorflow.python.training.session_run_hook', 'tensorflow.python.training.summary_io', 'tensorflow.python.summary', 'tensorflow.python.summary.summary_iterator', 'tensorflow.python.summary.writer', 'tensorflow.python.summary.writer.writer', 'tensorflow.python.summary.plugin_asset', 'tensorflow.python.summary.writer.event_file_writer', 'tensorflow.python.summary.writer.event_file_writer_v2', 'tensorflow.python.summary.writer.writer_cache', 'tensorflow.python.data.experimental.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.prefetching_ops', 'tensorflow.python.data.experimental.ops.readers', 'gzip', 'tensorflow.python.data.experimental.ops.resampling', 'tensorflow.python.ops.logging_ops', 'tensorflow.python.data.experimental.ops.shuffle_ops', 'tensorflow.python.data.experimental.ops.stats_ops', 'tensorflow.python.data.experimental.ops.take_while_ops', 'tensorflow.python.data.experimental.ops.unique', 'tensorflow.python.data.experimental.ops.writers', 'tensorflow.python.util.all_util', 'tensorflow.python.autograph.operators.special_values', 'tensorflow.python.autograph.utils.ag_logging', 'tensorflow.python.autograph.utils.compat_util', 'tensorflow.python.autograph.operators.data_structures', 'tensorflow.python.autograph.operators.exceptions', 'tensorflow.python.autograph.operators.logical', 'tensorflow.python.autograph.operators.slices', 'tensorflow.python.autograph.core', 'tensorflow.python.autograph.core.converter', 'tensorflow.python.autograph.pyct', 'tensorflow.python.autograph.pyct.anno', 'gast', 'gast.gast', 'gast.ast3', 'gast.astn', 'tensorflow.python.autograph.pyct.ast_util', 'tensorflow.python.autograph.pyct.parser', 'astunparse', 'astunparse.unparser', 'astunparse.printer', 'tensorflow.python.autograph.pyct.errors', 'tensorflow.python.autograph.pyct.inspect_utils', 'tensorflow.python.autograph.pyct.qual_names', 'tensorflow.python.autograph.pyct.cfg', 'tensorflow.python.autograph.pyct.templates', 'tensorflow.python.autograph.pyct.transformer', 'tensorflow.python.autograph.pyct.loader', 'tensorflow.python.autograph.pyct.origin_info', 'tensorflow.python.autograph.pyct.pretty_printer', 'termcolor', 'tensorflow.python.autograph.pyct.static_analysis', 'tensorflow.python.autograph.pyct.static_analysis.activity', 'tensorflow.python.autograph.pyct.static_analysis.annos', 'tensorflow.python.autograph.pyct.static_analysis.liveness', 'tensorflow.python.autograph.pyct.static_analysis.reaching_definitions', 'tensorflow.python.autograph.impl', 'tensorflow.python.autograph.impl.api', 'tensorflow.python.autograph.core.ag_ctx', 'tensorflow.python.autograph.impl.conversion', 'tensorflow.python.autograph.converters', 'tensorflow.python.autograph.converters.arg_defaults', 'tensorflow.python.autograph.converters.asserts', 'tensorflow.python.autograph.converters.break_statements', 'tensorflow.python.autograph.converters.call_trees', 'tensorflow.python.autograph.converters.conditional_expressions', 'tensorflow.python.autograph.converters.continue_statements', 'tensorflow.python.autograph.converters.control_flow', 'tensorflow.python.autograph.lang', 'tensorflow.python.autograph.lang.directives', 'tensorflow.python.autograph.converters.directives', 'tensorflow.python.autograph.converters.function_scopes', 'tensorflow.python.autograph.converters.lists', 'tensorflow.python.autograph.converters.logical_expressions', 'tensorflow.python.autograph.converters.return_statements', 'tensorflow.python.autograph.converters.slices', 'tensorflow.python.autograph.core.config', 'tensorflow.python.autograph.core.config_lib', 'tensorflow.python.autograph.core.function_wrappers', 'tensorflow.python.autograph.core.naming', 'tensorflow.python.autograph.core.unsupported_features_checker', 'tensorflow.python.autograph.lang.special_functions', 'tensorflow.python.autograph.pyct.error_utils', 'tensorflow.python.training.experimental.loss_scaling_gradient_tape', 'tensorflow.python.distribute', 'tensorflow.python.distribute.cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.cluster_resolver', 'tensorflow.python.training.server_lib', 'tensorflow.python.distribute.cluster_resolver.gce_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.kubernetes_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.slurm_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tfconfig_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver', 'tensorflow.python.tpu', 'tensorflow.python.tpu.client', 'tensorflow.python.tpu.client.client', 'tensorflow.python.distribute.cross_device_ops', 'tensorflow.python.client.device_lib', 'tensorflow.core.framework.device_attributes_pb2', 'tensorflow.python._pywrap_device_lib', 'tensorflow.python.distribute.collective_util', 'tensorflow.python.distribute.cross_device_utils', 'tensorflow.python.distribute.all_reduce', 'tensorflow.python.ops.nccl_ops', 'tensorflow.python.ops.gen_nccl_ops', 'tensorflow.python.distribute.values', 'tensorflow.python.distribute.device_util', 'tensorflow.python.distribute.distribute_lib', 'tensorflow.python.distribute.distribution_strategy_context', 'tensorflow.python.distribute.numpy_dataset', 'tensorflow.python.distribute.reduce_util', 'tensorflow.python.ops.losses', 'tensorflow.python.ops.losses.loss_reduction', 'tensorflow.python.ops.losses.losses_impl', 'tensorflow.python.ops.confusion_matrix', 'tensorflow.python.ops.nn', 'tensorflow.python.ops.ctc_ops', 'tensorflow.python.ops.gen_ctc_ops', 'tensorflow.python.ops.inplace_ops', 'tensorflow.python.ops.linalg_ops', 'tensorflow.python.ops.map_fn', 'tensorflow.python.ops.nn_grad', 'tensorflow.python.ops.embedding_ops', 'tensorflow.python.ops.data_flow_grad', 'tensorflow.python.ops.nn_impl', 'tensorflow.python.ops.candidate_sampling_ops', 'tensorflow.python.ops.gen_candidate_sampling_ops', 'tensorflow.python.ops.losses.util', 'tensorflow.python.ops.weights_broadcast_ops', 'tensorflow.python.ops.sets', 'tensorflow.python.ops.sets_impl', 'tensorflow.python.ops.gen_set_ops', 'tensorflow.tools', 'tensorflow.tools.docs', 'tensorflow.tools.docs.doc_controls', 'tensorflow.python.ops.collective_ops', 'tensorflow.python.ops.gen_collective_ops', 'tensorflow.python.distribute.tpu_values', 'tensorflow.python.tpu.tpu', 'tensorflow.core.protobuf.tpu', 'tensorflow.core.protobuf.tpu.dynamic_padding_pb2', 'tensorflow.python.compiler', 'tensorflow.python.compiler.xla', 'tensorflow.python.compiler.xla.jit', 'tensorflow.python.compiler.xla.xla', 'tensorflow.compiler', 'tensorflow.compiler.jit', 'tensorflow.compiler.jit.ops', 'tensorflow.compiler.jit.ops.xla_ops', 'tensorflow.compiler.jit.ops.xla_ops_grad', 'tensorflow.python.distribute.summary_op_util', 'tensorflow.python.tpu.tpu_function', 'tensorflow.python.tpu.ops', 'tensorflow.python.tpu.ops.tpu_ops', 'tensorflow.python.ops.gen_tpu_ops', 'tensorflow.python.framework.kernels', 'tensorflow.core.framework.kernel_def_pb2', 'tensorflow.python.distribute.mirrored_strategy', 'tensorflow.python.distribute.input_lib', 'tensorflow.python.data.experimental.ops.distribute', 'tensorflow.python.data.ops.multi_device_iterator_ops', 'tensorflow.python.distribute.input_ops', 'tensorflow.python.distribute.multi_worker_util', 'tensorflow.python.distribute.distribute_coordinator_context', 'tensorflow.python.distribute.shared_variable_creator', 'tensorflow.python.training.coordinator', 'tensorflow.python.distribute.one_device_strategy', 'tensorflow.python.distribute.experimental', 'tensorflow.python.distribute.central_storage_strategy', 'tensorflow.python.distribute.parameter_server_strategy', 'tensorflow.python.training.device_setter', 'tensorflow.python.distribute.collective_all_reduce_strategy', 'tensorflow.python.distribute.tpu_strategy', 'tensorflow.compiler.xla', 'tensorflow.compiler.xla.experimental', 'tensorflow.compiler.xla.experimental.xla_sharding', 'tensorflow.compiler.xla.experimental.xla_sharding.xla_sharding', 'tensorflow.compiler.tf2xla', 'tensorflow.compiler.tf2xla.python', 'tensorflow.compiler.tf2xla.python.xla', 'tensorflow.compiler.tf2xla.ops', 'tensorflow.compiler.tf2xla.ops.gen_xla_ops', 'tensorflow.python.ops.bitwise_ops', 'tensorflow.compiler.xla.xla_data_pb2', 'tensorflow.python.tpu.device_assignment', 'tensorflow.python.tpu.topology', 'tensorflow.core.protobuf.tpu.topology_pb2', 'tensorflow.python.tpu.tpu_strategy_util', 'tensorflow.python.tpu.tpu_system_metadata', 'tensorflow.python.tpu.training_loop', 'tensorflow.python.tpu.tensor_tracer', 'tensorflow.python.platform.analytics', 'tensorflow.python.tpu.tensor_tracer_flags', 'tensorflow.python.tpu.tensor_tracer_report', 'tensorflow.python.tpu.tensor_tracer_pb2', 'tensorflow.python.training.experimental.loss_scale', 'tensorflow.python.ops.array_grad', 'tensorflow.python.ops.cudnn_rnn_grad', 'tensorflow.python.ops.gen_cudnn_rnn_ops', 'tensorflow.python.ops.manip_grad', 'tensorflow.python.ops.manip_ops', 'tensorflow.python.ops.gen_manip_ops', 'tensorflow.python.ops.math_grad', 'tensorflow.python.ops.random_grad', 'tensorflow.python.ops.rnn_grad', 'tensorflow.python.ops.gen_rnn_ops', 'tensorflow.python.ops.sparse_grad', 'tensorflow.python.ops.state_grad', 'tensorflow.python.ops.tensor_array_grad', 'tensorflow.python.ops.special_math_ops', 'opt_einsum', 'opt_einsum.blas', 'opt_einsum.helpers', 'opt_einsum.parser', 'opt_einsum.paths', 'opt_einsum.path_random', 'opt_einsum.contract', 'opt_einsum.backends', 'opt_einsum.backends.cupy', 'opt_einsum.sharing', 'opt_einsum.backends.dispatch', 'opt_einsum.backends.jax', 'opt_einsum.backends.tensorflow', 'opt_einsum.backends.theano', 'opt_einsum.backends.torch', 'opt_einsum._version', 'tensorflow.python.ops.gen_special_math_ops', 'tensorflow.python.eager.wrap_function', 'tensorflow.python.saved_model.nested_structure_coder', 'tensorflow.python.ops.batch_ops', 'tensorflow.python.ops.gen_batch_ops', 'tensorflow.python.ops.critical_section_ops', 'tensorflow.python.ops.gradients', 'tensorflow.python.eager.forwardprop', 'tensorflow.python.ops.gradients_impl', 'tensorflow.python.ops.control_flow_grad', 'tensorflow.python.ops.image_grad', 'tensorflow.python.ops.gen_image_ops', 'tensorflow.python.ops.linalg_grad', 'tensorflow.python.ops.linalg', 'tensorflow.python.ops.linalg.linalg_impl', 'tensorflow.python.ops.optional_grad', 'tensorflow.python.ops.histogram_ops', 'tensorflow.python.ops.lookup_ops', 'tensorflow.python.ops.gen_lookup_ops', 'tensorflow.python.ops.numerics', 'tensorflow.python.ops.partitioned_variables', 'tensorflow.python.ops.proto_ops', 'tensorflow.python.ops.gen_decode_proto_ops', 'tensorflow.python.ops.gen_encode_proto_ops', 'tensorflow.python.ops.stateless_random_ops', 'tensorflow.python.ops.template', 'tensorflow.python.training.tracking.util', 'tensorflow.python.training.saving.functional_saver', 'tensorflow.python.training.saving.saveable_hook', 'tensorflow.python.training.tracking.graph_view', 'tensorflow.python.training.optimizer', 'tensorflow.python.training.slot_creator', 'tensorflow.python.ops.parallel_for', 'tensorflow.python.ops.parallel_for.control_flow_ops', 'tensorflow.python.ops.parallel_for.pfor', 'tensorflow.python.ops.gen_spectral_ops', 'tensorflow.python.ops.parallel_for.gradients', 'tensorflow.python.compiler.tensorrt', 'tensorflow.python.compiler.tensorrt.trt_convert_windows', 'tensorflow.python.ops.initializers_ns', 'tensorflow.python.keras', 'tensorflow.python.keras.models', 'tensorflow.python.keras.backend', 'tensorflow.python.distribute.distribute_coordinator', 'tensorflow.python.training.monitored_session', 'tensorflow.python.ops.resources', 'tensorflow.python.summary.summary', 'google.protobuf.json_format', 'tensorflow.python.training.queue_runner', 'tensorflow.python.training.queue_runner_impl', 'tensorflow.core.protobuf.queue_runner_pb2', 'tensorflow.python.training.session_manager', 'tensorflow.python.keras.backend_config', 'tensorflow.python.ops.image_ops', 'tensorflow.python.ops.image_ops_impl', 'tensorflow.python.training.moving_averages', 'tensorflow.python.keras.metrics', 'tensorflow.python.keras.engine', 'tensorflow.python.keras.engine.base_layer', 'tensorflow.python.keras.constraints', 'tensorflow.python.keras.utils', 'tensorflow.python.keras.utils.generic_utils', 'tensorflow.python.keras.initializers', 'tensorflow.python.ops.init_ops_v2', 'tensorflow.python.keras.regularizers', 'tensorflow.python.keras.engine.base_layer_utils', 'tensorflow.python.keras.engine.input_spec', 'tensorflow.python.keras.engine.node', 'tensorflow.python.keras.mixed_precision', 'tensorflow.python.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.autocast_variable', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale_optimizer', 'tensorflow.python.keras.optimizers', 'tensorflow.python.keras.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.adadelta', 'tensorflow.python.keras.optimizer_v2.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.learning_rate_schedule', 'tensorflow.python.keras.utils.tf_utils', 'tensorflow.python.training.training_ops', 'tensorflow.python.training.gen_training_ops', 'tensorflow.python.keras.optimizer_v2.adagrad', 'tensorflow.python.keras.optimizer_v2.adam', 'tensorflow.python.keras.optimizer_v2.adamax', 'tensorflow.python.keras.optimizer_v2.ftrl', 'tensorflow.python.keras.optimizer_v2.gradient_descent', 'tensorflow.python.keras.optimizer_v2.nadam', 'tensorflow.python.keras.optimizer_v2.rmsprop', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale', 'tensorflow.python.keras.mixed_precision.experimental.policy', 'tensorflow.python.keras.mixed_precision.experimental.device_compatibility_check', 'tensorflow.python.framework.gpu_util', 'tensorflow.python.keras.saving', 'tensorflow.python.keras.saving.saved_model', 'tensorflow.python.keras.saving.saved_model.layer_serialization', 'tensorflow.python.keras.saving.saved_model.base_serialization', 'tensorflow.python.keras.saving.saved_model.json_utils', 'tensorflow.python.util.serialization', 'tensorflow.python.keras.saving.saved_model.constants', 'tensorflow.python.keras.saving.saved_model.save_impl', 'tensorflow.python.keras.saving.saving_utils', 'tensorflow.python.keras.losses', 'tensorflow.python.keras.utils.losses_utils', 'tensorflow.python.keras.utils.io_utils', 'tensorflow.python.keras.saving.saved_model.load', 'tensorflow.python.keras.saving.saved_model.utils', 'tensorflow.python.keras.saving.saved_model.serialized_attributes', 'tensorflow.python.keras.utils.metrics_utils', 'tensorflow.python.saved_model.load', 'tensorflow.python.saved_model.function_deserialization', 'tensorflow.python.framework.function_def_to_graph', 'tensorflow.python.saved_model.load_v1_in_v2', 'tensorflow.python.saved_model.loader_impl', 'tensorflow.core.protobuf.saved_model_pb2', 'tensorflow.python.saved_model.constants', 'tensorflow.python.saved_model.signature_def_utils', 'tensorflow.python.saved_model.signature_def_utils_impl', 'tensorflow.python.saved_model.signature_constants', 'tensorflow.python.saved_model.utils_impl', 'tensorflow.python.saved_model.signature_serialization', 'tensorflow.python.saved_model.function_serialization', 'tensorflow.python.keras.utils.layer_utils', 'tensorflow.python.keras.utils.conv_utils', 'tensorflow.python.keras.utils.version_utils', 'tensorflow.python.module', 'tensorflow.python.module.module', 'tensorflow.python.keras.saving.saved_model.metric_serialization', 'tensorflow.python.keras.engine.network', 'tensorflow.python.keras.engine.compile_utils', 'tensorflow.python.keras.engine.input_layer', 'tensorflow.python.keras.distribute', 'tensorflow.python.keras.distribute.distributed_training_utils', 'tensorflow.python.keras.callbacks', 'tensorflow.python.distribute.distributed_file_utils', 'tensorflow.python.keras.distribute.multi_worker_training_state', 'tensorflow.python.keras.utils.mode_keys', 'tensorflow.python.saved_model.model_utils', 'tensorflow.python.saved_model.model_utils.export_output', 'tensorflow.python.saved_model.model_utils.export_utils', 'tensorflow.python.saved_model.tag_constants', 'tensorflow.python.saved_model.model_utils.mode_keys', 'tensorflow.python.keras.utils.data_utils', 'multiprocessing.dummy', 'multiprocessing.dummy.connection', 'tensorflow.python.profiler.profiler_v2', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'mimetypes', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'tensorflow.python.keras.engine.training_utils', 'tensorflow.python.framework.composite_tensor_utils', 'tensorflow.python.keras.saving.hdf5_format', 'tensorflow.python.keras.saving.model_config', 'tensorflow.python.keras.saving.save', 'tensorflow.python.keras.saving.saved_model.save', 'tensorflow.python.saved_model.save', 'tensorflow.python.saved_model.builder_impl', 'tensorflow.python.saved_model.save_options', 'tensorflow.python.keras.saving.saved_model.network_serialization', 'tensorflow.python.keras.engine.sequential', 'tensorflow.python.keras.layers', 'tensorflow.python.keras.engine.base_preprocessing_layer', 'tensorflow.python.keras.engine.training_generator', 'tensorflow.python.keras.layers.preprocessing', 'tensorflow.python.keras.layers.preprocessing.image_preprocessing', 'tensorflow.python.ops.stateful_random_ops', 'tensorflow.python.ops.gen_stateful_random_ops', 'tensorflow.python.keras.layers.preprocessing.normalization', 'tensorflow.python.keras.layers.preprocessing.normalization_v1', 'tensorflow.python.keras.engine.base_preprocessing_layer_v1', 'tensorflow.python.keras.layers.preprocessing.text_vectorization', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding', 'tensorflow.python.keras.layers.preprocessing.index_lookup', 'tensorflow.python.keras.layers.preprocessing.text_vectorization_v1', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding_v1', 'tensorflow.python.keras.layers.preprocessing.index_lookup_v1', 'tensorflow.python.keras.layers.advanced_activations', 'tensorflow.python.keras.layers.convolutional', 'tensorflow.python.keras.activations', 'tensorflow.python.keras.layers.pooling', 'tensorflow.python.keras.layers.core', 'tensorflow.python.keras.layers.dense_attention', 'tensorflow.python.keras.layers.embeddings', 'tensorflow.python.keras.layers.local', 'tensorflow.python.keras.layers.merge', 'tensorflow.python.keras.layers.noise', 'tensorflow.python.keras.layers.normalization', 'tensorflow.python.keras.layers.normalization_v2', 'tensorflow.python.keras.layers.kernelized', 'tensorflow.python.keras.layers.recurrent', 'tensorflow.python.keras.layers.recurrent_v2', 'tensorflow.python.keras.layers.convolutional_recurrent', 'tensorflow.python.keras.layers.cudnn_recurrent', 'tensorflow.python.keras.layers.wrappers', 'tensorflow.python.keras.layers.rnn_cell_wrapper_v2', 'tensorflow.python.ops.rnn_cell_wrapper_impl', 'tensorflow.python.keras.layers.serialization', 'tensorflow.python.keras.engine.training', 'tensorflow.python.keras.engine.data_adapter', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'dateutil', 'dateutil._version', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'dateutil.relativedelta', 'dateutil._common', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'tensorflow.python.keras.saving.saved_model.model_serialization', 'tensorflow.python.profiler.traceme', 'tensorflow.python.profiler.internal._pywrap_traceme', 'tensorflow.python.keras.engine.training_v1', 'tensorflow.python.keras.engine.training_arrays', 'tensorflow.python.keras.engine.training_distributed', 'tensorflow.python.keras.engine.partial_batch_padding_handler', 'tensorflow.python.keras.engine.training_eager', 'tensorflow.python.feature_column', 'tensorflow.python.feature_column.feature_column_lib', 'tensorflow.python.feature_column.dense_features_v2', 'tensorflow.python.feature_column.dense_features', 'tensorflow.python.feature_column.feature_column_v2', 'tensorflow.python.feature_column.feature_column', 'tensorflow.python.feature_column.utils', 'tensorflow.python.layers', 'tensorflow.python.layers.base', 'tensorflow.python.training.checkpoint_utils', 'tensorflow.python.feature_column.sequence_feature_column', 'tensorflow.python.feature_column.serialization', 'tensorflow.python.layers.layers', 'tensorflow.python.layers.core', 'tensorflow.python.layers.convolutional', 'tensorflow.python.layers.pooling', 'tensorflow.python.layers.normalization', 'tensorflow.python.ops.gradient_checker_v2', 'tensorflow.python.ops.metrics', 'tensorflow.python.ops.metrics_impl', 'tensorflow.python.ops.distributions', 'tensorflow.python.ops.distributions.distributions', 'tensorflow.python.ops.distributions.bernoulli', 'tensorflow.python.ops.distributions.distribution', 'tensorflow.python.ops.distributions.kullback_leibler', 'tensorflow.python.ops.distributions.util', 'tensorflow.python.ops.distributions.beta', 'tensorflow.python.ops.distributions.categorical', 'tensorflow.python.ops.distributions.dirichlet', 'tensorflow.python.ops.distributions.dirichlet_multinomial', 'tensorflow.python.ops.distributions.exponential', 'tensorflow.python.ops.distributions.gamma', 'tensorflow.python.ops.distributions.laplace', 'tensorflow.python.ops.distributions.special_math', 'tensorflow.python.ops.distributions.multinomial', 'tensorflow.python.ops.distributions.normal', 'tensorflow.python.ops.distributions.student_t', 'tensorflow.python.ops.distributions.uniform', 'tensorflow.python.ops.linalg.linalg', 'tensorflow.python.ops.linalg.adjoint_registrations', 'tensorflow.python.ops.linalg.linear_operator', 'tensorflow.python.ops.linalg.linear_operator_algebra', 'tensorflow.python.ops.linalg.linear_operator_util', 'tensorflow.python.ops.linalg.linear_operator_adjoint', 'tensorflow.python.ops.linalg.linear_operator_block_diag', 'tensorflow.python.ops.linalg.linear_operator_circulant', 'tensorflow.python.ops.signal', 'tensorflow.python.ops.signal.fft_ops', 'tensorflow.python.ops.linalg.linear_operator_diag', 'tensorflow.python.ops.linalg.linear_operator_householder', 'tensorflow.python.ops.linalg.linear_operator_identity', 'tensorflow.python.ops.linalg.linear_operator_kronecker', 'tensorflow.python.ops.linalg.cholesky_registrations', 'tensorflow.python.ops.linalg.linear_operator_lower_triangular', 'tensorflow.python.ops.linalg.inverse_registrations', 'tensorflow.python.ops.linalg.linear_operator_addition', 'tensorflow.python.ops.linalg.linear_operator_full_matrix', 'tensorflow.python.ops.linalg.linear_operator_block_lower_triangular', 'tensorflow.python.ops.linalg.linear_operator_inversion', 'tensorflow.python.ops.linalg.matmul_registrations', 'tensorflow.python.ops.linalg.linear_operator_composition', 'tensorflow.python.ops.linalg.linear_operator_zeros', 'tensorflow.python.ops.linalg.registrations_util', 'tensorflow.python.ops.linalg.solve_registrations', 'tensorflow.python.ops.linalg.linear_operator_low_rank_update', 'tensorflow.python.ops.linalg.linear_operator_permutation', 'tensorflow.python.ops.linalg.linear_operator_toeplitz', 'tensorflow.python.ops.linalg.linear_operator_tridiag', 'tensorflow.python.ops.linalg.sparse', 'tensorflow.python.ops.linalg.sparse.sparse', 'tensorflow.python.ops.linalg.sparse.conjugate_gradient', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_grad', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_ops', 'tensorflow.python.ops.linalg.sparse.gen_sparse_csr_matrix_ops', 'tensorflow.python.ops.losses.losses', 'tensorflow.python.ops.signal.signal', 'tensorflow.python.ops.signal.dct_ops', 'tensorflow.python.ops.signal.mel_ops', 'tensorflow.python.ops.signal.shape_ops', 'tensorflow.python.ops.signal.util_ops', 'tensorflow.python.ops.signal.mfcc_ops', 'tensorflow.python.ops.signal.reconstruction_ops', 'tensorflow.python.ops.signal.spectral_ops', 'tensorflow.python.ops.signal.window_ops', 'tensorflow.python.profiler.profiler', 'tensorflow.core.profiler', 'tensorflow.core.profiler.tfprof_log_pb2', 'tensorflow.core.profiler.tfprof_output_pb2', 'tensorflow.python.profiler.model_analyzer', 'tensorflow.core.profiler.tfprof_options_pb2', 'tensorflow.python._pywrap_tfprof', 'tensorflow.python.profiler.option_builder', 'tensorflow.python.profiler.tfprof_logger', 'tensorflow.python.profiler.internal.flops_registry', 'tensorflow.python.profiler.profiler_client', 'tensorflow.python.saved_model.saved_model', 'tensorflow.python.saved_model.builder', 'tensorflow.python.saved_model.loader', 'tensorflow.python.saved_model.main_op', 'tensorflow.python.saved_model.main_op_impl', 'tensorflow.python.saved_model.method_name_updater', 'tensorflow.python.saved_model.utils', 'tensorflow.python.saved_model.simple_save', 'tensorflow.python.tpu.api', 'tensorflow.python.tpu.bfloat16', 'tensorflow.python.tpu.feature_column_v2', 'tensorflow.python.tpu.feature_column', 'tensorflow.python.tpu.tpu_embedding', 'tensorflow.core.protobuf.tpu.optimization_parameters_pb2', 'google.protobuf.wrappers_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_output_layout_pb2', 'tensorflow.python.tpu.tpu_optimizer', 'tensorflow.python.user_ops', 'tensorflow.python.user_ops.user_ops', 'tensorflow.python.ops.gen_user_ops', 'tensorflow.python.ops.gen_audio_ops', 'tensorflow.python.ops.gen_boosted_trees_ops', 'tensorflow.python.ops.gen_sendrecv_ops', 'tensorflow.python.training.training', 'tensorflow.python.ops.sdca_ops', 'tensorflow.python.ops.gen_sdca_ops', 'tensorflow.python.training.adadelta', 'tensorflow.python.training.adagrad', 'tensorflow.python.training.adagrad_da', 'tensorflow.python.training.proximal_adagrad', 'tensorflow.python.training.adam', 'tensorflow.python.training.ftrl', 'tensorflow.python.training.experimental.loss_scale_optimizer', 'tensorflow.python.training.experimental.mixed_precision', 'tensorflow.python.training.momentum', 'tensorflow.python.training.rmsprop', 'tensorflow.python.training.gradient_descent', 'tensorflow.python.training.proximal_gradient_descent', 'tensorflow.python.training.sync_replicas_optimizer', 'tensorflow.python.training.input', 'tensorflow.python.layers.utils', 'tensorflow.python.training.basic_loops', 'tensorflow.python.training.tracking.python_state', 'tensorflow.python.training.supervisor', 'tensorflow.python.training.warm_starting_util', 'tensorflow.python.training.checkpoint_ops', 'tensorflow.python.ops.gen_checkpoint_ops', 'tensorflow.core.example', 'tensorflow.core.example.example_pb2', 'tensorflow.core.example.feature_pb2', 'tensorflow.python.training.learning_rate_decay', 'tensorflow.python.training.quantize_training', 'tensorflow.python._pywrap_quantize_training', 'tensorflow.python.platform.resource_loader', 'tensorflow.python.platform.sysconfig', 'tensorflow.python.platform.test', 'tensorflow.python.framework.test_util', 'absl.testing', 'absl.testing.parameterized', 'absl.testing.absltest', 'shlex', 'absl._enum_module', 'absl.testing._pretty_print_reporter', 'absl.third_party', 'absl.third_party.unittest3_backport', 'absl.third_party.unittest3_backport.case', 'absl.third_party.unittest3_backport.result', 'absl.testing.xml_reporter', 'xml.sax', 'xml.sax.xmlreader', 'xml.sax.handler', 'xml.sax._exceptions', 'xml.sax.saxutils', 'unittest.mock', 'tensorflow.python._pywrap_stacktrace_handler', 'tensorflow.python._pywrap_util_port', 'tensorflow.python.ops.control_flow_util_v2', 'tensorflow.python.platform.googletest', 'tensorflow.python.platform.benchmark', 'tensorflow.core.util.test_log_pb2', 'tensorflow.python.util.protobuf', 'tensorflow.python.util.protobuf.compare', 'tensorflow.python.ops.gradient_checker', 'tensorflow.python.compat.v2_compat', 'tensorflow.python.ops.control_flow_v2_toggles', 'tensorflow.python.eager.remote', 'tensorflow.python.platform.remote_utils', 'tensorflow.python.ops.rnn', 'tensorflow.python.ops.rnn_cell_impl', 'tensorflow.python.ops.rnn_cell', 'tensorflow.python.debug', 'tensorflow.python.debug.lib', 'tensorflow.python.debug.lib.debug_data', 'tensorflow.python.debug.lib.debug_graphs', 'tensorflow.python.debug.lib.debug_gradients', 'tensorflow.python.debug.lib.debug_utils', 'tensorflow.python.debug.wrappers', 'tensorflow.python.debug.wrappers.dumping_wrapper', 'tensorflow.python.debug.wrappers.framework', 'tensorflow.python.debug.wrappers.grpc_wrapper', 'tensorflow.python.debug.lib.common', 'tensorflow.python.debug.wrappers.hooks', 'tensorflow.python.debug.wrappers.local_cli_wrapper', 'tensorflow.python.debug.cli', 'tensorflow.python.debug.cli.analyzer_cli', 'tensorflow.python.debug.cli.cli_config', 'tensorflow.python.debug.cli.debugger_cli_common', 'tensorflow.python.debug.cli.cli_shared', 'tensorflow.python.debug.cli.command_parser', 'tensorflow.python.debug.cli.tensor_format', 'tensorflow.python.debug.cli.evaluator', 'tensorflow.python.debug.cli.ui_factory', 'tensorflow.python.debug.lib.source_utils', 'tensorflow.python.debug.lib.profiling', 'tensorflow.python.debug.cli.profile_analyzer_cli', 'tensorflow.python.debug.lib.check_numerics_callback', 'tensorflow.core.protobuf.debug_event_pb2', 'tensorflow.python.debug.lib.op_callbacks_common', 'tensorflow.python.ops.gen_debug_ops', 'tensorflow.python.debug.lib.dumping_callback', 'tensorflow.python.debug.lib.debug_events_writer', 'tensorflow.python._pywrap_debug_events_writer', 'tensorflow.python.dlpack', 'tensorflow.python.dlpack.dlpack', 'tensorflow.python.compiler.mlir', 'tensorflow.python.compiler.mlir.mlir', 'tensorflow.python.pywrap_mlir', 'tensorflow.python._pywrap_mlir', 'tensorflow.python.tools', 'tensorflow.python.tools.module_util', 'tensorflow._api', 'tensorflow._api.v2', 'tensorflow._api.v2.audio', 'tensorflow._api.v2.autodiff', 'tensorflow._api.v2.autograph', 'tensorflow._api.v2.autograph.experimental', 'tensorflow._api.v2.bitwise', 'tensorflow._api.v2.compat', 'tensorflow._api.v2.compat.v1', 'tensorflow._api.v2.compat.v1.app', 'tensorflow._api.v2.compat.v1.audio', 'tensorflow._api.v2.compat.v1.autograph', 'tensorflow._api.v2.compat.v1.autograph.experimental', 'tensorflow._api.v2.compat.v1.bitwise', 'tensorflow._api.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v1.compat.v1', 'tensorflow._api.v2.compat.v1.compat.v1.compat', 'tensorflow._api.v2.compat.v1.config', 'tensorflow._api.v2.compat.v1.config.experimental', 'tensorflow._api.v2.compat.v1.config.optimizer', 'tensorflow._api.v2.compat.v1.config.threading', 'tensorflow._api.v2.compat.v1.data', 'tensorflow._api.v2.compat.v1.data.experimental', 'tensorflow._api.v2.compat.v1.debugging', 'tensorflow._api.v2.compat.v1.debugging.experimental', 'tensorflow._api.v2.compat.v1.distribute', 'tensorflow._api.v2.compat.v1.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v1.distribute.experimental', 'tensorflow._api.v2.compat.v1.distributions', 'tensorflow._api.v2.compat.v1.dtypes', 'tensorflow._api.v2.compat.v1.errors', 'tensorflow._api.v2.compat.v1.experimental', 'tensorflow._api.v2.compat.v1.feature_column', 'tensorflow._api.v2.compat.v1.gfile', 'tensorflow._api.v2.compat.v1.graph_util', 'tensorflow._api.v2.compat.v1.image', 'tensorflow._api.v2.compat.v1.initializers', 'tensorflow._api.v2.compat.v1.io', 'tensorflow._api.v2.compat.v1.io.gfile', 'tensorflow._api.v2.compat.v1.layers', 'tensorflow._api.v2.compat.v1.layers.experimental', 'tensorflow._api.v2.compat.v1.linalg', 'tensorflow._api.v2.compat.v1.linalg.experimental', 'tensorflow._api.v2.compat.v1.lite', 'tensorflow._api.v2.compat.v1.lite.constants', 'tensorflow.lite', 'tensorflow.lite.python', 'tensorflow.lite.python.lite_constants', 'tensorflow.lite.toco', 'tensorflow.lite.toco.toco_flags_pb2', 'tensorflow.lite.toco.types_pb2', 'tensorflow._api.v2.compat.v1.lite.experimental', 'tensorflow._api.v2.compat.v1.lite.experimental.nn', 'tensorflow.lite.python.lite', 'tensorflow.lite.experimental', 'tensorflow.lite.experimental.examples', 'tensorflow.lite.experimental.examples.lstm', 'tensorflow.lite.experimental.examples.lstm.rnn', 'tensorflow.lite.python.op_hint', 'tensorflow.lite.experimental.examples.lstm.rnn_cell', 'tensorflow.lite.experimental.microfrontend', 'tensorflow.lite.experimental.microfrontend.python', 'tensorflow.lite.experimental.microfrontend.python.ops', 'tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op', 'tensorflow.lite.experimental.microfrontend.ops', 'tensorflow.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op', '0294638c8bf50491b025b096f3dba0a1', 'tensorflow.lite.experimental.tensorboard', 'tensorflow.lite.experimental.tensorboard.ops_util', 'tensorflow.lite.python.wrap_toco', 'tensorflow.python._pywrap_toco_api', 'tensorflow.lite.python.convert', 'distutils.spawn', 'distutils.errors', 'distutils.debug', 'distutils.log', 'tensorflow.lite.python.util', 'tensorflow.python.framework.convert_to_constants', 'tensorflow.python.grappler', 'tensorflow.python.grappler.tf_optimizer', 'tensorflow.python._pywrap_tf_optimizer', 'tensorflow.python.grappler.cluster', 'tensorflow.core.grappler', 'tensorflow.core.grappler.costs', 'tensorflow.core.grappler.costs.op_performance_data_pb2', 'tensorflow.core.protobuf.device_properties_pb2', 'tensorflow.python._pywrap_tf_cluster', 'tensorflow.lite.toco.model_flags_pb2', 'tensorflow.lite.python.convert_saved_model', 'tensorflow.lite.python.interpreter', 'tensorflow.lite.python.optimize', 'tensorflow.lite.python.optimize.calibrator', 'tensorflow._api.v2.compat.v1.logging', 'tensorflow._api.v2.compat.v1.lookup', 'tensorflow._api.v2.compat.v1.lookup.experimental', 'tensorflow._api.v2.compat.v1.losses', 'tensorflow._api.v2.compat.v1.manip', 'tensorflow._api.v2.compat.v1.math', 'tensorflow._api.v2.compat.v1.math.special', 'tensorflow._api.v2.compat.v1.metrics', 'tensorflow._api.v2.compat.v1.mixed_precision', 'tensorflow._api.v2.compat.v1.mixed_precision.experimental', 'tensorflow._api.v2.compat.v1.mlir', 'tensorflow._api.v2.compat.v1.mlir.experimental', 'tensorflow._api.v2.compat.v1.nest', 'tensorflow._api.v2.compat.v1.nn', 'tensorflow._api.v2.compat.v1.nn.rnn_cell', 'tensorflow._api.v2.compat.v1.profiler', 'tensorflow._api.v2.compat.v1.python_io', 'tensorflow._api.v2.compat.v1.quantization', 'tensorflow._api.v2.compat.v1.queue', 'tensorflow._api.v2.compat.v1.ragged', 'tensorflow._api.v2.compat.v1.random', 'tensorflow._api.v2.compat.v1.random.experimental', 'tensorflow._api.v2.compat.v1.raw_ops', 'tensorflow._api.v2.compat.v1.resource_loader', 'tensorflow._api.v2.compat.v1.saved_model', 'tensorflow._api.v2.compat.v1.saved_model.builder', 'tensorflow._api.v2.compat.v1.saved_model.constants', 'tensorflow._api.v2.compat.v1.saved_model.experimental', 'tensorflow._api.v2.compat.v1.saved_model.loader', 'tensorflow._api.v2.compat.v1.saved_model.main_op', 'tensorflow._api.v2.compat.v1.saved_model.signature_constants', 'tensorflow._api.v2.compat.v1.saved_model.signature_def_utils', 'tensorflow._api.v2.compat.v1.saved_model.tag_constants', 'tensorflow._api.v2.compat.v1.saved_model.utils', 'tensorflow._api.v2.compat.v1.sets', 'tensorflow._api.v2.compat.v1.signal', 'tensorflow._api.v2.compat.v1.sparse', 'tensorflow._api.v2.compat.v1.spectral', 'tensorflow._api.v2.compat.v1.strings', 'tensorflow._api.v2.compat.v1.summary', 'tensorflow._api.v2.compat.v1.sysconfig', 'tensorflow._api.v2.compat.v1.test', 'tensorflow._api.v2.compat.v1.tpu', 'tensorflow._api.v2.compat.v1.tpu.experimental', 'tensorflow._api.v2.compat.v1.train', 'tensorflow._api.v2.compat.v1.train.experimental', 'tensorflow._api.v2.compat.v1.train.queue_runner', 'tensorflow._api.v2.compat.v1.user_ops', 'tensorflow._api.v2.compat.v1.version', 'tensorflow._api.v2.compat.v1.xla', 'tensorflow._api.v2.compat.v1.xla.experimental', 'tensorflow.python.keras.api', 'tensorflow.python.keras.api.keras', 'tensorflow.python.keras.api.keras.activations', 'tensorflow.python.util.module_wrapper', 'tensorflow.tools.compatibility', 'tensorflow.tools.compatibility.all_renames_v2', 'tensorflow.tools.compatibility.renames_v2', 'tensorflow.python.keras.api.keras.applications', 'tensorflow.python.keras.api.keras.applications.densenet', 'tensorflow.python.keras.applications', 'tensorflow.python.keras.applications.densenet', 'tensorflow.python.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api.keras.applications.inception_v3', 'tensorflow.python.keras.applications.inception_v3', 'tensorflow.python.keras.api.keras.applications.mobilenet', 'tensorflow.python.keras.applications.mobilenet', 'tensorflow.python.keras.api.keras.applications.mobilenet_v2', 'tensorflow.python.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api.keras.applications.nasnet', 'tensorflow.python.keras.applications.nasnet', 'tensorflow.python.keras.api.keras.applications.resnet', 'tensorflow.python.keras.applications.resnet', 'tensorflow.python.keras.api.keras.applications.resnet50', 'tensorflow.python.keras.api.keras.applications.resnet_v2', 'tensorflow.python.keras.applications.resnet_v2', 'tensorflow.python.keras.api.keras.applications.vgg16', 'tensorflow.python.keras.applications.vgg16', 'tensorflow.python.keras.api.keras.applications.vgg19', 'tensorflow.python.keras.applications.vgg19', 'tensorflow.python.keras.api.keras.applications.xception', 'tensorflow.python.keras.applications.xception', 'tensorflow.python.keras.api.keras.backend', 'tensorflow.python.keras.api.keras.callbacks', 'tensorflow.python.keras.callbacks_v1', 'tensorflow.python.keras.api.keras.constraints', 'tensorflow.python.keras.api.keras.datasets', 'tensorflow.python.keras.api.keras.datasets.boston_housing', 'tensorflow.python.keras.datasets', 'tensorflow.python.keras.datasets.boston_housing', 'tensorflow.python.keras.api.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar', 'tensorflow.python.keras.api.keras.datasets.cifar100', 'tensorflow.python.keras.datasets.cifar100', 'tensorflow.python.keras.api.keras.datasets.fashion_mnist', 'tensorflow.python.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api.keras.datasets.imdb', 'tensorflow.python.keras.datasets.imdb', 'tensorflow.python.keras.preprocessing', 'keras_preprocessing', 'tensorflow.python.keras.preprocessing.image', 'keras_preprocessing.image', 'keras_preprocessing.image.affine_transformations', 'keras_preprocessing.image.utils', 'keras_preprocessing.image.dataframe_iterator', 'keras_preprocessing.image.iterator', 'keras_preprocessing.image.directory_iterator', 'keras_preprocessing.image.image_data_generator', 'keras_preprocessing.image.numpy_array_iterator', 'tensorflow.python.keras.preprocessing.sequence', 'keras_preprocessing.sequence', 'tensorflow.python.keras.preprocessing.text', 'keras_preprocessing.text', 'tensorflow.python.keras.utils.all_utils', 'tensorflow.python.keras.utils.multi_gpu_utils', 'tensorflow.python.keras.utils.np_utils', 'tensorflow.python.keras.utils.vis_utils', 'tensorflow.python.keras.api.keras.datasets.mnist', 'tensorflow.python.keras.datasets.mnist', 'tensorflow.python.keras.api.keras.datasets.reuters', 'tensorflow.python.keras.datasets.reuters', 'tensorflow.python.keras.api.keras.estimator', 'tensorflow.python.keras.estimator', 'tensorflow.python.keras.api.keras.experimental', 'tensorflow.python.keras.premade', 'tensorflow.python.keras.premade.linear', 'tensorflow.python.keras.premade.wide_deep', 'tensorflow.python.keras.saving.saved_model_experimental', 'tensorflow.python.keras.api.keras.initializers', 'tensorflow.python.keras.api.keras.layers', 'tensorflow.python.keras.api.keras.layers.experimental', 'tensorflow.python.keras.api.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api.keras.losses', 'tensorflow.python.keras.api.keras.metrics', 'tensorflow.python.keras.api.keras.mixed_precision', 'tensorflow.python.keras.api.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.get_layer_policy', 'tensorflow.python.keras.api.keras.models', 'tensorflow.python.keras.api.keras.optimizers', 'tensorflow.python.keras.api.keras.optimizers.schedules', 'tensorflow.python.keras.api.keras.preprocessing', 'tensorflow.python.keras.api.keras.preprocessing.image', 'tensorflow.python.keras.api.keras.preprocessing.sequence', 'tensorflow.python.keras.api.keras.preprocessing.text', 'tensorflow.python.keras.api.keras.regularizers', 'tensorflow.python.keras.api.keras.utils', 'tensorflow.python.keras.api.keras.wrappers', 'tensorflow.python.keras.api.keras.wrappers.scikit_learn', 'tensorflow.python.keras.wrappers', 'tensorflow.python.keras.wrappers.scikit_learn', 'tensorflow.python.keras.api._v1', 'tensorflow.python.keras.api._v1.keras', 'tensorflow.python.keras.api._v1.keras.activations', 'tensorflow.python.keras.api._v1.keras.applications', 'tensorflow.python.keras.api._v1.keras.applications.densenet', 'tensorflow.python.keras.api._v1.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v1.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.inception_v3', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v1.keras.applications.nasnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet50', 'tensorflow.python.keras.api._v1.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.vgg16', 'tensorflow.python.keras.api._v1.keras.applications.vgg19', 'tensorflow.python.keras.api._v1.keras.applications.xception', 'tensorflow.python.keras.api._v1.keras.backend', 'tensorflow.python.keras.api._v1.keras.callbacks', 'tensorflow.python.keras.api._v1.keras.constraints', 'tensorflow.python.keras.api._v1.keras.datasets', 'tensorflow.python.keras.api._v1.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v1.keras.datasets.cifar10', 'tensorflow.python.keras.api._v1.keras.datasets.cifar100', 'tensorflow.python.keras.api._v1.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v1.keras.datasets.imdb', 'tensorflow.python.keras.api._v1.keras.datasets.mnist', 'tensorflow.python.keras.api._v1.keras.datasets.reuters', 'tensorflow.python.keras.api._v1.keras.estimator', 'tensorflow.python.keras.api._v1.keras.experimental', 'tensorflow.python.keras.api._v1.keras.initializers', 'tensorflow.python.keras.api._v1.keras.layers', 'tensorflow.python.keras.api._v1.keras.layers.experimental', 'tensorflow.python.keras.api._v1.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v1.keras.losses', 'tensorflow.python.keras.api._v1.keras.metrics', 'tensorflow.python.keras.api._v1.keras.mixed_precision', 'tensorflow.python.keras.api._v1.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v1.keras.models', 'tensorflow.python.keras.api._v1.keras.optimizers', 'tensorflow.python.keras.api._v1.keras.optimizers.schedules', 'tensorflow.python.keras.api._v1.keras.preprocessing', 'tensorflow.python.keras.api._v1.keras.preprocessing.image', 'tensorflow.python.keras.api._v1.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v1.keras.preprocessing.text', 'tensorflow.python.keras.api._v1.keras.regularizers', 'tensorflow.python.keras.api._v1.keras.utils', 'tensorflow.python.keras.api._v1.keras.wrappers', 'tensorflow.python.keras.api._v1.keras.wrappers.scikit_learn', 'tensorflow._api.v2.compat.v1.compat.v2', 'tensorflow._api.v2.compat.v1.compat.v2.compat', 'tensorflow._api.v2.compat.v2', 'tensorflow._api.v2.compat.v2.audio', 'tensorflow._api.v2.compat.v2.autodiff', 'tensorflow._api.v2.compat.v2.autograph', 'tensorflow._api.v2.compat.v2.autograph.experimental', 'tensorflow._api.v2.compat.v2.bitwise', 'tensorflow._api.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.compat.v1', 'tensorflow._api.v2.compat.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v2.compat.v2', 'tensorflow._api.v2.compat.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.config', 'tensorflow._api.v2.compat.v2.config.experimental', 'tensorflow._api.v2.compat.v2.config.optimizer', 'tensorflow._api.v2.compat.v2.config.threading', 'tensorflow._api.v2.compat.v2.data', 'tensorflow._api.v2.compat.v2.data.experimental', 'tensorflow._api.v2.compat.v2.debugging', 'tensorflow._api.v2.compat.v2.debugging.experimental', 'tensorflow._api.v2.compat.v2.distribute', 'tensorflow._api.v2.compat.v2.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v2.distribute.experimental', 'tensorflow._api.v2.compat.v2.dtypes', 'tensorflow._api.v2.compat.v2.errors', 'tensorflow._api.v2.compat.v2.experimental', 'tensorflow._api.v2.compat.v2.experimental.dlpack', 'tensorflow._api.v2.compat.v2.experimental.tensorrt', 'tensorflow._api.v2.compat.v2.feature_column', 'tensorflow._api.v2.compat.v2.graph_util', 'tensorflow._api.v2.compat.v2.image', 'tensorflow._api.v2.compat.v2.io', 'tensorflow._api.v2.compat.v2.io.gfile', 'tensorflow._api.v2.compat.v2.linalg', 'tensorflow._api.v2.compat.v2.linalg.experimental', 'tensorflow._api.v2.compat.v2.lite', 'tensorflow._api.v2.compat.v2.lite.experimental', 'tensorflow._api.v2.compat.v2.lookup', 'tensorflow._api.v2.compat.v2.lookup.experimental', 'tensorflow._api.v2.compat.v2.math', 'tensorflow._api.v2.compat.v2.math.special', 'tensorflow._api.v2.compat.v2.mixed_precision', 'tensorflow._api.v2.compat.v2.mixed_precision.experimental', 'tensorflow._api.v2.compat.v2.mlir', 'tensorflow._api.v2.compat.v2.mlir.experimental', 'tensorflow._api.v2.compat.v2.nest', 'tensorflow._api.v2.compat.v2.nn', 'tensorflow._api.v2.compat.v2.profiler', 'tensorflow._api.v2.compat.v2.profiler.experimental', 'tensorflow._api.v2.compat.v2.profiler.experimental.client', 'tensorflow._api.v2.compat.v2.profiler.experimental.server', 'tensorflow._api.v2.compat.v2.quantization', 'tensorflow._api.v2.compat.v2.queue', 'tensorflow._api.v2.compat.v2.ragged', 'tensorflow._api.v2.compat.v2.random', 'tensorflow._api.v2.compat.v2.random.experimental', 'tensorflow._api.v2.compat.v2.raw_ops', 'tensorflow._api.v2.compat.v2.saved_model', 'tensorflow._api.v2.compat.v2.sets', 'tensorflow._api.v2.compat.v2.signal', 'tensorflow._api.v2.compat.v2.sparse', 'tensorflow._api.v2.compat.v2.strings', 'tensorflow._api.v2.compat.v2.summary', 'tensorflow._api.v2.compat.v2.summary.experimental', 'tensorflow._api.v2.compat.v2.sysconfig', 'tensorflow._api.v2.compat.v2.test', 'tensorflow._api.v2.compat.v2.tpu', 'tensorflow._api.v2.compat.v2.tpu.experimental', 'tensorflow._api.v2.compat.v2.train', 'tensorflow._api.v2.compat.v2.train.experimental', 'tensorflow._api.v2.compat.v2.version', 'tensorflow._api.v2.compat.v2.xla', 'tensorflow._api.v2.compat.v2.xla.experimental', 'tensorboard', 'tensorboard.errors', 'tensorboard.lazy', 'tensorboard.version', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_shape_pb2', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.util.lazy_tensor_creator', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.event_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary._tf', 'tensorboard.summary._tf.summary', 'tensorflow.python.keras.api._v2', 'tensorflow.python.keras.api._v2.keras', 'tensorflow.python.keras.api._v2.keras.activations', 'tensorflow.python.keras.api._v2.keras.applications', 'tensorflow.python.keras.api._v2.keras.applications.densenet', 'tensorflow.python.keras.api._v2.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v2.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.inception_v3', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v2.keras.applications.nasnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet50', 'tensorflow.python.keras.api._v2.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.vgg16', 'tensorflow.python.keras.api._v2.keras.applications.vgg19', 'tensorflow.python.keras.api._v2.keras.applications.xception', 'tensorflow.python.keras.api._v2.keras.backend', 'tensorflow.python.keras.api._v2.keras.callbacks', 'tensorflow.python.keras.api._v2.keras.constraints', 'tensorflow.python.keras.api._v2.keras.datasets', 'tensorflow.python.keras.api._v2.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v2.keras.datasets.cifar10', 'tensorflow.python.keras.api._v2.keras.datasets.cifar100', 'tensorflow.python.keras.api._v2.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v2.keras.datasets.imdb', 'tensorflow.python.keras.api._v2.keras.datasets.mnist', 'tensorflow.python.keras.api._v2.keras.datasets.reuters', 'tensorflow.python.keras.api._v2.keras.estimator', 'tensorflow.python.keras.api._v2.keras.experimental', 'tensorflow.python.keras.api._v2.keras.initializers', 'tensorflow.python.keras.api._v2.keras.layers', 'tensorflow.python.keras.api._v2.keras.layers.experimental', 'tensorflow.python.keras.api._v2.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v2.keras.losses', 'tensorflow.python.keras.api._v2.keras.metrics', 'tensorflow.python.keras.api._v2.keras.mixed_precision', 'tensorflow.python.keras.api._v2.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v2.keras.models', 'tensorflow.python.keras.api._v2.keras.optimizers', 'tensorflow.python.keras.api._v2.keras.optimizers.schedules', 'tensorflow.python.keras.api._v2.keras.preprocessing', 'tensorflow.python.keras.api._v2.keras.preprocessing.image', 'tensorflow.python.keras.api._v2.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v2.keras.preprocessing.text', 'tensorflow.python.keras.api._v2.keras.regularizers', 'tensorflow.python.keras.api._v2.keras.utils', 'tensorflow.python.keras.api._v2.keras.wrappers', 'tensorflow.python.keras.api._v2.keras.wrappers.scikit_learn', 'tensorflow._api.v2.config', 'tensorflow._api.v2.config.experimental', 'tensorflow._api.v2.config.optimizer', 'tensorflow._api.v2.config.threading', 'tensorflow._api.v2.data', 'tensorflow._api.v2.data.experimental', 'tensorflow._api.v2.debugging', 'tensorflow._api.v2.debugging.experimental', 'tensorflow._api.v2.distribute', 'tensorflow._api.v2.distribute.cluster_resolver', 'tensorflow._api.v2.distribute.experimental', 'tensorflow._api.v2.dtypes', 'tensorflow._api.v2.errors', 'tensorflow._api.v2.experimental', 'tensorflow._api.v2.experimental.dlpack', 'tensorflow._api.v2.experimental.tensorrt', 'tensorflow._api.v2.feature_column', 'tensorflow._api.v2.graph_util', 'tensorflow._api.v2.image', 'tensorflow._api.v2.io', 'tensorflow._api.v2.io.gfile', 'tensorflow._api.v2.linalg', 'tensorflow._api.v2.linalg.experimental', 'tensorflow._api.v2.lite', 'tensorflow._api.v2.lite.experimental', 'tensorflow._api.v2.lookup', 'tensorflow._api.v2.lookup.experimental', 'tensorflow._api.v2.math', 'tensorflow._api.v2.math.special', 'tensorflow._api.v2.mixed_precision', 'tensorflow._api.v2.mixed_precision.experimental', 'tensorflow._api.v2.mlir', 'tensorflow._api.v2.mlir.experimental', 'tensorflow._api.v2.nest', 'tensorflow._api.v2.nn', 'tensorflow._api.v2.profiler', 'tensorflow._api.v2.profiler.experimental', 'tensorflow._api.v2.profiler.experimental.client', 'tensorflow._api.v2.profiler.experimental.server', 'tensorflow._api.v2.quantization', 'tensorflow._api.v2.queue', 'tensorflow._api.v2.ragged', 'tensorflow._api.v2.random', 'tensorflow._api.v2.random.experimental', 'tensorflow._api.v2.raw_ops', 'tensorflow._api.v2.saved_model', 'tensorflow._api.v2.sets', 'tensorflow._api.v2.signal', 'tensorflow._api.v2.sparse', 'tensorflow._api.v2.strings', 'tensorflow._api.v2.summary', 'tensorflow._api.v2.summary.experimental', 'tensorflow._api.v2.sysconfig', 'tensorflow._api.v2.test', 'tensorflow._api.v2.tpu', 'tensorflow._api.v2.tpu.experimental', 'tensorflow._api.v2.train', 'tensorflow._api.v2.train.experimental', 'tensorflow._api.v2.version', 'tensorflow._api.v2.xla', 'tensorflow._api.v2.xla.experimental', 'tensorflow.keras', 'tensorflow.keras.activations', 'tensorflow.keras.applications', 'tensorflow.keras.applications.densenet', 'tensorflow.keras.applications.imagenet_utils', 'tensorflow.keras.applications.inception_resnet_v2', 'tensorflow.keras.applications.inception_v3', 'tensorflow.keras.applications.mobilenet', 'tensorflow.keras.applications.mobilenet_v2', 'tensorflow.keras.applications.nasnet', 'tensorflow.keras.applications.resnet', 'tensorflow.keras.applications.resnet50', 'tensorflow.keras.applications.resnet_v2', 'tensorflow.keras.applications.vgg16', 'tensorflow.keras.applications.vgg19', 'tensorflow.keras.applications.xception', 'tensorflow.keras.backend', 'tensorflow.keras.callbacks', 'tensorflow.keras.constraints', 'tensorflow.keras.datasets', 'tensorflow.keras.datasets.boston_housing', 'tensorflow.keras.datasets.cifar10', 'tensorflow.keras.datasets.cifar100', 'tensorflow.keras.datasets.fashion_mnist', 'tensorflow.keras.datasets.imdb', 'tensorflow.keras.datasets.mnist', 'tensorflow.keras.datasets.reuters', 'tensorflow.keras.estimator', 'tensorflow.keras.experimental', 'tensorflow.keras.initializers', 'tensorflow.keras.layers', 'tensorflow.keras.layers.experimental', 'tensorflow.keras.layers.experimental.preprocessing', 'tensorflow.keras.losses', 'tensorflow.keras.metrics', 'tensorflow.keras.mixed_precision', 'tensorflow.keras.mixed_precision.experimental', 'tensorflow.keras.models', 'tensorflow.keras.optimizers', 'tensorflow.keras.optimizers.schedules', 'tensorflow.keras.preprocessing', 'tensorflow.keras.preprocessing.image', 'tensorflow.keras.preprocessing.sequence', 'tensorflow.keras.preprocessing.text', 'tensorflow.keras.regularizers', 'tensorflow.keras.utils', 'tensorflow.keras.wrappers', 'tensorflow.keras.wrappers.scikit_learn', 'keras.utils.losses_utils', 'keras.utils.metrics_utils', 'keras.utils.layer_utils', 'keras.utils.vis_utils', 'keras.models', 'keras.engine', 'keras.engine.input_layer', 'keras.engine.base_layer', 'keras.initializers', 'keras.legacy', 'keras.legacy.interfaces', 'keras.engine.network', 'keras.engine.saving', 'keras.losses', 'keras.optimizers', 'keras.engine.training', 'keras.engine.training_utils', 'keras.metrics', 'keras.layers', 'keras.layers.merge', 'keras.layers.core', 'keras.activations', 'keras.regularizers', 'keras.constraints', 'keras.layers.convolutional', 'keras.layers.pooling', 'keras.legacy.layers', 'keras.layers.local', 'keras.layers.recurrent', 'keras.layers.cudnn_recurrent', 'keras.layers.normalization', 'keras.layers.embeddings', 'keras.layers.noise', 'keras.layers.advanced_activations', 'keras.layers.wrappers', 'keras.layers.convolutional_recurrent', 'keras.engine.training_arrays', 'keras.callbacks', 'keras.callbacks.callbacks', 'keras.callbacks.tensorboard_v2', 'keras.engine.training_generator', 'keras.engine.sequential', 'keras.utils.multi_gpu_utils', 'keras.applications', 'keras_applications', 'keras_applications.vgg16', 'keras_applications.imagenet_utils', 'keras_applications.vgg19', 'keras_applications.resnet50', 'keras_applications.inception_v3', 'keras_applications.inception_resnet_v2', 'keras_applications.xception', 'keras_applications.mobilenet', 'keras_applications.mobilenet_v2', 'keras_applications.densenet', 'keras_applications.nasnet', 'keras_applications.resnet', 'keras_applications.resnet_common', 'keras_applications.resnet_v2', 'keras_applications.resnext', 'keras.applications.vgg16', 'keras.applications.vgg19', 'keras.applications.resnet50', 'keras.applications.inception_v3', 'keras.applications.inception_resnet_v2', 'keras.applications.xception', 'keras.applications.mobilenet', 'keras.applications.mobilenet_v2', 'keras.applications.densenet', 'keras.applications.nasnet', 'keras.applications.resnet', 'keras.applications.resnet_v2', 'keras.datasets', 'keras.datasets.mnist', 'keras.datasets.imdb', 'keras.preprocessing', 'keras.preprocessing.image', 'keras.preprocessing.sequence', 'keras.preprocessing.text', 'keras.datasets.reuters', 'keras.datasets.cifar10', 'keras.datasets.cifar', 'keras.datasets.cifar100', 'keras.datasets.boston_housing', 'keras.datasets.fashion_mnist', 'keras.wrappers', 'keras.wrappers.scikit_learn', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from C:\Users\Chelovek\.matplotlib\fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib:CONFIGDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib:(private) matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:loaded rc file D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data\matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.1
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is win32
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_winapi', '_bootlocale', '_locale', 'encodings.cp1251', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'pywin32_bootstrap', 'glob', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'fnmatch', 'posixpath', 'numpy', '__future__', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'ctypes', '_ctypes', 'struct', '_struct', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', 'time', 'math', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'errno', 'urllib', 'urllib.parse', 'pickle', '_compat_pickle', '_pickle', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'collections.abc', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'subprocess', 'signal', 'threading', 'traceback', 'linecache', 'tokenize', 'token', '_weakrefset', 'msvcrt', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'ast', '_ast', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'weakref', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random._bit_generator', '_cython_0_29_17', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'tqdm', 'tqdm.std', 'tqdm.utils', 'socket', '_socket', 'selectors', 'select', 'colorama', 'colorama.initialise', 'atexit', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes.wintypes', 'unicodedata', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'logging', 'string', '_string', 'common', 'argparse', 'gettext', 'locale', 'librosa', 'librosa.version', 'librosa._cache', 'joblib', 'joblib.memory', 'pydoc', 'inspect', 'dis', 'opcode', '_opcode', 'pkgutil', 'joblib.hashing', 'joblib._compat', 'joblib.func_inspect', 'joblib.logger', 'pprint', 'joblib.disk', 'joblib._memory_helpers', 'joblib._store_backends', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'joblib.backports', 'distutils', 'distutils.version', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'tempfile', '_multiprocessing', 'joblib.format_stack', 'joblib.my_exceptions', 'joblib._parallel_backends', 'gc', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'uuid', 'multiprocessing.pool', 'queue', '_queue', 'multiprocessing.util', 'joblib.executor', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_win32', 'multiprocessing.popen_spawn_win32', 'multiprocessing.spawn', 'runpy', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._win_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'librosa.core', 'librosa.core.time_frequency', 'six', 'librosa.util', 'librosa.util.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'typing', 'typing.io', 'typing.re', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_cython_0_29_14', '_ni_label', 'scipy.ndimage.morphology', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'difflib', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy._lib._util', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'numba', 'numba._version', 'numba.core', 'numba.core.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'pkg_resources', 'zipfile', 'plistlib', 'xml', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources.py31compat', 'pkg_resources._vendor.appdirs', 'win32com', 'win32api', 'pythoncom', 'pywintypes', 'imp', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'copy', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'sysconfig', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.testing', 'numba.testing.main', 'cProfile', '_lsprof', 'profile', 'numba.testing.loader', 'numba.testing._runtests', 'numba.core.types', 'numba.core.utils', 'timeit', 'numba.core.types.abstract', 'numba.core.types.containers', 'numba.core.types.common', 'numba.core.types.misc', 'numba.core.typeconv', 'numba.core.typeconv.castgraph', 'numba.core.errors', 'numba.core.types.functions', 'numba.core.types.iterators', 'numba.core.types.npytypes', 'numba.core.types.scalars', 'numba.np', 'numba.np.npdatetime_helpers', 'numba.core.types.function_type', 'numba.misc', 'numba.misc.special', 'numba.core.typing', 'numba.core.typing.context', 'numba.core.typeconv.rules', 'numba.core.typeconv.typeconv', 'numba.core.typeconv._typeconv', 'numba.core.typing.templates', 'numba.core.cpu_options', 'numba.core.typing.typeof', 'numba.np.numpy_support', 'numba.core.cgutils', 'numba.core.datamodel', 'numba.core.datamodel.manager', 'numba.core.datamodel.packer', 'numba.core.datamodel.registry', 'numba.core.datamodel.models', 'numba.core.decorators', 'numba.stencils', 'numba.stencils.stencil', 'numba.core.ir', 'numba.core.consts', 'numba.core.ir_utils', 'numba.core.extending', 'numba.core.imputils', 'numba.core.pythonapi', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._helperlib', 'numba.core.lowering', 'numba._dynfunc', 'numba.core.debuginfo', 'numba.core.funcdesc', 'numba.core.itanium_mangler', 'numba.core.generators', 'numba.core.analysis', 'numba.core.controlflow', 'numba.core.postproc', 'numba.core.transforms', 'numba.core.rewrites', 'numba.core.rewrites.registry', 'numba.core.rewrites.static_getitem', 'numba.core.rewrites.static_raise', 'numba.core.rewrites.static_binop', 'numba.core.rewrites.ir_print', 'numba.core.rewrites.macros', 'numba.core.registry', 'numba.core.descriptors', 'numba.core.dispatcher', 'numba._dispatcher', 'numba.core.serialize', 'numba.core.bytecode', 'numba.core.compiler', 'numba.core.tracing', 'numba.core.interpreter', 'numba.core.dataflow', 'numba.core.byteflow', 'numba.core.unsafe', 'numba.core.unsafe.eh', 'numba.core.callconv', 'numba.core.base', 'numba.core.compiler_lock', 'numba.np.arrayobj', 'numba.misc.quicksort', 'numba.misc.mergesort', 'numba.cpython', 'numba.cpython.slicing', 'numba.cpython.unsafe', 'numba.cpython.unsafe.tuple', 'numba.cpython.builtins', 'numba.core.typing.builtins', 'numba.parfors', 'numba.parfors.parfor_lowering', 'numba.parfors.parfor', 'numba.core.typeinfer', 'numba.stencils.stencilparfor', 'numba.core.typing.npydecl', 'numba.parfors.array_analysis', 'numba.core.sigutils', 'numba.parfors.parfor_lowering_utils', 'numba.extending', 'numba.core.cpu', 'numba.core.callwrapper', 'numba.core.codegen', 'llvmlite.llvmpy.passes', 'numba.core.runtime', 'numba.core.runtime.nrt', 'numba.core.runtime.nrtdynmod', 'numba.core.runtime._nrt_python', 'numba.core.runtime.nrtopt', 'numba.misc.inspection', 'numba.core.externals', 'numba.core.intrinsics', 'numba.core.fastmathpass', 'numba.core.options', 'numba.core.entrypoints', 'numba.cpython.setobj', 'numba.cpython.listobj', 'numba.core.inline_closurecall', 'numba.cpython.rangeobj', 'numba.np.unsafe', 'numba.np.unsafe.ndarray', 'numba.core.compiler_machinery', 'numba.core.untyped_passes', 'numba.core.ssa', 'numba.core.typed_passes', 'numba.core.annotations', 'numba.core.annotations.type_annotations', 'numba.core.object_mode_passes', 'numba.core.pylowering', 'numba.core.caching', 'numba.misc.appdirs', 'numba.np.ufunc', 'numba.np.ufunc.decorators', 'numba.np.ufunc._internal', 'numba.np.ufunc.ufuncbuilder', 'numba.np.ufunc.sigparse', 'numba.np.ufunc.wrappers', 'numba.np.ufunc.parallel', 'numba.np.ufunc.dufunc', 'numba.np.ufunc.array_exprs', 'numba.experimental', 'numba.experimental.jitclass', 'numba.experimental.jitclass.decorators', 'numba.experimental.jitclass.base', 'numba.experimental.jitclass._box', 'numba.experimental.jitclass.boxing', 'numba.core.withcontexts', 'numba.cpython.charseq', 'numba.cpython.unicode', 'numba.cpython.hashing', 'numba.core.unsafe.bytes', 'numba.cpython.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.typed.dictobject', 'numba.typed.typedobjectutils', 'numba.core.boxing', 'numba.typed.dictimpl', 'numba.experimental.function_type', 'numba.core.ccallback', 'numba.core.typing.ctypes_utils', 'numba.typed.typedlist', 'numba.typed.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'decorator', 'numba.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy._lib.messagestream', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy._lib.decorator', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.integrate', 'scipy.integrate.quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.stats', 'scipy.stats.stats', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.stats._stats', 'scipy.stats._tukeylambda_stats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._rvs_sampling', 'scipy.stats._hypotests', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'sklearn.utils.fixes', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils.deprecation', 'sklearn.utils._estimator_html_repr', 'html', 'html.entities', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils.sparsefuncs', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'array', 'sklearn.utils.multiclass', 'sklearn.preprocessing._discretization', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'threadpoolctl', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'csv', '_csv', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'keras_model', 'keras', 'keras.utils', 'keras.utils.np_utils', 'keras.utils.generic_utils', 'keras.utils.data_utils', 'tarfile', 'six.moves', 'six.moves.urllib', 'six.moves.urllib.error', 'urllib.error', 'urllib.response', 'six.moves.urllib.request', 'urllib.request', 'http', 'http.client', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'nturl2path', 'keras.utils.io_utils', 'h5py', 'h5py._errors', 'h5py._hl', 'h5py._hl.compat', 'h5py.version', 'h5py.h5', '_cython_0_29_13', 'h5py.defs', 'h5py._objects', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.utils', 'h5py.h5py_warnings', 'h5py.h5z', 'h5py.h5a', 'h5py.h5s', 'h5py.h5p', 'h5py.h5ac', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl.filters', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'keras.utils.conv_utils', 'keras.backend', 'keras.backend.load_backend', 'keras.backend.common', 'keras.backend.tensorflow_backend', 'tensorflow', 'tensorflow.python', 'tensorflow.python.pywrap_tensorflow', 'tensorflow.python.platform', 'tensorflow.python.platform.self_check', 'tensorflow.python.platform.build_info', 'tensorflow.python.pywrap_dlopen_global_flags', 'tensorflow.python.pywrap_tensorflow_internal', 'swig_runtime_data4', '_pywrap_tensorflow_internal', 'tensorflow.core', 'tensorflow.core.framework', 'tensorflow.core.framework.graph_pb2', 'google.protobuf', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorflow.core.framework.function_pb2', 'tensorflow.core.framework.attr_value_pb2', 'tensorflow.core.framework.tensor_pb2', 'tensorflow.core.framework.resource_handle_pb2', 'tensorflow.core.framework.tensor_shape_pb2', 'google.protobuf.internal.well_known_types', 'tensorflow.core.framework.types_pb2', 'tensorflow.core.framework.node_def_pb2', 'tensorflow.core.framework.op_def_pb2', 'tensorflow.core.framework.versions_pb2', 'tensorflow.core.framework.summary_pb2', 'tensorflow.core.protobuf', 'tensorflow.core.protobuf.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorflow.core.protobuf.saved_object_graph_pb2', 'tensorflow.core.framework.variable_pb2', 'tensorflow.core.protobuf.struct_pb2', 'tensorflow.core.protobuf.trackable_object_graph_pb2', 'tensorflow.core.protobuf.saver_pb2', 'tensorflow.core.protobuf.config_pb2', 'tensorflow.core.framework.cost_graph_pb2', 'tensorflow.core.framework.step_stats_pb2', 'tensorflow.core.framework.allocation_description_pb2', 'tensorflow.core.framework.tensor_description_pb2', 'tensorflow.core.protobuf.cluster_pb2', 'tensorflow.core.protobuf.debug_pb2', 'tensorflow.core.protobuf.rewriter_config_pb2', 'tensorflow.core.protobuf.verifier_config_pb2', 'tensorflow.core.protobuf.tensorflow_server_pb2', 'tensorflow.core.protobuf.device_filters_pb2', 'tensorflow.core.util', 'tensorflow.core.util.event_pb2', 'tensorflow.python.framework', 'tensorflow.python.framework.framework_lib', 'tensorflow.python.framework.device', 'tensorflow.python.tf2', 'tensorflow.python.framework.device_spec', 'tensorflow.python.util', 'tensorflow.python.util.tf_export', 'tensorflow.python.util.tf_decorator', 'tensorflow.python.util.tf_stack', 'tensorflow.python._tf_stack', 'tensorflow.python.util.tf_inspect', 'tensorflow.python.framework.ops', 'tensorflow.python.pywrap_tfe', 'tensorflow.python._pywrap_tfe', 'tensorflow.python.client', 'tensorflow.python.client.pywrap_tf_session', 'tensorflow.python._pywrap_tf_session', 'tensorflow.python.eager', 'tensorflow.python.eager.context', 'absl', 'absl.logging', 'getpass', 'absl.flags', 'getopt', 'absl.flags._argument_parser', 'absl.flags._helpers', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'absl.flags._validators', 'absl.logging.converter', 'tensorflow.python.eager.executor', 'tensorflow.python.eager.monitoring', 'tensorflow.python.framework.c_api_util', 'tensorflow.core.framework.api_def_pb2', 'tensorflow.python.util.compat', 'tensorflow.python.util.tf_contextlib', 'tensorflow.python.util.is_in_graph_mode', 'tensorflow.python.eager.core', 'tensorflow.python.framework.errors', 'tensorflow.python.framework.errors_impl', 'tensorflow.core.lib', 'tensorflow.core.lib.core', 'tensorflow.core.lib.core.error_codes_pb2', 'tensorflow.core.protobuf.error_codes_pb2', 'tensorflow.python._pywrap_py_exception_registry', 'tensorflow.python.framework.error_interpolation', 'tensorflow.core.protobuf.graph_debug_info_pb2', 'tensorflow.python.util.deprecation', 'tensorflow.python.platform.tf_logging', 'tensorflow.python.util.decorator_utils', 'tensorflow.python.eager.tape', 'tensorflow.python.util.lazy_loader', 'tensorflow.python.framework.composite_tensor', 'tensorflow.python._pywrap_utils', 'tensorflow.python.util.nest', 'wrapt', 'wrapt.wrappers', 'wrapt._wrappers', 'wrapt.decorators', 'wrapt.importer', 'tensorflow.python.framework.dtypes', 'tensorflow.python._pywrap_bfloat16', 'tensorflow.python._dtypes', 'tensorflow.python.framework.indexed_slices', 'tensorflow.python.framework.tensor_conversion_registry', 'tensorflow.python.framework.tensor_like', 'tensorflow.python.framework.tensor_shape', 'tensorflow.python.framework.type_spec', 'tensorflow.python.framework.registry', 'tensorflow.python.framework.traceable_stack', 'tensorflow.python.framework.versions', 'tensorflow.python.ops', 'tensorflow.python.ops.control_flow_util', 'tensorflow.python.platform.app', 'absl.app', 'pdb', 'cmd', 'bdb', 'code', 'codeop', 'absl.command_name', 'faulthandler', 'tensorflow.python.platform.flags', 'tensorflow.python.util.function_utils', 'tensorflow.python.util.lock_util', 'tensorflow.python.util.memory', 'tensorflow.python.util.object_identity', 'tensorflow.python.framework.sparse_tensor', 'tensorflow.python.framework.constant_op', 'tensorflow.python.eager.execute', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'tensorflow.python.framework.tensor_util', 'tensorflow.python.framework.tensor_spec', 'tensorflow.python.framework.common_shapes', 'tensorflow.python.ops.gen_sparse_ops', 'tensorflow.python.framework.op_def_registry', 'tensorflow.python._op_def_registry', 'tensorflow.python.framework.op_def_library', 'tensorflow.python.framework.op_callbacks', 'tensorflow.python.util.dispatch', 'tensorflow.python.framework.random_seed', 'tensorflow.python.framework.importer', 'tensorflow.python.framework.function', 'tensorflow.python.framework.graph_to_function_def', 'tensorflow.python.ops.array_ops', 'tensorflow.python.ops.gen_array_ops', 'tensorflow.python.ops.gen_math_ops', 'tensorflow.python.ops.resource_variable_ops', 'tensorflow.python.framework.auto_control_deps_utils', 'tensorflow.python.framework.cpp_shape_inference_pb2', 'tensorflow.python.ops.gen_logging_ops', 'tensorflow.python.ops.gen_resource_variable_ops', 'tensorflow.python.ops.gen_state_ops', 'tensorflow.python.ops.math_ops', 'tensorflow.python.framework.graph_util', 'tensorflow.python.framework.graph_util_impl', 'tensorflow.python.ops.gen_data_flow_ops', 'tensorflow.python.ops.gen_nn_ops', 'tensorflow.python.ops.state_ops', 'tensorflow.python.ops.variables', 'tensorflow.python.ops.control_flow_ops', 'tensorflow.core.protobuf.control_flow_pb2', 'tensorflow.python.ops.gen_control_flow_ops', 'tensorflow.python.ops.tensor_array_ops', 'tensorflow.python.ops.list_ops', 'tensorflow.python.ops.gen_list_ops', 'tensorflow.python.util.tf_should_use', 'tensorflow.python.training', 'tensorflow.python.training.tracking', 'tensorflow.python.training.tracking.base', 'tensorflow.python.ops.gen_io_ops', 'tensorflow.python.training.saving', 'tensorflow.python.training.saving.saveable_object', 'tensorflow.python.ops.variable_scope', 'tensorflow.python.client.session', 'tensorflow.python.ops.session_ops', 'tensorflow.python.training.experimental', 'tensorflow.python.training.experimental.mixed_precision_global_state', 'tensorflow.python.ops.init_ops', 'tensorflow.python.ops.gen_linalg_ops', 'tensorflow.python.ops.linalg_ops_impl', 'tensorflow.python.ops.random_ops', 'tensorflow.python.ops.gen_random_ops', 'tensorflow.python.framework.load_library', 'tensorflow.python._pywrap_python_op_gen', 'tensorflow.python.lib', 'tensorflow.python.lib.io', 'tensorflow.python.lib.io.file_io', 'tensorflow.python._pywrap_file_io', 'tensorflow.python.framework.config', 'tensorflow.python.client.client_lib', 'tensorflow.python.ops.standard_ops', 'tensorflow.python.autograph', 'tensorflow.python.autograph.operators', 'tensorflow.python.autograph.operators.control_flow', 'tensorflow.python.autograph.operators.py_builtins', 'tensorflow.python.autograph.utils', 'tensorflow.python.autograph.utils.context_managers', 'tensorflow.python.autograph.utils.misc', 'tensorflow.python.autograph.utils.py_func', 'tensorflow.python.ops.script_ops', 'tensorflow.python._pywrap_py_func', 'tensorflow.python.eager.backprop', 'tensorflow.python.eager.backprop_util', 'tensorflow.python.eager.imperative_grad', 'tensorflow.python.ops.unconnected_gradients', 'tensorflow.python.ops.check_ops', 'tensorflow.python.ops.default_gradient', 'tensorflow.python.framework.func_graph', 'tensorflow.python.eager.graph_only_ops', 'tensorflow.python.framework.auto_control_deps', 'tensorflow.python.ops.custom_gradient', 'tensorflow.python.ops.op_selector', 'tensorflow.python.ops.gen_script_ops', 'tensorflow.python.autograph.utils.tensor_list', 'tensorflow.python.autograph.utils.testing', 'tensorflow.python.autograph.utils.type_check', 'tensorflow.python.autograph.utils.tensors', 'tensorflow.python.data', 'tensorflow.python.data.experimental', 'tensorflow.python.data.experimental.ops', 'tensorflow.python.data.experimental.ops.batching', 'tensorflow.python.data.ops', 'tensorflow.python.data.ops.dataset_ops', 'tensorflow.python.compat', 'tensorflow.python.compat.compat', 'tensorflow.python.data.experimental.ops.distribute_options', 'tensorflow.python.data.util', 'tensorflow.python.data.util.options', 'tensorflow.python.data.experimental.ops.optimization_options', 'tensorflow.python.data.experimental.ops.stats_options', 'tensorflow.python.data.experimental.ops.stats_aggregator', 'tensorflow.python.ops.gen_experimental_dataset_ops', 'tensorflow.python.ops.summary_ops_v2', 'tensorflow.python.eager.profiler', 'tensorflow.python._pywrap_events_writer', 'tensorflow.python.platform.gfile', 'tensorflow.python.profiler', 'tensorflow.python.profiler.internal', 'tensorflow.python.profiler.internal._pywrap_profiler', 'tensorflow.python.framework.smart_cond', 'tensorflow.python.ops.gen_summary_ops', 'tensorflow.python.ops.summary_op_util', 'tensorflow.python.training.training_util', 'tensorflow.python.framework.graph_io', 'tensorflow.python.data.experimental.ops.threading_options', 'tensorflow.python.data.ops.iterator_ops', 'tensorflow.python.data.ops.optional_ops', 'tensorflow.python.data.util.structure', 'tensorflow.python.data.util.nest', 'tensorflow.python.ops.ragged', 'tensorflow.python.ops.ragged.ragged_array_ops', 'tensorflow.python.ops.sort_ops', 'tensorflow.python.ops.nn_ops', 'tensorflow.python.platform.device_context', 'tensorflow.python.ops.ragged.ragged_functional_ops', 'tensorflow.python.ops.ragged.ragged_config', 'tensorflow.python.ops.ragged.ragged_tensor', 'tensorflow.python.ops.gen_ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_tensor_value', 'tensorflow.python.ops.ragged.ragged_util', 'tensorflow.python.ops.gen_ragged_math_ops', 'tensorflow.python.ops.ragged.segment_id_ops', 'tensorflow.python.ops.ragged.ragged_math_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_ops', 'tensorflow.python.ops.ragged.ragged_gather_ops', 'tensorflow.python.ops.gen_ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_with_default_op', 'tensorflow.python.ops.ragged.ragged_dispatch', 'tensorflow.python.ops.clip_ops', 'tensorflow.python.ops.data_flow_ops', 'tensorflow.python.lib.io.python_io', 'tensorflow.python.lib.io.tf_record', 'tensorflow.python._pywrap_record_io', 'tensorflow.python.ops.gen_bitwise_ops', 'tensorflow.python.ops.parsing_ops', 'tensorflow.python.ops.gen_parsing_ops', 'tensorflow.python.ops.parsing_config', 'tensorflow.python.ops.sparse_ops', 'tensorflow.python.ops.string_ops', 'tensorflow.python.ops.gen_string_ops', 'tensorflow.python.ops.ragged.ragged_concat_ops', 'tensorflow.python.ops.ragged.ragged_squeeze_op', 'tensorflow.python.ops.ragged.ragged_string_ops', 'tensorflow.python.ops.ragged.ragged_tensor_shape', 'tensorflow.python.ops.ragged.ragged_where_op', 'tensorflow.python.ops.ragged.ragged_operators', 'tensorflow.python.ops.ragged.ragged_getitem', 'tensorflow.python.ops.ragged.ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_factory_ops', 'tensorflow.python.ops.ragged.ragged_map_ops', 'tensorflow.python.ops.gen_dataset_ops', 'tensorflow.python.training.saver', 'tensorflow.python.framework.meta_graph', 'tensorflow.python.ops.io_ops', 'tensorflow.python.training.checkpoint_management', 'tensorflow.python.training.checkpoint_state_pb2', 'tensorflow.python.training.py_checkpoint_reader', 'tensorflow.python._pywrap_checkpoint_reader', 'tensorflow.python.training.saving.saveable_object_util', 'tensorflow.python.data.util.random_seed', 'tensorflow.python.data.util.traverse', 'tensorflow.python.eager.function', 'tensorflow.python.eager.forwardprop_util', 'tensorflow.python.ops.functional_ops', 'tensorflow.python.ops.gen_functional_ops', 'tensorflow.python.ops.gradients_util', 'tensorflow.python.ops.control_flow_state', 'tensorflow.python.ops.control_flow_v2_func_graphs', 'tensorflow.python.training.tracking.tracking', 'tensorflow.python.eager.def_function', 'tensorflow.python.eager.lift_to_graph', 'tensorflow.python.training.tracking.data_structures', 'tensorflow.python.saved_model', 'tensorflow.python.saved_model.revived_types', 'tensorflow.python.training.tracking.layer_utils', 'tensorflow.python.data.util.convert', 'tensorflow.python.data.experimental.ops.cardinality', 'tensorflow.python.data.experimental.ops.counter', 'tensorflow.python.data.experimental.ops.scan_ops', 'tensorflow.python.data.experimental.ops.enumerate_ops', 'tensorflow.python.data.experimental.ops.error_ops', 'tensorflow.python.data.experimental.ops.get_single_element', 'tensorflow.python.data.experimental.ops.grouping', 'tensorflow.python.data.experimental.ops.interleave_ops', 'tensorflow.python.data.experimental.ops.random_ops', 'tensorflow.python.data.ops.readers', 'tensorflow.python.ops.gen_stateless_random_ops', 'tensorflow.python.data.experimental.ops.iterator_ops', 'tensorflow.python.training.basic_session_run_hooks', 'tensorflow.python.client.timeline', 'tensorflow.python.training.session_run_hook', 'tensorflow.python.training.summary_io', 'tensorflow.python.summary', 'tensorflow.python.summary.summary_iterator', 'tensorflow.python.summary.writer', 'tensorflow.python.summary.writer.writer', 'tensorflow.python.summary.plugin_asset', 'tensorflow.python.summary.writer.event_file_writer', 'tensorflow.python.summary.writer.event_file_writer_v2', 'tensorflow.python.summary.writer.writer_cache', 'tensorflow.python.data.experimental.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.prefetching_ops', 'tensorflow.python.data.experimental.ops.readers', 'gzip', 'tensorflow.python.data.experimental.ops.resampling', 'tensorflow.python.ops.logging_ops', 'tensorflow.python.data.experimental.ops.shuffle_ops', 'tensorflow.python.data.experimental.ops.stats_ops', 'tensorflow.python.data.experimental.ops.take_while_ops', 'tensorflow.python.data.experimental.ops.unique', 'tensorflow.python.data.experimental.ops.writers', 'tensorflow.python.util.all_util', 'tensorflow.python.autograph.operators.special_values', 'tensorflow.python.autograph.utils.ag_logging', 'tensorflow.python.autograph.utils.compat_util', 'tensorflow.python.autograph.operators.data_structures', 'tensorflow.python.autograph.operators.exceptions', 'tensorflow.python.autograph.operators.logical', 'tensorflow.python.autograph.operators.slices', 'tensorflow.python.autograph.core', 'tensorflow.python.autograph.core.converter', 'tensorflow.python.autograph.pyct', 'tensorflow.python.autograph.pyct.anno', 'gast', 'gast.gast', 'gast.ast3', 'gast.astn', 'tensorflow.python.autograph.pyct.ast_util', 'tensorflow.python.autograph.pyct.parser', 'astunparse', 'astunparse.unparser', 'astunparse.printer', 'tensorflow.python.autograph.pyct.errors', 'tensorflow.python.autograph.pyct.inspect_utils', 'tensorflow.python.autograph.pyct.qual_names', 'tensorflow.python.autograph.pyct.cfg', 'tensorflow.python.autograph.pyct.templates', 'tensorflow.python.autograph.pyct.transformer', 'tensorflow.python.autograph.pyct.loader', 'tensorflow.python.autograph.pyct.origin_info', 'tensorflow.python.autograph.pyct.pretty_printer', 'termcolor', 'tensorflow.python.autograph.pyct.static_analysis', 'tensorflow.python.autograph.pyct.static_analysis.activity', 'tensorflow.python.autograph.pyct.static_analysis.annos', 'tensorflow.python.autograph.pyct.static_analysis.liveness', 'tensorflow.python.autograph.pyct.static_analysis.reaching_definitions', 'tensorflow.python.autograph.impl', 'tensorflow.python.autograph.impl.api', 'tensorflow.python.autograph.core.ag_ctx', 'tensorflow.python.autograph.impl.conversion', 'tensorflow.python.autograph.converters', 'tensorflow.python.autograph.converters.arg_defaults', 'tensorflow.python.autograph.converters.asserts', 'tensorflow.python.autograph.converters.break_statements', 'tensorflow.python.autograph.converters.call_trees', 'tensorflow.python.autograph.converters.conditional_expressions', 'tensorflow.python.autograph.converters.continue_statements', 'tensorflow.python.autograph.converters.control_flow', 'tensorflow.python.autograph.lang', 'tensorflow.python.autograph.lang.directives', 'tensorflow.python.autograph.converters.directives', 'tensorflow.python.autograph.converters.function_scopes', 'tensorflow.python.autograph.converters.lists', 'tensorflow.python.autograph.converters.logical_expressions', 'tensorflow.python.autograph.converters.return_statements', 'tensorflow.python.autograph.converters.slices', 'tensorflow.python.autograph.core.config', 'tensorflow.python.autograph.core.config_lib', 'tensorflow.python.autograph.core.function_wrappers', 'tensorflow.python.autograph.core.naming', 'tensorflow.python.autograph.core.unsupported_features_checker', 'tensorflow.python.autograph.lang.special_functions', 'tensorflow.python.autograph.pyct.error_utils', 'tensorflow.python.training.experimental.loss_scaling_gradient_tape', 'tensorflow.python.distribute', 'tensorflow.python.distribute.cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.cluster_resolver', 'tensorflow.python.training.server_lib', 'tensorflow.python.distribute.cluster_resolver.gce_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.kubernetes_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.slurm_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tfconfig_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver', 'tensorflow.python.tpu', 'tensorflow.python.tpu.client', 'tensorflow.python.tpu.client.client', 'tensorflow.python.distribute.cross_device_ops', 'tensorflow.python.client.device_lib', 'tensorflow.core.framework.device_attributes_pb2', 'tensorflow.python._pywrap_device_lib', 'tensorflow.python.distribute.collective_util', 'tensorflow.python.distribute.cross_device_utils', 'tensorflow.python.distribute.all_reduce', 'tensorflow.python.ops.nccl_ops', 'tensorflow.python.ops.gen_nccl_ops', 'tensorflow.python.distribute.values', 'tensorflow.python.distribute.device_util', 'tensorflow.python.distribute.distribute_lib', 'tensorflow.python.distribute.distribution_strategy_context', 'tensorflow.python.distribute.numpy_dataset', 'tensorflow.python.distribute.reduce_util', 'tensorflow.python.ops.losses', 'tensorflow.python.ops.losses.loss_reduction', 'tensorflow.python.ops.losses.losses_impl', 'tensorflow.python.ops.confusion_matrix', 'tensorflow.python.ops.nn', 'tensorflow.python.ops.ctc_ops', 'tensorflow.python.ops.gen_ctc_ops', 'tensorflow.python.ops.inplace_ops', 'tensorflow.python.ops.linalg_ops', 'tensorflow.python.ops.map_fn', 'tensorflow.python.ops.nn_grad', 'tensorflow.python.ops.embedding_ops', 'tensorflow.python.ops.data_flow_grad', 'tensorflow.python.ops.nn_impl', 'tensorflow.python.ops.candidate_sampling_ops', 'tensorflow.python.ops.gen_candidate_sampling_ops', 'tensorflow.python.ops.losses.util', 'tensorflow.python.ops.weights_broadcast_ops', 'tensorflow.python.ops.sets', 'tensorflow.python.ops.sets_impl', 'tensorflow.python.ops.gen_set_ops', 'tensorflow.tools', 'tensorflow.tools.docs', 'tensorflow.tools.docs.doc_controls', 'tensorflow.python.ops.collective_ops', 'tensorflow.python.ops.gen_collective_ops', 'tensorflow.python.distribute.tpu_values', 'tensorflow.python.tpu.tpu', 'tensorflow.core.protobuf.tpu', 'tensorflow.core.protobuf.tpu.dynamic_padding_pb2', 'tensorflow.python.compiler', 'tensorflow.python.compiler.xla', 'tensorflow.python.compiler.xla.jit', 'tensorflow.python.compiler.xla.xla', 'tensorflow.compiler', 'tensorflow.compiler.jit', 'tensorflow.compiler.jit.ops', 'tensorflow.compiler.jit.ops.xla_ops', 'tensorflow.compiler.jit.ops.xla_ops_grad', 'tensorflow.python.distribute.summary_op_util', 'tensorflow.python.tpu.tpu_function', 'tensorflow.python.tpu.ops', 'tensorflow.python.tpu.ops.tpu_ops', 'tensorflow.python.ops.gen_tpu_ops', 'tensorflow.python.framework.kernels', 'tensorflow.core.framework.kernel_def_pb2', 'tensorflow.python.distribute.mirrored_strategy', 'tensorflow.python.distribute.input_lib', 'tensorflow.python.data.experimental.ops.distribute', 'tensorflow.python.data.ops.multi_device_iterator_ops', 'tensorflow.python.distribute.input_ops', 'tensorflow.python.distribute.multi_worker_util', 'tensorflow.python.distribute.distribute_coordinator_context', 'tensorflow.python.distribute.shared_variable_creator', 'tensorflow.python.training.coordinator', 'tensorflow.python.distribute.one_device_strategy', 'tensorflow.python.distribute.experimental', 'tensorflow.python.distribute.central_storage_strategy', 'tensorflow.python.distribute.parameter_server_strategy', 'tensorflow.python.training.device_setter', 'tensorflow.python.distribute.collective_all_reduce_strategy', 'tensorflow.python.distribute.tpu_strategy', 'tensorflow.compiler.xla', 'tensorflow.compiler.xla.experimental', 'tensorflow.compiler.xla.experimental.xla_sharding', 'tensorflow.compiler.xla.experimental.xla_sharding.xla_sharding', 'tensorflow.compiler.tf2xla', 'tensorflow.compiler.tf2xla.python', 'tensorflow.compiler.tf2xla.python.xla', 'tensorflow.compiler.tf2xla.ops', 'tensorflow.compiler.tf2xla.ops.gen_xla_ops', 'tensorflow.python.ops.bitwise_ops', 'tensorflow.compiler.xla.xla_data_pb2', 'tensorflow.python.tpu.device_assignment', 'tensorflow.python.tpu.topology', 'tensorflow.core.protobuf.tpu.topology_pb2', 'tensorflow.python.tpu.tpu_strategy_util', 'tensorflow.python.tpu.tpu_system_metadata', 'tensorflow.python.tpu.training_loop', 'tensorflow.python.tpu.tensor_tracer', 'tensorflow.python.platform.analytics', 'tensorflow.python.tpu.tensor_tracer_flags', 'tensorflow.python.tpu.tensor_tracer_report', 'tensorflow.python.tpu.tensor_tracer_pb2', 'tensorflow.python.training.experimental.loss_scale', 'tensorflow.python.ops.array_grad', 'tensorflow.python.ops.cudnn_rnn_grad', 'tensorflow.python.ops.gen_cudnn_rnn_ops', 'tensorflow.python.ops.manip_grad', 'tensorflow.python.ops.manip_ops', 'tensorflow.python.ops.gen_manip_ops', 'tensorflow.python.ops.math_grad', 'tensorflow.python.ops.random_grad', 'tensorflow.python.ops.rnn_grad', 'tensorflow.python.ops.gen_rnn_ops', 'tensorflow.python.ops.sparse_grad', 'tensorflow.python.ops.state_grad', 'tensorflow.python.ops.tensor_array_grad', 'tensorflow.python.ops.special_math_ops', 'opt_einsum', 'opt_einsum.blas', 'opt_einsum.helpers', 'opt_einsum.parser', 'opt_einsum.paths', 'opt_einsum.path_random', 'opt_einsum.contract', 'opt_einsum.backends', 'opt_einsum.backends.cupy', 'opt_einsum.sharing', 'opt_einsum.backends.dispatch', 'opt_einsum.backends.jax', 'opt_einsum.backends.tensorflow', 'opt_einsum.backends.theano', 'opt_einsum.backends.torch', 'opt_einsum._version', 'tensorflow.python.ops.gen_special_math_ops', 'tensorflow.python.eager.wrap_function', 'tensorflow.python.saved_model.nested_structure_coder', 'tensorflow.python.ops.batch_ops', 'tensorflow.python.ops.gen_batch_ops', 'tensorflow.python.ops.critical_section_ops', 'tensorflow.python.ops.gradients', 'tensorflow.python.eager.forwardprop', 'tensorflow.python.ops.gradients_impl', 'tensorflow.python.ops.control_flow_grad', 'tensorflow.python.ops.image_grad', 'tensorflow.python.ops.gen_image_ops', 'tensorflow.python.ops.linalg_grad', 'tensorflow.python.ops.linalg', 'tensorflow.python.ops.linalg.linalg_impl', 'tensorflow.python.ops.optional_grad', 'tensorflow.python.ops.histogram_ops', 'tensorflow.python.ops.lookup_ops', 'tensorflow.python.ops.gen_lookup_ops', 'tensorflow.python.ops.numerics', 'tensorflow.python.ops.partitioned_variables', 'tensorflow.python.ops.proto_ops', 'tensorflow.python.ops.gen_decode_proto_ops', 'tensorflow.python.ops.gen_encode_proto_ops', 'tensorflow.python.ops.stateless_random_ops', 'tensorflow.python.ops.template', 'tensorflow.python.training.tracking.util', 'tensorflow.python.training.saving.functional_saver', 'tensorflow.python.training.saving.saveable_hook', 'tensorflow.python.training.tracking.graph_view', 'tensorflow.python.training.optimizer', 'tensorflow.python.training.slot_creator', 'tensorflow.python.ops.parallel_for', 'tensorflow.python.ops.parallel_for.control_flow_ops', 'tensorflow.python.ops.parallel_for.pfor', 'tensorflow.python.ops.gen_spectral_ops', 'tensorflow.python.ops.parallel_for.gradients', 'tensorflow.python.compiler.tensorrt', 'tensorflow.python.compiler.tensorrt.trt_convert_windows', 'tensorflow.python.ops.initializers_ns', 'tensorflow.python.keras', 'tensorflow.python.keras.models', 'tensorflow.python.keras.backend', 'tensorflow.python.distribute.distribute_coordinator', 'tensorflow.python.training.monitored_session', 'tensorflow.python.ops.resources', 'tensorflow.python.summary.summary', 'google.protobuf.json_format', 'tensorflow.python.training.queue_runner', 'tensorflow.python.training.queue_runner_impl', 'tensorflow.core.protobuf.queue_runner_pb2', 'tensorflow.python.training.session_manager', 'tensorflow.python.keras.backend_config', 'tensorflow.python.ops.image_ops', 'tensorflow.python.ops.image_ops_impl', 'tensorflow.python.training.moving_averages', 'tensorflow.python.keras.metrics', 'tensorflow.python.keras.engine', 'tensorflow.python.keras.engine.base_layer', 'tensorflow.python.keras.constraints', 'tensorflow.python.keras.utils', 'tensorflow.python.keras.utils.generic_utils', 'tensorflow.python.keras.initializers', 'tensorflow.python.ops.init_ops_v2', 'tensorflow.python.keras.regularizers', 'tensorflow.python.keras.engine.base_layer_utils', 'tensorflow.python.keras.engine.input_spec', 'tensorflow.python.keras.engine.node', 'tensorflow.python.keras.mixed_precision', 'tensorflow.python.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.autocast_variable', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale_optimizer', 'tensorflow.python.keras.optimizers', 'tensorflow.python.keras.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.adadelta', 'tensorflow.python.keras.optimizer_v2.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.learning_rate_schedule', 'tensorflow.python.keras.utils.tf_utils', 'tensorflow.python.training.training_ops', 'tensorflow.python.training.gen_training_ops', 'tensorflow.python.keras.optimizer_v2.adagrad', 'tensorflow.python.keras.optimizer_v2.adam', 'tensorflow.python.keras.optimizer_v2.adamax', 'tensorflow.python.keras.optimizer_v2.ftrl', 'tensorflow.python.keras.optimizer_v2.gradient_descent', 'tensorflow.python.keras.optimizer_v2.nadam', 'tensorflow.python.keras.optimizer_v2.rmsprop', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale', 'tensorflow.python.keras.mixed_precision.experimental.policy', 'tensorflow.python.keras.mixed_precision.experimental.device_compatibility_check', 'tensorflow.python.framework.gpu_util', 'tensorflow.python.keras.saving', 'tensorflow.python.keras.saving.saved_model', 'tensorflow.python.keras.saving.saved_model.layer_serialization', 'tensorflow.python.keras.saving.saved_model.base_serialization', 'tensorflow.python.keras.saving.saved_model.json_utils', 'tensorflow.python.util.serialization', 'tensorflow.python.keras.saving.saved_model.constants', 'tensorflow.python.keras.saving.saved_model.save_impl', 'tensorflow.python.keras.saving.saving_utils', 'tensorflow.python.keras.losses', 'tensorflow.python.keras.utils.losses_utils', 'tensorflow.python.keras.utils.io_utils', 'tensorflow.python.keras.saving.saved_model.load', 'tensorflow.python.keras.saving.saved_model.utils', 'tensorflow.python.keras.saving.saved_model.serialized_attributes', 'tensorflow.python.keras.utils.metrics_utils', 'tensorflow.python.saved_model.load', 'tensorflow.python.saved_model.function_deserialization', 'tensorflow.python.framework.function_def_to_graph', 'tensorflow.python.saved_model.load_v1_in_v2', 'tensorflow.python.saved_model.loader_impl', 'tensorflow.core.protobuf.saved_model_pb2', 'tensorflow.python.saved_model.constants', 'tensorflow.python.saved_model.signature_def_utils', 'tensorflow.python.saved_model.signature_def_utils_impl', 'tensorflow.python.saved_model.signature_constants', 'tensorflow.python.saved_model.utils_impl', 'tensorflow.python.saved_model.signature_serialization', 'tensorflow.python.saved_model.function_serialization', 'tensorflow.python.keras.utils.layer_utils', 'tensorflow.python.keras.utils.conv_utils', 'tensorflow.python.keras.utils.version_utils', 'tensorflow.python.module', 'tensorflow.python.module.module', 'tensorflow.python.keras.saving.saved_model.metric_serialization', 'tensorflow.python.keras.engine.network', 'tensorflow.python.keras.engine.compile_utils', 'tensorflow.python.keras.engine.input_layer', 'tensorflow.python.keras.distribute', 'tensorflow.python.keras.distribute.distributed_training_utils', 'tensorflow.python.keras.callbacks', 'tensorflow.python.distribute.distributed_file_utils', 'tensorflow.python.keras.distribute.multi_worker_training_state', 'tensorflow.python.keras.utils.mode_keys', 'tensorflow.python.saved_model.model_utils', 'tensorflow.python.saved_model.model_utils.export_output', 'tensorflow.python.saved_model.model_utils.export_utils', 'tensorflow.python.saved_model.tag_constants', 'tensorflow.python.saved_model.model_utils.mode_keys', 'tensorflow.python.keras.utils.data_utils', 'multiprocessing.dummy', 'multiprocessing.dummy.connection', 'tensorflow.python.profiler.profiler_v2', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'mimetypes', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'tensorflow.python.keras.engine.training_utils', 'tensorflow.python.framework.composite_tensor_utils', 'tensorflow.python.keras.saving.hdf5_format', 'tensorflow.python.keras.saving.model_config', 'tensorflow.python.keras.saving.save', 'tensorflow.python.keras.saving.saved_model.save', 'tensorflow.python.saved_model.save', 'tensorflow.python.saved_model.builder_impl', 'tensorflow.python.saved_model.save_options', 'tensorflow.python.keras.saving.saved_model.network_serialization', 'tensorflow.python.keras.engine.sequential', 'tensorflow.python.keras.layers', 'tensorflow.python.keras.engine.base_preprocessing_layer', 'tensorflow.python.keras.engine.training_generator', 'tensorflow.python.keras.layers.preprocessing', 'tensorflow.python.keras.layers.preprocessing.image_preprocessing', 'tensorflow.python.ops.stateful_random_ops', 'tensorflow.python.ops.gen_stateful_random_ops', 'tensorflow.python.keras.layers.preprocessing.normalization', 'tensorflow.python.keras.layers.preprocessing.normalization_v1', 'tensorflow.python.keras.engine.base_preprocessing_layer_v1', 'tensorflow.python.keras.layers.preprocessing.text_vectorization', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding', 'tensorflow.python.keras.layers.preprocessing.index_lookup', 'tensorflow.python.keras.layers.preprocessing.text_vectorization_v1', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding_v1', 'tensorflow.python.keras.layers.preprocessing.index_lookup_v1', 'tensorflow.python.keras.layers.advanced_activations', 'tensorflow.python.keras.layers.convolutional', 'tensorflow.python.keras.activations', 'tensorflow.python.keras.layers.pooling', 'tensorflow.python.keras.layers.core', 'tensorflow.python.keras.layers.dense_attention', 'tensorflow.python.keras.layers.embeddings', 'tensorflow.python.keras.layers.local', 'tensorflow.python.keras.layers.merge', 'tensorflow.python.keras.layers.noise', 'tensorflow.python.keras.layers.normalization', 'tensorflow.python.keras.layers.normalization_v2', 'tensorflow.python.keras.layers.kernelized', 'tensorflow.python.keras.layers.recurrent', 'tensorflow.python.keras.layers.recurrent_v2', 'tensorflow.python.keras.layers.convolutional_recurrent', 'tensorflow.python.keras.layers.cudnn_recurrent', 'tensorflow.python.keras.layers.wrappers', 'tensorflow.python.keras.layers.rnn_cell_wrapper_v2', 'tensorflow.python.ops.rnn_cell_wrapper_impl', 'tensorflow.python.keras.layers.serialization', 'tensorflow.python.keras.engine.training', 'tensorflow.python.keras.engine.data_adapter', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'dateutil', 'dateutil._version', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'dateutil.relativedelta', 'dateutil._common', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'tensorflow.python.keras.saving.saved_model.model_serialization', 'tensorflow.python.profiler.traceme', 'tensorflow.python.profiler.internal._pywrap_traceme', 'tensorflow.python.keras.engine.training_v1', 'tensorflow.python.keras.engine.training_arrays', 'tensorflow.python.keras.engine.training_distributed', 'tensorflow.python.keras.engine.partial_batch_padding_handler', 'tensorflow.python.keras.engine.training_eager', 'tensorflow.python.feature_column', 'tensorflow.python.feature_column.feature_column_lib', 'tensorflow.python.feature_column.dense_features_v2', 'tensorflow.python.feature_column.dense_features', 'tensorflow.python.feature_column.feature_column_v2', 'tensorflow.python.feature_column.feature_column', 'tensorflow.python.feature_column.utils', 'tensorflow.python.layers', 'tensorflow.python.layers.base', 'tensorflow.python.training.checkpoint_utils', 'tensorflow.python.feature_column.sequence_feature_column', 'tensorflow.python.feature_column.serialization', 'tensorflow.python.layers.layers', 'tensorflow.python.layers.core', 'tensorflow.python.layers.convolutional', 'tensorflow.python.layers.pooling', 'tensorflow.python.layers.normalization', 'tensorflow.python.ops.gradient_checker_v2', 'tensorflow.python.ops.metrics', 'tensorflow.python.ops.metrics_impl', 'tensorflow.python.ops.distributions', 'tensorflow.python.ops.distributions.distributions', 'tensorflow.python.ops.distributions.bernoulli', 'tensorflow.python.ops.distributions.distribution', 'tensorflow.python.ops.distributions.kullback_leibler', 'tensorflow.python.ops.distributions.util', 'tensorflow.python.ops.distributions.beta', 'tensorflow.python.ops.distributions.categorical', 'tensorflow.python.ops.distributions.dirichlet', 'tensorflow.python.ops.distributions.dirichlet_multinomial', 'tensorflow.python.ops.distributions.exponential', 'tensorflow.python.ops.distributions.gamma', 'tensorflow.python.ops.distributions.laplace', 'tensorflow.python.ops.distributions.special_math', 'tensorflow.python.ops.distributions.multinomial', 'tensorflow.python.ops.distributions.normal', 'tensorflow.python.ops.distributions.student_t', 'tensorflow.python.ops.distributions.uniform', 'tensorflow.python.ops.linalg.linalg', 'tensorflow.python.ops.linalg.adjoint_registrations', 'tensorflow.python.ops.linalg.linear_operator', 'tensorflow.python.ops.linalg.linear_operator_algebra', 'tensorflow.python.ops.linalg.linear_operator_util', 'tensorflow.python.ops.linalg.linear_operator_adjoint', 'tensorflow.python.ops.linalg.linear_operator_block_diag', 'tensorflow.python.ops.linalg.linear_operator_circulant', 'tensorflow.python.ops.signal', 'tensorflow.python.ops.signal.fft_ops', 'tensorflow.python.ops.linalg.linear_operator_diag', 'tensorflow.python.ops.linalg.linear_operator_householder', 'tensorflow.python.ops.linalg.linear_operator_identity', 'tensorflow.python.ops.linalg.linear_operator_kronecker', 'tensorflow.python.ops.linalg.cholesky_registrations', 'tensorflow.python.ops.linalg.linear_operator_lower_triangular', 'tensorflow.python.ops.linalg.inverse_registrations', 'tensorflow.python.ops.linalg.linear_operator_addition', 'tensorflow.python.ops.linalg.linear_operator_full_matrix', 'tensorflow.python.ops.linalg.linear_operator_block_lower_triangular', 'tensorflow.python.ops.linalg.linear_operator_inversion', 'tensorflow.python.ops.linalg.matmul_registrations', 'tensorflow.python.ops.linalg.linear_operator_composition', 'tensorflow.python.ops.linalg.linear_operator_zeros', 'tensorflow.python.ops.linalg.registrations_util', 'tensorflow.python.ops.linalg.solve_registrations', 'tensorflow.python.ops.linalg.linear_operator_low_rank_update', 'tensorflow.python.ops.linalg.linear_operator_permutation', 'tensorflow.python.ops.linalg.linear_operator_toeplitz', 'tensorflow.python.ops.linalg.linear_operator_tridiag', 'tensorflow.python.ops.linalg.sparse', 'tensorflow.python.ops.linalg.sparse.sparse', 'tensorflow.python.ops.linalg.sparse.conjugate_gradient', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_grad', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_ops', 'tensorflow.python.ops.linalg.sparse.gen_sparse_csr_matrix_ops', 'tensorflow.python.ops.losses.losses', 'tensorflow.python.ops.signal.signal', 'tensorflow.python.ops.signal.dct_ops', 'tensorflow.python.ops.signal.mel_ops', 'tensorflow.python.ops.signal.shape_ops', 'tensorflow.python.ops.signal.util_ops', 'tensorflow.python.ops.signal.mfcc_ops', 'tensorflow.python.ops.signal.reconstruction_ops', 'tensorflow.python.ops.signal.spectral_ops', 'tensorflow.python.ops.signal.window_ops', 'tensorflow.python.profiler.profiler', 'tensorflow.core.profiler', 'tensorflow.core.profiler.tfprof_log_pb2', 'tensorflow.core.profiler.tfprof_output_pb2', 'tensorflow.python.profiler.model_analyzer', 'tensorflow.core.profiler.tfprof_options_pb2', 'tensorflow.python._pywrap_tfprof', 'tensorflow.python.profiler.option_builder', 'tensorflow.python.profiler.tfprof_logger', 'tensorflow.python.profiler.internal.flops_registry', 'tensorflow.python.profiler.profiler_client', 'tensorflow.python.saved_model.saved_model', 'tensorflow.python.saved_model.builder', 'tensorflow.python.saved_model.loader', 'tensorflow.python.saved_model.main_op', 'tensorflow.python.saved_model.main_op_impl', 'tensorflow.python.saved_model.method_name_updater', 'tensorflow.python.saved_model.utils', 'tensorflow.python.saved_model.simple_save', 'tensorflow.python.tpu.api', 'tensorflow.python.tpu.bfloat16', 'tensorflow.python.tpu.feature_column_v2', 'tensorflow.python.tpu.feature_column', 'tensorflow.python.tpu.tpu_embedding', 'tensorflow.core.protobuf.tpu.optimization_parameters_pb2', 'google.protobuf.wrappers_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_output_layout_pb2', 'tensorflow.python.tpu.tpu_optimizer', 'tensorflow.python.user_ops', 'tensorflow.python.user_ops.user_ops', 'tensorflow.python.ops.gen_user_ops', 'tensorflow.python.ops.gen_audio_ops', 'tensorflow.python.ops.gen_boosted_trees_ops', 'tensorflow.python.ops.gen_sendrecv_ops', 'tensorflow.python.training.training', 'tensorflow.python.ops.sdca_ops', 'tensorflow.python.ops.gen_sdca_ops', 'tensorflow.python.training.adadelta', 'tensorflow.python.training.adagrad', 'tensorflow.python.training.adagrad_da', 'tensorflow.python.training.proximal_adagrad', 'tensorflow.python.training.adam', 'tensorflow.python.training.ftrl', 'tensorflow.python.training.experimental.loss_scale_optimizer', 'tensorflow.python.training.experimental.mixed_precision', 'tensorflow.python.training.momentum', 'tensorflow.python.training.rmsprop', 'tensorflow.python.training.gradient_descent', 'tensorflow.python.training.proximal_gradient_descent', 'tensorflow.python.training.sync_replicas_optimizer', 'tensorflow.python.training.input', 'tensorflow.python.layers.utils', 'tensorflow.python.training.basic_loops', 'tensorflow.python.training.tracking.python_state', 'tensorflow.python.training.supervisor', 'tensorflow.python.training.warm_starting_util', 'tensorflow.python.training.checkpoint_ops', 'tensorflow.python.ops.gen_checkpoint_ops', 'tensorflow.core.example', 'tensorflow.core.example.example_pb2', 'tensorflow.core.example.feature_pb2', 'tensorflow.python.training.learning_rate_decay', 'tensorflow.python.training.quantize_training', 'tensorflow.python._pywrap_quantize_training', 'tensorflow.python.platform.resource_loader', 'tensorflow.python.platform.sysconfig', 'tensorflow.python.platform.test', 'tensorflow.python.framework.test_util', 'absl.testing', 'absl.testing.parameterized', 'absl.testing.absltest', 'shlex', 'absl._enum_module', 'absl.testing._pretty_print_reporter', 'absl.third_party', 'absl.third_party.unittest3_backport', 'absl.third_party.unittest3_backport.case', 'absl.third_party.unittest3_backport.result', 'absl.testing.xml_reporter', 'xml.sax', 'xml.sax.xmlreader', 'xml.sax.handler', 'xml.sax._exceptions', 'xml.sax.saxutils', 'unittest.mock', 'tensorflow.python._pywrap_stacktrace_handler', 'tensorflow.python._pywrap_util_port', 'tensorflow.python.ops.control_flow_util_v2', 'tensorflow.python.platform.googletest', 'tensorflow.python.platform.benchmark', 'tensorflow.core.util.test_log_pb2', 'tensorflow.python.util.protobuf', 'tensorflow.python.util.protobuf.compare', 'tensorflow.python.ops.gradient_checker', 'tensorflow.python.compat.v2_compat', 'tensorflow.python.ops.control_flow_v2_toggles', 'tensorflow.python.eager.remote', 'tensorflow.python.platform.remote_utils', 'tensorflow.python.ops.rnn', 'tensorflow.python.ops.rnn_cell_impl', 'tensorflow.python.ops.rnn_cell', 'tensorflow.python.debug', 'tensorflow.python.debug.lib', 'tensorflow.python.debug.lib.debug_data', 'tensorflow.python.debug.lib.debug_graphs', 'tensorflow.python.debug.lib.debug_gradients', 'tensorflow.python.debug.lib.debug_utils', 'tensorflow.python.debug.wrappers', 'tensorflow.python.debug.wrappers.dumping_wrapper', 'tensorflow.python.debug.wrappers.framework', 'tensorflow.python.debug.wrappers.grpc_wrapper', 'tensorflow.python.debug.lib.common', 'tensorflow.python.debug.wrappers.hooks', 'tensorflow.python.debug.wrappers.local_cli_wrapper', 'tensorflow.python.debug.cli', 'tensorflow.python.debug.cli.analyzer_cli', 'tensorflow.python.debug.cli.cli_config', 'tensorflow.python.debug.cli.debugger_cli_common', 'tensorflow.python.debug.cli.cli_shared', 'tensorflow.python.debug.cli.command_parser', 'tensorflow.python.debug.cli.tensor_format', 'tensorflow.python.debug.cli.evaluator', 'tensorflow.python.debug.cli.ui_factory', 'tensorflow.python.debug.lib.source_utils', 'tensorflow.python.debug.lib.profiling', 'tensorflow.python.debug.cli.profile_analyzer_cli', 'tensorflow.python.debug.lib.check_numerics_callback', 'tensorflow.core.protobuf.debug_event_pb2', 'tensorflow.python.debug.lib.op_callbacks_common', 'tensorflow.python.ops.gen_debug_ops', 'tensorflow.python.debug.lib.dumping_callback', 'tensorflow.python.debug.lib.debug_events_writer', 'tensorflow.python._pywrap_debug_events_writer', 'tensorflow.python.dlpack', 'tensorflow.python.dlpack.dlpack', 'tensorflow.python.compiler.mlir', 'tensorflow.python.compiler.mlir.mlir', 'tensorflow.python.pywrap_mlir', 'tensorflow.python._pywrap_mlir', 'tensorflow.python.tools', 'tensorflow.python.tools.module_util', 'tensorflow._api', 'tensorflow._api.v2', 'tensorflow._api.v2.audio', 'tensorflow._api.v2.autodiff', 'tensorflow._api.v2.autograph', 'tensorflow._api.v2.autograph.experimental', 'tensorflow._api.v2.bitwise', 'tensorflow._api.v2.compat', 'tensorflow._api.v2.compat.v1', 'tensorflow._api.v2.compat.v1.app', 'tensorflow._api.v2.compat.v1.audio', 'tensorflow._api.v2.compat.v1.autograph', 'tensorflow._api.v2.compat.v1.autograph.experimental', 'tensorflow._api.v2.compat.v1.bitwise', 'tensorflow._api.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v1.compat.v1', 'tensorflow._api.v2.compat.v1.compat.v1.compat', 'tensorflow._api.v2.compat.v1.config', 'tensorflow._api.v2.compat.v1.config.experimental', 'tensorflow._api.v2.compat.v1.config.optimizer', 'tensorflow._api.v2.compat.v1.config.threading', 'tensorflow._api.v2.compat.v1.data', 'tensorflow._api.v2.compat.v1.data.experimental', 'tensorflow._api.v2.compat.v1.debugging', 'tensorflow._api.v2.compat.v1.debugging.experimental', 'tensorflow._api.v2.compat.v1.distribute', 'tensorflow._api.v2.compat.v1.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v1.distribute.experimental', 'tensorflow._api.v2.compat.v1.distributions', 'tensorflow._api.v2.compat.v1.dtypes', 'tensorflow._api.v2.compat.v1.errors', 'tensorflow._api.v2.compat.v1.experimental', 'tensorflow._api.v2.compat.v1.feature_column', 'tensorflow._api.v2.compat.v1.gfile', 'tensorflow._api.v2.compat.v1.graph_util', 'tensorflow._api.v2.compat.v1.image', 'tensorflow._api.v2.compat.v1.initializers', 'tensorflow._api.v2.compat.v1.io', 'tensorflow._api.v2.compat.v1.io.gfile', 'tensorflow._api.v2.compat.v1.layers', 'tensorflow._api.v2.compat.v1.layers.experimental', 'tensorflow._api.v2.compat.v1.linalg', 'tensorflow._api.v2.compat.v1.linalg.experimental', 'tensorflow._api.v2.compat.v1.lite', 'tensorflow._api.v2.compat.v1.lite.constants', 'tensorflow.lite', 'tensorflow.lite.python', 'tensorflow.lite.python.lite_constants', 'tensorflow.lite.toco', 'tensorflow.lite.toco.toco_flags_pb2', 'tensorflow.lite.toco.types_pb2', 'tensorflow._api.v2.compat.v1.lite.experimental', 'tensorflow._api.v2.compat.v1.lite.experimental.nn', 'tensorflow.lite.python.lite', 'tensorflow.lite.experimental', 'tensorflow.lite.experimental.examples', 'tensorflow.lite.experimental.examples.lstm', 'tensorflow.lite.experimental.examples.lstm.rnn', 'tensorflow.lite.python.op_hint', 'tensorflow.lite.experimental.examples.lstm.rnn_cell', 'tensorflow.lite.experimental.microfrontend', 'tensorflow.lite.experimental.microfrontend.python', 'tensorflow.lite.experimental.microfrontend.python.ops', 'tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op', 'tensorflow.lite.experimental.microfrontend.ops', 'tensorflow.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op', '0294638c8bf50491b025b096f3dba0a1', 'tensorflow.lite.experimental.tensorboard', 'tensorflow.lite.experimental.tensorboard.ops_util', 'tensorflow.lite.python.wrap_toco', 'tensorflow.python._pywrap_toco_api', 'tensorflow.lite.python.convert', 'distutils.spawn', 'distutils.errors', 'distutils.debug', 'distutils.log', 'tensorflow.lite.python.util', 'tensorflow.python.framework.convert_to_constants', 'tensorflow.python.grappler', 'tensorflow.python.grappler.tf_optimizer', 'tensorflow.python._pywrap_tf_optimizer', 'tensorflow.python.grappler.cluster', 'tensorflow.core.grappler', 'tensorflow.core.grappler.costs', 'tensorflow.core.grappler.costs.op_performance_data_pb2', 'tensorflow.core.protobuf.device_properties_pb2', 'tensorflow.python._pywrap_tf_cluster', 'tensorflow.lite.toco.model_flags_pb2', 'tensorflow.lite.python.convert_saved_model', 'tensorflow.lite.python.interpreter', 'tensorflow.lite.python.optimize', 'tensorflow.lite.python.optimize.calibrator', 'tensorflow._api.v2.compat.v1.logging', 'tensorflow._api.v2.compat.v1.lookup', 'tensorflow._api.v2.compat.v1.lookup.experimental', 'tensorflow._api.v2.compat.v1.losses', 'tensorflow._api.v2.compat.v1.manip', 'tensorflow._api.v2.compat.v1.math', 'tensorflow._api.v2.compat.v1.math.special', 'tensorflow._api.v2.compat.v1.metrics', 'tensorflow._api.v2.compat.v1.mixed_precision', 'tensorflow._api.v2.compat.v1.mixed_precision.experimental', 'tensorflow._api.v2.compat.v1.mlir', 'tensorflow._api.v2.compat.v1.mlir.experimental', 'tensorflow._api.v2.compat.v1.nest', 'tensorflow._api.v2.compat.v1.nn', 'tensorflow._api.v2.compat.v1.nn.rnn_cell', 'tensorflow._api.v2.compat.v1.profiler', 'tensorflow._api.v2.compat.v1.python_io', 'tensorflow._api.v2.compat.v1.quantization', 'tensorflow._api.v2.compat.v1.queue', 'tensorflow._api.v2.compat.v1.ragged', 'tensorflow._api.v2.compat.v1.random', 'tensorflow._api.v2.compat.v1.random.experimental', 'tensorflow._api.v2.compat.v1.raw_ops', 'tensorflow._api.v2.compat.v1.resource_loader', 'tensorflow._api.v2.compat.v1.saved_model', 'tensorflow._api.v2.compat.v1.saved_model.builder', 'tensorflow._api.v2.compat.v1.saved_model.constants', 'tensorflow._api.v2.compat.v1.saved_model.experimental', 'tensorflow._api.v2.compat.v1.saved_model.loader', 'tensorflow._api.v2.compat.v1.saved_model.main_op', 'tensorflow._api.v2.compat.v1.saved_model.signature_constants', 'tensorflow._api.v2.compat.v1.saved_model.signature_def_utils', 'tensorflow._api.v2.compat.v1.saved_model.tag_constants', 'tensorflow._api.v2.compat.v1.saved_model.utils', 'tensorflow._api.v2.compat.v1.sets', 'tensorflow._api.v2.compat.v1.signal', 'tensorflow._api.v2.compat.v1.sparse', 'tensorflow._api.v2.compat.v1.spectral', 'tensorflow._api.v2.compat.v1.strings', 'tensorflow._api.v2.compat.v1.summary', 'tensorflow._api.v2.compat.v1.sysconfig', 'tensorflow._api.v2.compat.v1.test', 'tensorflow._api.v2.compat.v1.tpu', 'tensorflow._api.v2.compat.v1.tpu.experimental', 'tensorflow._api.v2.compat.v1.train', 'tensorflow._api.v2.compat.v1.train.experimental', 'tensorflow._api.v2.compat.v1.train.queue_runner', 'tensorflow._api.v2.compat.v1.user_ops', 'tensorflow._api.v2.compat.v1.version', 'tensorflow._api.v2.compat.v1.xla', 'tensorflow._api.v2.compat.v1.xla.experimental', 'tensorflow.python.keras.api', 'tensorflow.python.keras.api.keras', 'tensorflow.python.keras.api.keras.activations', 'tensorflow.python.util.module_wrapper', 'tensorflow.tools.compatibility', 'tensorflow.tools.compatibility.all_renames_v2', 'tensorflow.tools.compatibility.renames_v2', 'tensorflow.python.keras.api.keras.applications', 'tensorflow.python.keras.api.keras.applications.densenet', 'tensorflow.python.keras.applications', 'tensorflow.python.keras.applications.densenet', 'tensorflow.python.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api.keras.applications.inception_v3', 'tensorflow.python.keras.applications.inception_v3', 'tensorflow.python.keras.api.keras.applications.mobilenet', 'tensorflow.python.keras.applications.mobilenet', 'tensorflow.python.keras.api.keras.applications.mobilenet_v2', 'tensorflow.python.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api.keras.applications.nasnet', 'tensorflow.python.keras.applications.nasnet', 'tensorflow.python.keras.api.keras.applications.resnet', 'tensorflow.python.keras.applications.resnet', 'tensorflow.python.keras.api.keras.applications.resnet50', 'tensorflow.python.keras.api.keras.applications.resnet_v2', 'tensorflow.python.keras.applications.resnet_v2', 'tensorflow.python.keras.api.keras.applications.vgg16', 'tensorflow.python.keras.applications.vgg16', 'tensorflow.python.keras.api.keras.applications.vgg19', 'tensorflow.python.keras.applications.vgg19', 'tensorflow.python.keras.api.keras.applications.xception', 'tensorflow.python.keras.applications.xception', 'tensorflow.python.keras.api.keras.backend', 'tensorflow.python.keras.api.keras.callbacks', 'tensorflow.python.keras.callbacks_v1', 'tensorflow.python.keras.api.keras.constraints', 'tensorflow.python.keras.api.keras.datasets', 'tensorflow.python.keras.api.keras.datasets.boston_housing', 'tensorflow.python.keras.datasets', 'tensorflow.python.keras.datasets.boston_housing', 'tensorflow.python.keras.api.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar', 'tensorflow.python.keras.api.keras.datasets.cifar100', 'tensorflow.python.keras.datasets.cifar100', 'tensorflow.python.keras.api.keras.datasets.fashion_mnist', 'tensorflow.python.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api.keras.datasets.imdb', 'tensorflow.python.keras.datasets.imdb', 'tensorflow.python.keras.preprocessing', 'keras_preprocessing', 'tensorflow.python.keras.preprocessing.image', 'keras_preprocessing.image', 'keras_preprocessing.image.affine_transformations', 'keras_preprocessing.image.utils', 'keras_preprocessing.image.dataframe_iterator', 'keras_preprocessing.image.iterator', 'keras_preprocessing.image.directory_iterator', 'keras_preprocessing.image.image_data_generator', 'keras_preprocessing.image.numpy_array_iterator', 'tensorflow.python.keras.preprocessing.sequence', 'keras_preprocessing.sequence', 'tensorflow.python.keras.preprocessing.text', 'keras_preprocessing.text', 'tensorflow.python.keras.utils.all_utils', 'tensorflow.python.keras.utils.multi_gpu_utils', 'tensorflow.python.keras.utils.np_utils', 'tensorflow.python.keras.utils.vis_utils', 'tensorflow.python.keras.api.keras.datasets.mnist', 'tensorflow.python.keras.datasets.mnist', 'tensorflow.python.keras.api.keras.datasets.reuters', 'tensorflow.python.keras.datasets.reuters', 'tensorflow.python.keras.api.keras.estimator', 'tensorflow.python.keras.estimator', 'tensorflow.python.keras.api.keras.experimental', 'tensorflow.python.keras.premade', 'tensorflow.python.keras.premade.linear', 'tensorflow.python.keras.premade.wide_deep', 'tensorflow.python.keras.saving.saved_model_experimental', 'tensorflow.python.keras.api.keras.initializers', 'tensorflow.python.keras.api.keras.layers', 'tensorflow.python.keras.api.keras.layers.experimental', 'tensorflow.python.keras.api.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api.keras.losses', 'tensorflow.python.keras.api.keras.metrics', 'tensorflow.python.keras.api.keras.mixed_precision', 'tensorflow.python.keras.api.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.get_layer_policy', 'tensorflow.python.keras.api.keras.models', 'tensorflow.python.keras.api.keras.optimizers', 'tensorflow.python.keras.api.keras.optimizers.schedules', 'tensorflow.python.keras.api.keras.preprocessing', 'tensorflow.python.keras.api.keras.preprocessing.image', 'tensorflow.python.keras.api.keras.preprocessing.sequence', 'tensorflow.python.keras.api.keras.preprocessing.text', 'tensorflow.python.keras.api.keras.regularizers', 'tensorflow.python.keras.api.keras.utils', 'tensorflow.python.keras.api.keras.wrappers', 'tensorflow.python.keras.api.keras.wrappers.scikit_learn', 'tensorflow.python.keras.wrappers', 'tensorflow.python.keras.wrappers.scikit_learn', 'tensorflow.python.keras.api._v1', 'tensorflow.python.keras.api._v1.keras', 'tensorflow.python.keras.api._v1.keras.activations', 'tensorflow.python.keras.api._v1.keras.applications', 'tensorflow.python.keras.api._v1.keras.applications.densenet', 'tensorflow.python.keras.api._v1.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v1.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.inception_v3', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v1.keras.applications.nasnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet50', 'tensorflow.python.keras.api._v1.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.vgg16', 'tensorflow.python.keras.api._v1.keras.applications.vgg19', 'tensorflow.python.keras.api._v1.keras.applications.xception', 'tensorflow.python.keras.api._v1.keras.backend', 'tensorflow.python.keras.api._v1.keras.callbacks', 'tensorflow.python.keras.api._v1.keras.constraints', 'tensorflow.python.keras.api._v1.keras.datasets', 'tensorflow.python.keras.api._v1.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v1.keras.datasets.cifar10', 'tensorflow.python.keras.api._v1.keras.datasets.cifar100', 'tensorflow.python.keras.api._v1.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v1.keras.datasets.imdb', 'tensorflow.python.keras.api._v1.keras.datasets.mnist', 'tensorflow.python.keras.api._v1.keras.datasets.reuters', 'tensorflow.python.keras.api._v1.keras.estimator', 'tensorflow.python.keras.api._v1.keras.experimental', 'tensorflow.python.keras.api._v1.keras.initializers', 'tensorflow.python.keras.api._v1.keras.layers', 'tensorflow.python.keras.api._v1.keras.layers.experimental', 'tensorflow.python.keras.api._v1.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v1.keras.losses', 'tensorflow.python.keras.api._v1.keras.metrics', 'tensorflow.python.keras.api._v1.keras.mixed_precision', 'tensorflow.python.keras.api._v1.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v1.keras.models', 'tensorflow.python.keras.api._v1.keras.optimizers', 'tensorflow.python.keras.api._v1.keras.optimizers.schedules', 'tensorflow.python.keras.api._v1.keras.preprocessing', 'tensorflow.python.keras.api._v1.keras.preprocessing.image', 'tensorflow.python.keras.api._v1.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v1.keras.preprocessing.text', 'tensorflow.python.keras.api._v1.keras.regularizers', 'tensorflow.python.keras.api._v1.keras.utils', 'tensorflow.python.keras.api._v1.keras.wrappers', 'tensorflow.python.keras.api._v1.keras.wrappers.scikit_learn', 'tensorflow._api.v2.compat.v1.compat.v2', 'tensorflow._api.v2.compat.v1.compat.v2.compat', 'tensorflow._api.v2.compat.v2', 'tensorflow._api.v2.compat.v2.audio', 'tensorflow._api.v2.compat.v2.autodiff', 'tensorflow._api.v2.compat.v2.autograph', 'tensorflow._api.v2.compat.v2.autograph.experimental', 'tensorflow._api.v2.compat.v2.bitwise', 'tensorflow._api.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.compat.v1', 'tensorflow._api.v2.compat.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v2.compat.v2', 'tensorflow._api.v2.compat.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.config', 'tensorflow._api.v2.compat.v2.config.experimental', 'tensorflow._api.v2.compat.v2.config.optimizer', 'tensorflow._api.v2.compat.v2.config.threading', 'tensorflow._api.v2.compat.v2.data', 'tensorflow._api.v2.compat.v2.data.experimental', 'tensorflow._api.v2.compat.v2.debugging', 'tensorflow._api.v2.compat.v2.debugging.experimental', 'tensorflow._api.v2.compat.v2.distribute', 'tensorflow._api.v2.compat.v2.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v2.distribute.experimental', 'tensorflow._api.v2.compat.v2.dtypes', 'tensorflow._api.v2.compat.v2.errors', 'tensorflow._api.v2.compat.v2.experimental', 'tensorflow._api.v2.compat.v2.experimental.dlpack', 'tensorflow._api.v2.compat.v2.experimental.tensorrt', 'tensorflow._api.v2.compat.v2.feature_column', 'tensorflow._api.v2.compat.v2.graph_util', 'tensorflow._api.v2.compat.v2.image', 'tensorflow._api.v2.compat.v2.io', 'tensorflow._api.v2.compat.v2.io.gfile', 'tensorflow._api.v2.compat.v2.linalg', 'tensorflow._api.v2.compat.v2.linalg.experimental', 'tensorflow._api.v2.compat.v2.lite', 'tensorflow._api.v2.compat.v2.lite.experimental', 'tensorflow._api.v2.compat.v2.lookup', 'tensorflow._api.v2.compat.v2.lookup.experimental', 'tensorflow._api.v2.compat.v2.math', 'tensorflow._api.v2.compat.v2.math.special', 'tensorflow._api.v2.compat.v2.mixed_precision', 'tensorflow._api.v2.compat.v2.mixed_precision.experimental', 'tensorflow._api.v2.compat.v2.mlir', 'tensorflow._api.v2.compat.v2.mlir.experimental', 'tensorflow._api.v2.compat.v2.nest', 'tensorflow._api.v2.compat.v2.nn', 'tensorflow._api.v2.compat.v2.profiler', 'tensorflow._api.v2.compat.v2.profiler.experimental', 'tensorflow._api.v2.compat.v2.profiler.experimental.client', 'tensorflow._api.v2.compat.v2.profiler.experimental.server', 'tensorflow._api.v2.compat.v2.quantization', 'tensorflow._api.v2.compat.v2.queue', 'tensorflow._api.v2.compat.v2.ragged', 'tensorflow._api.v2.compat.v2.random', 'tensorflow._api.v2.compat.v2.random.experimental', 'tensorflow._api.v2.compat.v2.raw_ops', 'tensorflow._api.v2.compat.v2.saved_model', 'tensorflow._api.v2.compat.v2.sets', 'tensorflow._api.v2.compat.v2.signal', 'tensorflow._api.v2.compat.v2.sparse', 'tensorflow._api.v2.compat.v2.strings', 'tensorflow._api.v2.compat.v2.summary', 'tensorflow._api.v2.compat.v2.summary.experimental', 'tensorflow._api.v2.compat.v2.sysconfig', 'tensorflow._api.v2.compat.v2.test', 'tensorflow._api.v2.compat.v2.tpu', 'tensorflow._api.v2.compat.v2.tpu.experimental', 'tensorflow._api.v2.compat.v2.train', 'tensorflow._api.v2.compat.v2.train.experimental', 'tensorflow._api.v2.compat.v2.version', 'tensorflow._api.v2.compat.v2.xla', 'tensorflow._api.v2.compat.v2.xla.experimental', 'tensorboard', 'tensorboard.errors', 'tensorboard.lazy', 'tensorboard.version', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_shape_pb2', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.util.lazy_tensor_creator', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.event_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary._tf', 'tensorboard.summary._tf.summary', 'tensorflow.python.keras.api._v2', 'tensorflow.python.keras.api._v2.keras', 'tensorflow.python.keras.api._v2.keras.activations', 'tensorflow.python.keras.api._v2.keras.applications', 'tensorflow.python.keras.api._v2.keras.applications.densenet', 'tensorflow.python.keras.api._v2.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v2.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.inception_v3', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v2.keras.applications.nasnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet50', 'tensorflow.python.keras.api._v2.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.vgg16', 'tensorflow.python.keras.api._v2.keras.applications.vgg19', 'tensorflow.python.keras.api._v2.keras.applications.xception', 'tensorflow.python.keras.api._v2.keras.backend', 'tensorflow.python.keras.api._v2.keras.callbacks', 'tensorflow.python.keras.api._v2.keras.constraints', 'tensorflow.python.keras.api._v2.keras.datasets', 'tensorflow.python.keras.api._v2.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v2.keras.datasets.cifar10', 'tensorflow.python.keras.api._v2.keras.datasets.cifar100', 'tensorflow.python.keras.api._v2.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v2.keras.datasets.imdb', 'tensorflow.python.keras.api._v2.keras.datasets.mnist', 'tensorflow.python.keras.api._v2.keras.datasets.reuters', 'tensorflow.python.keras.api._v2.keras.estimator', 'tensorflow.python.keras.api._v2.keras.experimental', 'tensorflow.python.keras.api._v2.keras.initializers', 'tensorflow.python.keras.api._v2.keras.layers', 'tensorflow.python.keras.api._v2.keras.layers.experimental', 'tensorflow.python.keras.api._v2.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v2.keras.losses', 'tensorflow.python.keras.api._v2.keras.metrics', 'tensorflow.python.keras.api._v2.keras.mixed_precision', 'tensorflow.python.keras.api._v2.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v2.keras.models', 'tensorflow.python.keras.api._v2.keras.optimizers', 'tensorflow.python.keras.api._v2.keras.optimizers.schedules', 'tensorflow.python.keras.api._v2.keras.preprocessing', 'tensorflow.python.keras.api._v2.keras.preprocessing.image', 'tensorflow.python.keras.api._v2.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v2.keras.preprocessing.text', 'tensorflow.python.keras.api._v2.keras.regularizers', 'tensorflow.python.keras.api._v2.keras.utils', 'tensorflow.python.keras.api._v2.keras.wrappers', 'tensorflow.python.keras.api._v2.keras.wrappers.scikit_learn', 'tensorflow._api.v2.config', 'tensorflow._api.v2.config.experimental', 'tensorflow._api.v2.config.optimizer', 'tensorflow._api.v2.config.threading', 'tensorflow._api.v2.data', 'tensorflow._api.v2.data.experimental', 'tensorflow._api.v2.debugging', 'tensorflow._api.v2.debugging.experimental', 'tensorflow._api.v2.distribute', 'tensorflow._api.v2.distribute.cluster_resolver', 'tensorflow._api.v2.distribute.experimental', 'tensorflow._api.v2.dtypes', 'tensorflow._api.v2.errors', 'tensorflow._api.v2.experimental', 'tensorflow._api.v2.experimental.dlpack', 'tensorflow._api.v2.experimental.tensorrt', 'tensorflow._api.v2.feature_column', 'tensorflow._api.v2.graph_util', 'tensorflow._api.v2.image', 'tensorflow._api.v2.io', 'tensorflow._api.v2.io.gfile', 'tensorflow._api.v2.linalg', 'tensorflow._api.v2.linalg.experimental', 'tensorflow._api.v2.lite', 'tensorflow._api.v2.lite.experimental', 'tensorflow._api.v2.lookup', 'tensorflow._api.v2.lookup.experimental', 'tensorflow._api.v2.math', 'tensorflow._api.v2.math.special', 'tensorflow._api.v2.mixed_precision', 'tensorflow._api.v2.mixed_precision.experimental', 'tensorflow._api.v2.mlir', 'tensorflow._api.v2.mlir.experimental', 'tensorflow._api.v2.nest', 'tensorflow._api.v2.nn', 'tensorflow._api.v2.profiler', 'tensorflow._api.v2.profiler.experimental', 'tensorflow._api.v2.profiler.experimental.client', 'tensorflow._api.v2.profiler.experimental.server', 'tensorflow._api.v2.quantization', 'tensorflow._api.v2.queue', 'tensorflow._api.v2.ragged', 'tensorflow._api.v2.random', 'tensorflow._api.v2.random.experimental', 'tensorflow._api.v2.raw_ops', 'tensorflow._api.v2.saved_model', 'tensorflow._api.v2.sets', 'tensorflow._api.v2.signal', 'tensorflow._api.v2.sparse', 'tensorflow._api.v2.strings', 'tensorflow._api.v2.summary', 'tensorflow._api.v2.summary.experimental', 'tensorflow._api.v2.sysconfig', 'tensorflow._api.v2.test', 'tensorflow._api.v2.tpu', 'tensorflow._api.v2.tpu.experimental', 'tensorflow._api.v2.train', 'tensorflow._api.v2.train.experimental', 'tensorflow._api.v2.version', 'tensorflow._api.v2.xla', 'tensorflow._api.v2.xla.experimental', 'tensorflow.keras', 'tensorflow.keras.activations', 'tensorflow.keras.applications', 'tensorflow.keras.applications.densenet', 'tensorflow.keras.applications.imagenet_utils', 'tensorflow.keras.applications.inception_resnet_v2', 'tensorflow.keras.applications.inception_v3', 'tensorflow.keras.applications.mobilenet', 'tensorflow.keras.applications.mobilenet_v2', 'tensorflow.keras.applications.nasnet', 'tensorflow.keras.applications.resnet', 'tensorflow.keras.applications.resnet50', 'tensorflow.keras.applications.resnet_v2', 'tensorflow.keras.applications.vgg16', 'tensorflow.keras.applications.vgg19', 'tensorflow.keras.applications.xception', 'tensorflow.keras.backend', 'tensorflow.keras.callbacks', 'tensorflow.keras.constraints', 'tensorflow.keras.datasets', 'tensorflow.keras.datasets.boston_housing', 'tensorflow.keras.datasets.cifar10', 'tensorflow.keras.datasets.cifar100', 'tensorflow.keras.datasets.fashion_mnist', 'tensorflow.keras.datasets.imdb', 'tensorflow.keras.datasets.mnist', 'tensorflow.keras.datasets.reuters', 'tensorflow.keras.estimator', 'tensorflow.keras.experimental', 'tensorflow.keras.initializers', 'tensorflow.keras.layers', 'tensorflow.keras.layers.experimental', 'tensorflow.keras.layers.experimental.preprocessing', 'tensorflow.keras.losses', 'tensorflow.keras.metrics', 'tensorflow.keras.mixed_precision', 'tensorflow.keras.mixed_precision.experimental', 'tensorflow.keras.models', 'tensorflow.keras.optimizers', 'tensorflow.keras.optimizers.schedules', 'tensorflow.keras.preprocessing', 'tensorflow.keras.preprocessing.image', 'tensorflow.keras.preprocessing.sequence', 'tensorflow.keras.preprocessing.text', 'tensorflow.keras.regularizers', 'tensorflow.keras.utils', 'tensorflow.keras.wrappers', 'tensorflow.keras.wrappers.scikit_learn', 'keras.utils.losses_utils', 'keras.utils.metrics_utils', 'keras.utils.layer_utils', 'keras.utils.vis_utils', 'keras.models', 'keras.engine', 'keras.engine.input_layer', 'keras.engine.base_layer', 'keras.initializers', 'keras.legacy', 'keras.legacy.interfaces', 'keras.engine.network', 'keras.engine.saving', 'keras.losses', 'keras.optimizers', 'keras.engine.training', 'keras.engine.training_utils', 'keras.metrics', 'keras.layers', 'keras.layers.merge', 'keras.layers.core', 'keras.activations', 'keras.regularizers', 'keras.constraints', 'keras.layers.convolutional', 'keras.layers.pooling', 'keras.legacy.layers', 'keras.layers.local', 'keras.layers.recurrent', 'keras.layers.cudnn_recurrent', 'keras.layers.normalization', 'keras.layers.embeddings', 'keras.layers.noise', 'keras.layers.advanced_activations', 'keras.layers.wrappers', 'keras.layers.convolutional_recurrent', 'keras.engine.training_arrays', 'keras.callbacks', 'keras.callbacks.callbacks', 'keras.callbacks.tensorboard_v2', 'keras.engine.training_generator', 'keras.engine.sequential', 'keras.utils.multi_gpu_utils', 'keras.applications', 'keras_applications', 'keras_applications.vgg16', 'keras_applications.imagenet_utils', 'keras_applications.vgg19', 'keras_applications.resnet50', 'keras_applications.inception_v3', 'keras_applications.inception_resnet_v2', 'keras_applications.xception', 'keras_applications.mobilenet', 'keras_applications.mobilenet_v2', 'keras_applications.densenet', 'keras_applications.nasnet', 'keras_applications.resnet', 'keras_applications.resnet_common', 'keras_applications.resnet_v2', 'keras_applications.resnext', 'keras.applications.vgg16', 'keras.applications.vgg19', 'keras.applications.resnet50', 'keras.applications.inception_v3', 'keras.applications.inception_resnet_v2', 'keras.applications.xception', 'keras.applications.mobilenet', 'keras.applications.mobilenet_v2', 'keras.applications.densenet', 'keras.applications.nasnet', 'keras.applications.resnet', 'keras.applications.resnet_v2', 'keras.datasets', 'keras.datasets.mnist', 'keras.datasets.imdb', 'keras.preprocessing', 'keras.preprocessing.image', 'keras.preprocessing.sequence', 'keras.preprocessing.text', 'keras.datasets.reuters', 'keras.datasets.cifar10', 'keras.datasets.cifar', 'keras.datasets.cifar100', 'keras.datasets.boston_housing', 'keras.datasets.fashion_mnist', 'keras.wrappers', 'keras.wrappers.scikit_learn', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from C:\Users\Chelovek\.matplotlib\fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib:CONFIGDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib:(private) matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:loaded rc file D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data\matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.1
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is win32
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_winapi', '_bootlocale', '_locale', 'encodings.cp1251', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'pywin32_bootstrap', 'glob', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'fnmatch', 'posixpath', 'numpy', '__future__', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'ctypes', '_ctypes', 'struct', '_struct', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', 'time', 'math', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'errno', 'urllib', 'urllib.parse', 'pickle', '_compat_pickle', '_pickle', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'collections.abc', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'subprocess', 'signal', 'threading', 'traceback', 'linecache', 'tokenize', 'token', '_weakrefset', 'msvcrt', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'ast', '_ast', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'weakref', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random._bit_generator', '_cython_0_29_17', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'tqdm', 'tqdm.std', 'tqdm.utils', 'socket', '_socket', 'selectors', 'select', 'colorama', 'colorama.initialise', 'atexit', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes.wintypes', 'unicodedata', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'logging', 'string', '_string', 'common', 'argparse', 'gettext', 'locale', 'librosa', 'librosa.version', 'librosa._cache', 'joblib', 'joblib.memory', 'pydoc', 'inspect', 'dis', 'opcode', '_opcode', 'pkgutil', 'joblib.hashing', 'joblib._compat', 'joblib.func_inspect', 'joblib.logger', 'pprint', 'joblib.disk', 'joblib._memory_helpers', 'joblib._store_backends', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'joblib.backports', 'distutils', 'distutils.version', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'tempfile', '_multiprocessing', 'joblib.format_stack', 'joblib.my_exceptions', 'joblib._parallel_backends', 'gc', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'uuid', 'multiprocessing.pool', 'queue', '_queue', 'multiprocessing.util', 'joblib.executor', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_win32', 'multiprocessing.popen_spawn_win32', 'multiprocessing.spawn', 'runpy', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._win_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'librosa.core', 'librosa.core.time_frequency', 'six', 'librosa.util', 'librosa.util.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'typing', 'typing.io', 'typing.re', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_cython_0_29_14', '_ni_label', 'scipy.ndimage.morphology', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'difflib', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy._lib._util', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'numba', 'numba._version', 'numba.core', 'numba.core.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'pkg_resources', 'zipfile', 'plistlib', 'xml', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources.py31compat', 'pkg_resources._vendor.appdirs', 'win32com', 'win32api', 'pythoncom', 'pywintypes', 'imp', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'copy', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'sysconfig', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.testing', 'numba.testing.main', 'cProfile', '_lsprof', 'profile', 'numba.testing.loader', 'numba.testing._runtests', 'numba.core.types', 'numba.core.utils', 'timeit', 'numba.core.types.abstract', 'numba.core.types.containers', 'numba.core.types.common', 'numba.core.types.misc', 'numba.core.typeconv', 'numba.core.typeconv.castgraph', 'numba.core.errors', 'numba.core.types.functions', 'numba.core.types.iterators', 'numba.core.types.npytypes', 'numba.core.types.scalars', 'numba.np', 'numba.np.npdatetime_helpers', 'numba.core.types.function_type', 'numba.misc', 'numba.misc.special', 'numba.core.typing', 'numba.core.typing.context', 'numba.core.typeconv.rules', 'numba.core.typeconv.typeconv', 'numba.core.typeconv._typeconv', 'numba.core.typing.templates', 'numba.core.cpu_options', 'numba.core.typing.typeof', 'numba.np.numpy_support', 'numba.core.cgutils', 'numba.core.datamodel', 'numba.core.datamodel.manager', 'numba.core.datamodel.packer', 'numba.core.datamodel.registry', 'numba.core.datamodel.models', 'numba.core.decorators', 'numba.stencils', 'numba.stencils.stencil', 'numba.core.ir', 'numba.core.consts', 'numba.core.ir_utils', 'numba.core.extending', 'numba.core.imputils', 'numba.core.pythonapi', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._helperlib', 'numba.core.lowering', 'numba._dynfunc', 'numba.core.debuginfo', 'numba.core.funcdesc', 'numba.core.itanium_mangler', 'numba.core.generators', 'numba.core.analysis', 'numba.core.controlflow', 'numba.core.postproc', 'numba.core.transforms', 'numba.core.rewrites', 'numba.core.rewrites.registry', 'numba.core.rewrites.static_getitem', 'numba.core.rewrites.static_raise', 'numba.core.rewrites.static_binop', 'numba.core.rewrites.ir_print', 'numba.core.rewrites.macros', 'numba.core.registry', 'numba.core.descriptors', 'numba.core.dispatcher', 'numba._dispatcher', 'numba.core.serialize', 'numba.core.bytecode', 'numba.core.compiler', 'numba.core.tracing', 'numba.core.interpreter', 'numba.core.dataflow', 'numba.core.byteflow', 'numba.core.unsafe', 'numba.core.unsafe.eh', 'numba.core.callconv', 'numba.core.base', 'numba.core.compiler_lock', 'numba.np.arrayobj', 'numba.misc.quicksort', 'numba.misc.mergesort', 'numba.cpython', 'numba.cpython.slicing', 'numba.cpython.unsafe', 'numba.cpython.unsafe.tuple', 'numba.cpython.builtins', 'numba.core.typing.builtins', 'numba.parfors', 'numba.parfors.parfor_lowering', 'numba.parfors.parfor', 'numba.core.typeinfer', 'numba.stencils.stencilparfor', 'numba.core.typing.npydecl', 'numba.parfors.array_analysis', 'numba.core.sigutils', 'numba.parfors.parfor_lowering_utils', 'numba.extending', 'numba.core.cpu', 'numba.core.callwrapper', 'numba.core.codegen', 'llvmlite.llvmpy.passes', 'numba.core.runtime', 'numba.core.runtime.nrt', 'numba.core.runtime.nrtdynmod', 'numba.core.runtime._nrt_python', 'numba.core.runtime.nrtopt', 'numba.misc.inspection', 'numba.core.externals', 'numba.core.intrinsics', 'numba.core.fastmathpass', 'numba.core.options', 'numba.core.entrypoints', 'numba.cpython.setobj', 'numba.cpython.listobj', 'numba.core.inline_closurecall', 'numba.cpython.rangeobj', 'numba.np.unsafe', 'numba.np.unsafe.ndarray', 'numba.core.compiler_machinery', 'numba.core.untyped_passes', 'numba.core.ssa', 'numba.core.typed_passes', 'numba.core.annotations', 'numba.core.annotations.type_annotations', 'numba.core.object_mode_passes', 'numba.core.pylowering', 'numba.core.caching', 'numba.misc.appdirs', 'numba.np.ufunc', 'numba.np.ufunc.decorators', 'numba.np.ufunc._internal', 'numba.np.ufunc.ufuncbuilder', 'numba.np.ufunc.sigparse', 'numba.np.ufunc.wrappers', 'numba.np.ufunc.parallel', 'numba.np.ufunc.dufunc', 'numba.np.ufunc.array_exprs', 'numba.experimental', 'numba.experimental.jitclass', 'numba.experimental.jitclass.decorators', 'numba.experimental.jitclass.base', 'numba.experimental.jitclass._box', 'numba.experimental.jitclass.boxing', 'numba.core.withcontexts', 'numba.cpython.charseq', 'numba.cpython.unicode', 'numba.cpython.hashing', 'numba.core.unsafe.bytes', 'numba.cpython.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.typed.dictobject', 'numba.typed.typedobjectutils', 'numba.core.boxing', 'numba.typed.dictimpl', 'numba.experimental.function_type', 'numba.core.ccallback', 'numba.core.typing.ctypes_utils', 'numba.typed.typedlist', 'numba.typed.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'decorator', 'numba.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy._lib.messagestream', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy._lib.decorator', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.integrate', 'scipy.integrate.quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.stats', 'scipy.stats.stats', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.stats._stats', 'scipy.stats._tukeylambda_stats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._rvs_sampling', 'scipy.stats._hypotests', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'sklearn.utils.fixes', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils.deprecation', 'sklearn.utils._estimator_html_repr', 'html', 'html.entities', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils.sparsefuncs', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'array', 'sklearn.utils.multiclass', 'sklearn.preprocessing._discretization', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'threadpoolctl', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'csv', '_csv', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'keras_model', 'keras', 'keras.utils', 'keras.utils.np_utils', 'keras.utils.generic_utils', 'keras.utils.data_utils', 'tarfile', 'six.moves', 'six.moves.urllib', 'six.moves.urllib.error', 'urllib.error', 'urllib.response', 'six.moves.urllib.request', 'urllib.request', 'http', 'http.client', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'nturl2path', 'keras.utils.io_utils', 'h5py', 'h5py._errors', 'h5py._hl', 'h5py._hl.compat', 'h5py.version', 'h5py.h5', '_cython_0_29_13', 'h5py.defs', 'h5py._objects', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.utils', 'h5py.h5py_warnings', 'h5py.h5z', 'h5py.h5a', 'h5py.h5s', 'h5py.h5p', 'h5py.h5ac', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl.filters', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'keras.utils.conv_utils', 'keras.backend', 'keras.backend.load_backend', 'keras.backend.common', 'keras.backend.tensorflow_backend', 'tensorflow', 'tensorflow.python', 'tensorflow.python.pywrap_tensorflow', 'tensorflow.python.platform', 'tensorflow.python.platform.self_check', 'tensorflow.python.platform.build_info', 'tensorflow.python.pywrap_dlopen_global_flags', 'tensorflow.python.pywrap_tensorflow_internal', 'swig_runtime_data4', '_pywrap_tensorflow_internal', 'tensorflow.core', 'tensorflow.core.framework', 'tensorflow.core.framework.graph_pb2', 'google.protobuf', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorflow.core.framework.function_pb2', 'tensorflow.core.framework.attr_value_pb2', 'tensorflow.core.framework.tensor_pb2', 'tensorflow.core.framework.resource_handle_pb2', 'tensorflow.core.framework.tensor_shape_pb2', 'google.protobuf.internal.well_known_types', 'tensorflow.core.framework.types_pb2', 'tensorflow.core.framework.node_def_pb2', 'tensorflow.core.framework.op_def_pb2', 'tensorflow.core.framework.versions_pb2', 'tensorflow.core.framework.summary_pb2', 'tensorflow.core.protobuf', 'tensorflow.core.protobuf.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorflow.core.protobuf.saved_object_graph_pb2', 'tensorflow.core.framework.variable_pb2', 'tensorflow.core.protobuf.struct_pb2', 'tensorflow.core.protobuf.trackable_object_graph_pb2', 'tensorflow.core.protobuf.saver_pb2', 'tensorflow.core.protobuf.config_pb2', 'tensorflow.core.framework.cost_graph_pb2', 'tensorflow.core.framework.step_stats_pb2', 'tensorflow.core.framework.allocation_description_pb2', 'tensorflow.core.framework.tensor_description_pb2', 'tensorflow.core.protobuf.cluster_pb2', 'tensorflow.core.protobuf.debug_pb2', 'tensorflow.core.protobuf.rewriter_config_pb2', 'tensorflow.core.protobuf.verifier_config_pb2', 'tensorflow.core.protobuf.tensorflow_server_pb2', 'tensorflow.core.protobuf.device_filters_pb2', 'tensorflow.core.util', 'tensorflow.core.util.event_pb2', 'tensorflow.python.framework', 'tensorflow.python.framework.framework_lib', 'tensorflow.python.framework.device', 'tensorflow.python.tf2', 'tensorflow.python.framework.device_spec', 'tensorflow.python.util', 'tensorflow.python.util.tf_export', 'tensorflow.python.util.tf_decorator', 'tensorflow.python.util.tf_stack', 'tensorflow.python._tf_stack', 'tensorflow.python.util.tf_inspect', 'tensorflow.python.framework.ops', 'tensorflow.python.pywrap_tfe', 'tensorflow.python._pywrap_tfe', 'tensorflow.python.client', 'tensorflow.python.client.pywrap_tf_session', 'tensorflow.python._pywrap_tf_session', 'tensorflow.python.eager', 'tensorflow.python.eager.context', 'absl', 'absl.logging', 'getpass', 'absl.flags', 'getopt', 'absl.flags._argument_parser', 'absl.flags._helpers', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'absl.flags._validators', 'absl.logging.converter', 'tensorflow.python.eager.executor', 'tensorflow.python.eager.monitoring', 'tensorflow.python.framework.c_api_util', 'tensorflow.core.framework.api_def_pb2', 'tensorflow.python.util.compat', 'tensorflow.python.util.tf_contextlib', 'tensorflow.python.util.is_in_graph_mode', 'tensorflow.python.eager.core', 'tensorflow.python.framework.errors', 'tensorflow.python.framework.errors_impl', 'tensorflow.core.lib', 'tensorflow.core.lib.core', 'tensorflow.core.lib.core.error_codes_pb2', 'tensorflow.core.protobuf.error_codes_pb2', 'tensorflow.python._pywrap_py_exception_registry', 'tensorflow.python.framework.error_interpolation', 'tensorflow.core.protobuf.graph_debug_info_pb2', 'tensorflow.python.util.deprecation', 'tensorflow.python.platform.tf_logging', 'tensorflow.python.util.decorator_utils', 'tensorflow.python.eager.tape', 'tensorflow.python.util.lazy_loader', 'tensorflow.python.framework.composite_tensor', 'tensorflow.python._pywrap_utils', 'tensorflow.python.util.nest', 'wrapt', 'wrapt.wrappers', 'wrapt._wrappers', 'wrapt.decorators', 'wrapt.importer', 'tensorflow.python.framework.dtypes', 'tensorflow.python._pywrap_bfloat16', 'tensorflow.python._dtypes', 'tensorflow.python.framework.indexed_slices', 'tensorflow.python.framework.tensor_conversion_registry', 'tensorflow.python.framework.tensor_like', 'tensorflow.python.framework.tensor_shape', 'tensorflow.python.framework.type_spec', 'tensorflow.python.framework.registry', 'tensorflow.python.framework.traceable_stack', 'tensorflow.python.framework.versions', 'tensorflow.python.ops', 'tensorflow.python.ops.control_flow_util', 'tensorflow.python.platform.app', 'absl.app', 'pdb', 'cmd', 'bdb', 'code', 'codeop', 'absl.command_name', 'faulthandler', 'tensorflow.python.platform.flags', 'tensorflow.python.util.function_utils', 'tensorflow.python.util.lock_util', 'tensorflow.python.util.memory', 'tensorflow.python.util.object_identity', 'tensorflow.python.framework.sparse_tensor', 'tensorflow.python.framework.constant_op', 'tensorflow.python.eager.execute', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'tensorflow.python.framework.tensor_util', 'tensorflow.python.framework.tensor_spec', 'tensorflow.python.framework.common_shapes', 'tensorflow.python.ops.gen_sparse_ops', 'tensorflow.python.framework.op_def_registry', 'tensorflow.python._op_def_registry', 'tensorflow.python.framework.op_def_library', 'tensorflow.python.framework.op_callbacks', 'tensorflow.python.util.dispatch', 'tensorflow.python.framework.random_seed', 'tensorflow.python.framework.importer', 'tensorflow.python.framework.function', 'tensorflow.python.framework.graph_to_function_def', 'tensorflow.python.ops.array_ops', 'tensorflow.python.ops.gen_array_ops', 'tensorflow.python.ops.gen_math_ops', 'tensorflow.python.ops.resource_variable_ops', 'tensorflow.python.framework.auto_control_deps_utils', 'tensorflow.python.framework.cpp_shape_inference_pb2', 'tensorflow.python.ops.gen_logging_ops', 'tensorflow.python.ops.gen_resource_variable_ops', 'tensorflow.python.ops.gen_state_ops', 'tensorflow.python.ops.math_ops', 'tensorflow.python.framework.graph_util', 'tensorflow.python.framework.graph_util_impl', 'tensorflow.python.ops.gen_data_flow_ops', 'tensorflow.python.ops.gen_nn_ops', 'tensorflow.python.ops.state_ops', 'tensorflow.python.ops.variables', 'tensorflow.python.ops.control_flow_ops', 'tensorflow.core.protobuf.control_flow_pb2', 'tensorflow.python.ops.gen_control_flow_ops', 'tensorflow.python.ops.tensor_array_ops', 'tensorflow.python.ops.list_ops', 'tensorflow.python.ops.gen_list_ops', 'tensorflow.python.util.tf_should_use', 'tensorflow.python.training', 'tensorflow.python.training.tracking', 'tensorflow.python.training.tracking.base', 'tensorflow.python.ops.gen_io_ops', 'tensorflow.python.training.saving', 'tensorflow.python.training.saving.saveable_object', 'tensorflow.python.ops.variable_scope', 'tensorflow.python.client.session', 'tensorflow.python.ops.session_ops', 'tensorflow.python.training.experimental', 'tensorflow.python.training.experimental.mixed_precision_global_state', 'tensorflow.python.ops.init_ops', 'tensorflow.python.ops.gen_linalg_ops', 'tensorflow.python.ops.linalg_ops_impl', 'tensorflow.python.ops.random_ops', 'tensorflow.python.ops.gen_random_ops', 'tensorflow.python.framework.load_library', 'tensorflow.python._pywrap_python_op_gen', 'tensorflow.python.lib', 'tensorflow.python.lib.io', 'tensorflow.python.lib.io.file_io', 'tensorflow.python._pywrap_file_io', 'tensorflow.python.framework.config', 'tensorflow.python.client.client_lib', 'tensorflow.python.ops.standard_ops', 'tensorflow.python.autograph', 'tensorflow.python.autograph.operators', 'tensorflow.python.autograph.operators.control_flow', 'tensorflow.python.autograph.operators.py_builtins', 'tensorflow.python.autograph.utils', 'tensorflow.python.autograph.utils.context_managers', 'tensorflow.python.autograph.utils.misc', 'tensorflow.python.autograph.utils.py_func', 'tensorflow.python.ops.script_ops', 'tensorflow.python._pywrap_py_func', 'tensorflow.python.eager.backprop', 'tensorflow.python.eager.backprop_util', 'tensorflow.python.eager.imperative_grad', 'tensorflow.python.ops.unconnected_gradients', 'tensorflow.python.ops.check_ops', 'tensorflow.python.ops.default_gradient', 'tensorflow.python.framework.func_graph', 'tensorflow.python.eager.graph_only_ops', 'tensorflow.python.framework.auto_control_deps', 'tensorflow.python.ops.custom_gradient', 'tensorflow.python.ops.op_selector', 'tensorflow.python.ops.gen_script_ops', 'tensorflow.python.autograph.utils.tensor_list', 'tensorflow.python.autograph.utils.testing', 'tensorflow.python.autograph.utils.type_check', 'tensorflow.python.autograph.utils.tensors', 'tensorflow.python.data', 'tensorflow.python.data.experimental', 'tensorflow.python.data.experimental.ops', 'tensorflow.python.data.experimental.ops.batching', 'tensorflow.python.data.ops', 'tensorflow.python.data.ops.dataset_ops', 'tensorflow.python.compat', 'tensorflow.python.compat.compat', 'tensorflow.python.data.experimental.ops.distribute_options', 'tensorflow.python.data.util', 'tensorflow.python.data.util.options', 'tensorflow.python.data.experimental.ops.optimization_options', 'tensorflow.python.data.experimental.ops.stats_options', 'tensorflow.python.data.experimental.ops.stats_aggregator', 'tensorflow.python.ops.gen_experimental_dataset_ops', 'tensorflow.python.ops.summary_ops_v2', 'tensorflow.python.eager.profiler', 'tensorflow.python._pywrap_events_writer', 'tensorflow.python.platform.gfile', 'tensorflow.python.profiler', 'tensorflow.python.profiler.internal', 'tensorflow.python.profiler.internal._pywrap_profiler', 'tensorflow.python.framework.smart_cond', 'tensorflow.python.ops.gen_summary_ops', 'tensorflow.python.ops.summary_op_util', 'tensorflow.python.training.training_util', 'tensorflow.python.framework.graph_io', 'tensorflow.python.data.experimental.ops.threading_options', 'tensorflow.python.data.ops.iterator_ops', 'tensorflow.python.data.ops.optional_ops', 'tensorflow.python.data.util.structure', 'tensorflow.python.data.util.nest', 'tensorflow.python.ops.ragged', 'tensorflow.python.ops.ragged.ragged_array_ops', 'tensorflow.python.ops.sort_ops', 'tensorflow.python.ops.nn_ops', 'tensorflow.python.platform.device_context', 'tensorflow.python.ops.ragged.ragged_functional_ops', 'tensorflow.python.ops.ragged.ragged_config', 'tensorflow.python.ops.ragged.ragged_tensor', 'tensorflow.python.ops.gen_ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_tensor_value', 'tensorflow.python.ops.ragged.ragged_util', 'tensorflow.python.ops.gen_ragged_math_ops', 'tensorflow.python.ops.ragged.segment_id_ops', 'tensorflow.python.ops.ragged.ragged_math_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_ops', 'tensorflow.python.ops.ragged.ragged_gather_ops', 'tensorflow.python.ops.gen_ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_with_default_op', 'tensorflow.python.ops.ragged.ragged_dispatch', 'tensorflow.python.ops.clip_ops', 'tensorflow.python.ops.data_flow_ops', 'tensorflow.python.lib.io.python_io', 'tensorflow.python.lib.io.tf_record', 'tensorflow.python._pywrap_record_io', 'tensorflow.python.ops.gen_bitwise_ops', 'tensorflow.python.ops.parsing_ops', 'tensorflow.python.ops.gen_parsing_ops', 'tensorflow.python.ops.parsing_config', 'tensorflow.python.ops.sparse_ops', 'tensorflow.python.ops.string_ops', 'tensorflow.python.ops.gen_string_ops', 'tensorflow.python.ops.ragged.ragged_concat_ops', 'tensorflow.python.ops.ragged.ragged_squeeze_op', 'tensorflow.python.ops.ragged.ragged_string_ops', 'tensorflow.python.ops.ragged.ragged_tensor_shape', 'tensorflow.python.ops.ragged.ragged_where_op', 'tensorflow.python.ops.ragged.ragged_operators', 'tensorflow.python.ops.ragged.ragged_getitem', 'tensorflow.python.ops.ragged.ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_factory_ops', 'tensorflow.python.ops.ragged.ragged_map_ops', 'tensorflow.python.ops.gen_dataset_ops', 'tensorflow.python.training.saver', 'tensorflow.python.framework.meta_graph', 'tensorflow.python.ops.io_ops', 'tensorflow.python.training.checkpoint_management', 'tensorflow.python.training.checkpoint_state_pb2', 'tensorflow.python.training.py_checkpoint_reader', 'tensorflow.python._pywrap_checkpoint_reader', 'tensorflow.python.training.saving.saveable_object_util', 'tensorflow.python.data.util.random_seed', 'tensorflow.python.data.util.traverse', 'tensorflow.python.eager.function', 'tensorflow.python.eager.forwardprop_util', 'tensorflow.python.ops.functional_ops', 'tensorflow.python.ops.gen_functional_ops', 'tensorflow.python.ops.gradients_util', 'tensorflow.python.ops.control_flow_state', 'tensorflow.python.ops.control_flow_v2_func_graphs', 'tensorflow.python.training.tracking.tracking', 'tensorflow.python.eager.def_function', 'tensorflow.python.eager.lift_to_graph', 'tensorflow.python.training.tracking.data_structures', 'tensorflow.python.saved_model', 'tensorflow.python.saved_model.revived_types', 'tensorflow.python.training.tracking.layer_utils', 'tensorflow.python.data.util.convert', 'tensorflow.python.data.experimental.ops.cardinality', 'tensorflow.python.data.experimental.ops.counter', 'tensorflow.python.data.experimental.ops.scan_ops', 'tensorflow.python.data.experimental.ops.enumerate_ops', 'tensorflow.python.data.experimental.ops.error_ops', 'tensorflow.python.data.experimental.ops.get_single_element', 'tensorflow.python.data.experimental.ops.grouping', 'tensorflow.python.data.experimental.ops.interleave_ops', 'tensorflow.python.data.experimental.ops.random_ops', 'tensorflow.python.data.ops.readers', 'tensorflow.python.ops.gen_stateless_random_ops', 'tensorflow.python.data.experimental.ops.iterator_ops', 'tensorflow.python.training.basic_session_run_hooks', 'tensorflow.python.client.timeline', 'tensorflow.python.training.session_run_hook', 'tensorflow.python.training.summary_io', 'tensorflow.python.summary', 'tensorflow.python.summary.summary_iterator', 'tensorflow.python.summary.writer', 'tensorflow.python.summary.writer.writer', 'tensorflow.python.summary.plugin_asset', 'tensorflow.python.summary.writer.event_file_writer', 'tensorflow.python.summary.writer.event_file_writer_v2', 'tensorflow.python.summary.writer.writer_cache', 'tensorflow.python.data.experimental.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.prefetching_ops', 'tensorflow.python.data.experimental.ops.readers', 'gzip', 'tensorflow.python.data.experimental.ops.resampling', 'tensorflow.python.ops.logging_ops', 'tensorflow.python.data.experimental.ops.shuffle_ops', 'tensorflow.python.data.experimental.ops.stats_ops', 'tensorflow.python.data.experimental.ops.take_while_ops', 'tensorflow.python.data.experimental.ops.unique', 'tensorflow.python.data.experimental.ops.writers', 'tensorflow.python.util.all_util', 'tensorflow.python.autograph.operators.special_values', 'tensorflow.python.autograph.utils.ag_logging', 'tensorflow.python.autograph.utils.compat_util', 'tensorflow.python.autograph.operators.data_structures', 'tensorflow.python.autograph.operators.exceptions', 'tensorflow.python.autograph.operators.logical', 'tensorflow.python.autograph.operators.slices', 'tensorflow.python.autograph.core', 'tensorflow.python.autograph.core.converter', 'tensorflow.python.autograph.pyct', 'tensorflow.python.autograph.pyct.anno', 'gast', 'gast.gast', 'gast.ast3', 'gast.astn', 'tensorflow.python.autograph.pyct.ast_util', 'tensorflow.python.autograph.pyct.parser', 'astunparse', 'astunparse.unparser', 'astunparse.printer', 'tensorflow.python.autograph.pyct.errors', 'tensorflow.python.autograph.pyct.inspect_utils', 'tensorflow.python.autograph.pyct.qual_names', 'tensorflow.python.autograph.pyct.cfg', 'tensorflow.python.autograph.pyct.templates', 'tensorflow.python.autograph.pyct.transformer', 'tensorflow.python.autograph.pyct.loader', 'tensorflow.python.autograph.pyct.origin_info', 'tensorflow.python.autograph.pyct.pretty_printer', 'termcolor', 'tensorflow.python.autograph.pyct.static_analysis', 'tensorflow.python.autograph.pyct.static_analysis.activity', 'tensorflow.python.autograph.pyct.static_analysis.annos', 'tensorflow.python.autograph.pyct.static_analysis.liveness', 'tensorflow.python.autograph.pyct.static_analysis.reaching_definitions', 'tensorflow.python.autograph.impl', 'tensorflow.python.autograph.impl.api', 'tensorflow.python.autograph.core.ag_ctx', 'tensorflow.python.autograph.impl.conversion', 'tensorflow.python.autograph.converters', 'tensorflow.python.autograph.converters.arg_defaults', 'tensorflow.python.autograph.converters.asserts', 'tensorflow.python.autograph.converters.break_statements', 'tensorflow.python.autograph.converters.call_trees', 'tensorflow.python.autograph.converters.conditional_expressions', 'tensorflow.python.autograph.converters.continue_statements', 'tensorflow.python.autograph.converters.control_flow', 'tensorflow.python.autograph.lang', 'tensorflow.python.autograph.lang.directives', 'tensorflow.python.autograph.converters.directives', 'tensorflow.python.autograph.converters.function_scopes', 'tensorflow.python.autograph.converters.lists', 'tensorflow.python.autograph.converters.logical_expressions', 'tensorflow.python.autograph.converters.return_statements', 'tensorflow.python.autograph.converters.slices', 'tensorflow.python.autograph.core.config', 'tensorflow.python.autograph.core.config_lib', 'tensorflow.python.autograph.core.function_wrappers', 'tensorflow.python.autograph.core.naming', 'tensorflow.python.autograph.core.unsupported_features_checker', 'tensorflow.python.autograph.lang.special_functions', 'tensorflow.python.autograph.pyct.error_utils', 'tensorflow.python.training.experimental.loss_scaling_gradient_tape', 'tensorflow.python.distribute', 'tensorflow.python.distribute.cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.cluster_resolver', 'tensorflow.python.training.server_lib', 'tensorflow.python.distribute.cluster_resolver.gce_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.kubernetes_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.slurm_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tfconfig_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver', 'tensorflow.python.tpu', 'tensorflow.python.tpu.client', 'tensorflow.python.tpu.client.client', 'tensorflow.python.distribute.cross_device_ops', 'tensorflow.python.client.device_lib', 'tensorflow.core.framework.device_attributes_pb2', 'tensorflow.python._pywrap_device_lib', 'tensorflow.python.distribute.collective_util', 'tensorflow.python.distribute.cross_device_utils', 'tensorflow.python.distribute.all_reduce', 'tensorflow.python.ops.nccl_ops', 'tensorflow.python.ops.gen_nccl_ops', 'tensorflow.python.distribute.values', 'tensorflow.python.distribute.device_util', 'tensorflow.python.distribute.distribute_lib', 'tensorflow.python.distribute.distribution_strategy_context', 'tensorflow.python.distribute.numpy_dataset', 'tensorflow.python.distribute.reduce_util', 'tensorflow.python.ops.losses', 'tensorflow.python.ops.losses.loss_reduction', 'tensorflow.python.ops.losses.losses_impl', 'tensorflow.python.ops.confusion_matrix', 'tensorflow.python.ops.nn', 'tensorflow.python.ops.ctc_ops', 'tensorflow.python.ops.gen_ctc_ops', 'tensorflow.python.ops.inplace_ops', 'tensorflow.python.ops.linalg_ops', 'tensorflow.python.ops.map_fn', 'tensorflow.python.ops.nn_grad', 'tensorflow.python.ops.embedding_ops', 'tensorflow.python.ops.data_flow_grad', 'tensorflow.python.ops.nn_impl', 'tensorflow.python.ops.candidate_sampling_ops', 'tensorflow.python.ops.gen_candidate_sampling_ops', 'tensorflow.python.ops.losses.util', 'tensorflow.python.ops.weights_broadcast_ops', 'tensorflow.python.ops.sets', 'tensorflow.python.ops.sets_impl', 'tensorflow.python.ops.gen_set_ops', 'tensorflow.tools', 'tensorflow.tools.docs', 'tensorflow.tools.docs.doc_controls', 'tensorflow.python.ops.collective_ops', 'tensorflow.python.ops.gen_collective_ops', 'tensorflow.python.distribute.tpu_values', 'tensorflow.python.tpu.tpu', 'tensorflow.core.protobuf.tpu', 'tensorflow.core.protobuf.tpu.dynamic_padding_pb2', 'tensorflow.python.compiler', 'tensorflow.python.compiler.xla', 'tensorflow.python.compiler.xla.jit', 'tensorflow.python.compiler.xla.xla', 'tensorflow.compiler', 'tensorflow.compiler.jit', 'tensorflow.compiler.jit.ops', 'tensorflow.compiler.jit.ops.xla_ops', 'tensorflow.compiler.jit.ops.xla_ops_grad', 'tensorflow.python.distribute.summary_op_util', 'tensorflow.python.tpu.tpu_function', 'tensorflow.python.tpu.ops', 'tensorflow.python.tpu.ops.tpu_ops', 'tensorflow.python.ops.gen_tpu_ops', 'tensorflow.python.framework.kernels', 'tensorflow.core.framework.kernel_def_pb2', 'tensorflow.python.distribute.mirrored_strategy', 'tensorflow.python.distribute.input_lib', 'tensorflow.python.data.experimental.ops.distribute', 'tensorflow.python.data.ops.multi_device_iterator_ops', 'tensorflow.python.distribute.input_ops', 'tensorflow.python.distribute.multi_worker_util', 'tensorflow.python.distribute.distribute_coordinator_context', 'tensorflow.python.distribute.shared_variable_creator', 'tensorflow.python.training.coordinator', 'tensorflow.python.distribute.one_device_strategy', 'tensorflow.python.distribute.experimental', 'tensorflow.python.distribute.central_storage_strategy', 'tensorflow.python.distribute.parameter_server_strategy', 'tensorflow.python.training.device_setter', 'tensorflow.python.distribute.collective_all_reduce_strategy', 'tensorflow.python.distribute.tpu_strategy', 'tensorflow.compiler.xla', 'tensorflow.compiler.xla.experimental', 'tensorflow.compiler.xla.experimental.xla_sharding', 'tensorflow.compiler.xla.experimental.xla_sharding.xla_sharding', 'tensorflow.compiler.tf2xla', 'tensorflow.compiler.tf2xla.python', 'tensorflow.compiler.tf2xla.python.xla', 'tensorflow.compiler.tf2xla.ops', 'tensorflow.compiler.tf2xla.ops.gen_xla_ops', 'tensorflow.python.ops.bitwise_ops', 'tensorflow.compiler.xla.xla_data_pb2', 'tensorflow.python.tpu.device_assignment', 'tensorflow.python.tpu.topology', 'tensorflow.core.protobuf.tpu.topology_pb2', 'tensorflow.python.tpu.tpu_strategy_util', 'tensorflow.python.tpu.tpu_system_metadata', 'tensorflow.python.tpu.training_loop', 'tensorflow.python.tpu.tensor_tracer', 'tensorflow.python.platform.analytics', 'tensorflow.python.tpu.tensor_tracer_flags', 'tensorflow.python.tpu.tensor_tracer_report', 'tensorflow.python.tpu.tensor_tracer_pb2', 'tensorflow.python.training.experimental.loss_scale', 'tensorflow.python.ops.array_grad', 'tensorflow.python.ops.cudnn_rnn_grad', 'tensorflow.python.ops.gen_cudnn_rnn_ops', 'tensorflow.python.ops.manip_grad', 'tensorflow.python.ops.manip_ops', 'tensorflow.python.ops.gen_manip_ops', 'tensorflow.python.ops.math_grad', 'tensorflow.python.ops.random_grad', 'tensorflow.python.ops.rnn_grad', 'tensorflow.python.ops.gen_rnn_ops', 'tensorflow.python.ops.sparse_grad', 'tensorflow.python.ops.state_grad', 'tensorflow.python.ops.tensor_array_grad', 'tensorflow.python.ops.special_math_ops', 'opt_einsum', 'opt_einsum.blas', 'opt_einsum.helpers', 'opt_einsum.parser', 'opt_einsum.paths', 'opt_einsum.path_random', 'opt_einsum.contract', 'opt_einsum.backends', 'opt_einsum.backends.cupy', 'opt_einsum.sharing', 'opt_einsum.backends.dispatch', 'opt_einsum.backends.jax', 'opt_einsum.backends.tensorflow', 'opt_einsum.backends.theano', 'opt_einsum.backends.torch', 'opt_einsum._version', 'tensorflow.python.ops.gen_special_math_ops', 'tensorflow.python.eager.wrap_function', 'tensorflow.python.saved_model.nested_structure_coder', 'tensorflow.python.ops.batch_ops', 'tensorflow.python.ops.gen_batch_ops', 'tensorflow.python.ops.critical_section_ops', 'tensorflow.python.ops.gradients', 'tensorflow.python.eager.forwardprop', 'tensorflow.python.ops.gradients_impl', 'tensorflow.python.ops.control_flow_grad', 'tensorflow.python.ops.image_grad', 'tensorflow.python.ops.gen_image_ops', 'tensorflow.python.ops.linalg_grad', 'tensorflow.python.ops.linalg', 'tensorflow.python.ops.linalg.linalg_impl', 'tensorflow.python.ops.optional_grad', 'tensorflow.python.ops.histogram_ops', 'tensorflow.python.ops.lookup_ops', 'tensorflow.python.ops.gen_lookup_ops', 'tensorflow.python.ops.numerics', 'tensorflow.python.ops.partitioned_variables', 'tensorflow.python.ops.proto_ops', 'tensorflow.python.ops.gen_decode_proto_ops', 'tensorflow.python.ops.gen_encode_proto_ops', 'tensorflow.python.ops.stateless_random_ops', 'tensorflow.python.ops.template', 'tensorflow.python.training.tracking.util', 'tensorflow.python.training.saving.functional_saver', 'tensorflow.python.training.saving.saveable_hook', 'tensorflow.python.training.tracking.graph_view', 'tensorflow.python.training.optimizer', 'tensorflow.python.training.slot_creator', 'tensorflow.python.ops.parallel_for', 'tensorflow.python.ops.parallel_for.control_flow_ops', 'tensorflow.python.ops.parallel_for.pfor', 'tensorflow.python.ops.gen_spectral_ops', 'tensorflow.python.ops.parallel_for.gradients', 'tensorflow.python.compiler.tensorrt', 'tensorflow.python.compiler.tensorrt.trt_convert_windows', 'tensorflow.python.ops.initializers_ns', 'tensorflow.python.keras', 'tensorflow.python.keras.models', 'tensorflow.python.keras.backend', 'tensorflow.python.distribute.distribute_coordinator', 'tensorflow.python.training.monitored_session', 'tensorflow.python.ops.resources', 'tensorflow.python.summary.summary', 'google.protobuf.json_format', 'tensorflow.python.training.queue_runner', 'tensorflow.python.training.queue_runner_impl', 'tensorflow.core.protobuf.queue_runner_pb2', 'tensorflow.python.training.session_manager', 'tensorflow.python.keras.backend_config', 'tensorflow.python.ops.image_ops', 'tensorflow.python.ops.image_ops_impl', 'tensorflow.python.training.moving_averages', 'tensorflow.python.keras.metrics', 'tensorflow.python.keras.engine', 'tensorflow.python.keras.engine.base_layer', 'tensorflow.python.keras.constraints', 'tensorflow.python.keras.utils', 'tensorflow.python.keras.utils.generic_utils', 'tensorflow.python.keras.initializers', 'tensorflow.python.ops.init_ops_v2', 'tensorflow.python.keras.regularizers', 'tensorflow.python.keras.engine.base_layer_utils', 'tensorflow.python.keras.engine.input_spec', 'tensorflow.python.keras.engine.node', 'tensorflow.python.keras.mixed_precision', 'tensorflow.python.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.autocast_variable', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale_optimizer', 'tensorflow.python.keras.optimizers', 'tensorflow.python.keras.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.adadelta', 'tensorflow.python.keras.optimizer_v2.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.learning_rate_schedule', 'tensorflow.python.keras.utils.tf_utils', 'tensorflow.python.training.training_ops', 'tensorflow.python.training.gen_training_ops', 'tensorflow.python.keras.optimizer_v2.adagrad', 'tensorflow.python.keras.optimizer_v2.adam', 'tensorflow.python.keras.optimizer_v2.adamax', 'tensorflow.python.keras.optimizer_v2.ftrl', 'tensorflow.python.keras.optimizer_v2.gradient_descent', 'tensorflow.python.keras.optimizer_v2.nadam', 'tensorflow.python.keras.optimizer_v2.rmsprop', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale', 'tensorflow.python.keras.mixed_precision.experimental.policy', 'tensorflow.python.keras.mixed_precision.experimental.device_compatibility_check', 'tensorflow.python.framework.gpu_util', 'tensorflow.python.keras.saving', 'tensorflow.python.keras.saving.saved_model', 'tensorflow.python.keras.saving.saved_model.layer_serialization', 'tensorflow.python.keras.saving.saved_model.base_serialization', 'tensorflow.python.keras.saving.saved_model.json_utils', 'tensorflow.python.util.serialization', 'tensorflow.python.keras.saving.saved_model.constants', 'tensorflow.python.keras.saving.saved_model.save_impl', 'tensorflow.python.keras.saving.saving_utils', 'tensorflow.python.keras.losses', 'tensorflow.python.keras.utils.losses_utils', 'tensorflow.python.keras.utils.io_utils', 'tensorflow.python.keras.saving.saved_model.load', 'tensorflow.python.keras.saving.saved_model.utils', 'tensorflow.python.keras.saving.saved_model.serialized_attributes', 'tensorflow.python.keras.utils.metrics_utils', 'tensorflow.python.saved_model.load', 'tensorflow.python.saved_model.function_deserialization', 'tensorflow.python.framework.function_def_to_graph', 'tensorflow.python.saved_model.load_v1_in_v2', 'tensorflow.python.saved_model.loader_impl', 'tensorflow.core.protobuf.saved_model_pb2', 'tensorflow.python.saved_model.constants', 'tensorflow.python.saved_model.signature_def_utils', 'tensorflow.python.saved_model.signature_def_utils_impl', 'tensorflow.python.saved_model.signature_constants', 'tensorflow.python.saved_model.utils_impl', 'tensorflow.python.saved_model.signature_serialization', 'tensorflow.python.saved_model.function_serialization', 'tensorflow.python.keras.utils.layer_utils', 'tensorflow.python.keras.utils.conv_utils', 'tensorflow.python.keras.utils.version_utils', 'tensorflow.python.module', 'tensorflow.python.module.module', 'tensorflow.python.keras.saving.saved_model.metric_serialization', 'tensorflow.python.keras.engine.network', 'tensorflow.python.keras.engine.compile_utils', 'tensorflow.python.keras.engine.input_layer', 'tensorflow.python.keras.distribute', 'tensorflow.python.keras.distribute.distributed_training_utils', 'tensorflow.python.keras.callbacks', 'tensorflow.python.distribute.distributed_file_utils', 'tensorflow.python.keras.distribute.multi_worker_training_state', 'tensorflow.python.keras.utils.mode_keys', 'tensorflow.python.saved_model.model_utils', 'tensorflow.python.saved_model.model_utils.export_output', 'tensorflow.python.saved_model.model_utils.export_utils', 'tensorflow.python.saved_model.tag_constants', 'tensorflow.python.saved_model.model_utils.mode_keys', 'tensorflow.python.keras.utils.data_utils', 'multiprocessing.dummy', 'multiprocessing.dummy.connection', 'tensorflow.python.profiler.profiler_v2', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'mimetypes', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'tensorflow.python.keras.engine.training_utils', 'tensorflow.python.framework.composite_tensor_utils', 'tensorflow.python.keras.saving.hdf5_format', 'tensorflow.python.keras.saving.model_config', 'tensorflow.python.keras.saving.save', 'tensorflow.python.keras.saving.saved_model.save', 'tensorflow.python.saved_model.save', 'tensorflow.python.saved_model.builder_impl', 'tensorflow.python.saved_model.save_options', 'tensorflow.python.keras.saving.saved_model.network_serialization', 'tensorflow.python.keras.engine.sequential', 'tensorflow.python.keras.layers', 'tensorflow.python.keras.engine.base_preprocessing_layer', 'tensorflow.python.keras.engine.training_generator', 'tensorflow.python.keras.layers.preprocessing', 'tensorflow.python.keras.layers.preprocessing.image_preprocessing', 'tensorflow.python.ops.stateful_random_ops', 'tensorflow.python.ops.gen_stateful_random_ops', 'tensorflow.python.keras.layers.preprocessing.normalization', 'tensorflow.python.keras.layers.preprocessing.normalization_v1', 'tensorflow.python.keras.engine.base_preprocessing_layer_v1', 'tensorflow.python.keras.layers.preprocessing.text_vectorization', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding', 'tensorflow.python.keras.layers.preprocessing.index_lookup', 'tensorflow.python.keras.layers.preprocessing.text_vectorization_v1', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding_v1', 'tensorflow.python.keras.layers.preprocessing.index_lookup_v1', 'tensorflow.python.keras.layers.advanced_activations', 'tensorflow.python.keras.layers.convolutional', 'tensorflow.python.keras.activations', 'tensorflow.python.keras.layers.pooling', 'tensorflow.python.keras.layers.core', 'tensorflow.python.keras.layers.dense_attention', 'tensorflow.python.keras.layers.embeddings', 'tensorflow.python.keras.layers.local', 'tensorflow.python.keras.layers.merge', 'tensorflow.python.keras.layers.noise', 'tensorflow.python.keras.layers.normalization', 'tensorflow.python.keras.layers.normalization_v2', 'tensorflow.python.keras.layers.kernelized', 'tensorflow.python.keras.layers.recurrent', 'tensorflow.python.keras.layers.recurrent_v2', 'tensorflow.python.keras.layers.convolutional_recurrent', 'tensorflow.python.keras.layers.cudnn_recurrent', 'tensorflow.python.keras.layers.wrappers', 'tensorflow.python.keras.layers.rnn_cell_wrapper_v2', 'tensorflow.python.ops.rnn_cell_wrapper_impl', 'tensorflow.python.keras.layers.serialization', 'tensorflow.python.keras.engine.training', 'tensorflow.python.keras.engine.data_adapter', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'dateutil', 'dateutil._version', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'dateutil.relativedelta', 'dateutil._common', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'tensorflow.python.keras.saving.saved_model.model_serialization', 'tensorflow.python.profiler.traceme', 'tensorflow.python.profiler.internal._pywrap_traceme', 'tensorflow.python.keras.engine.training_v1', 'tensorflow.python.keras.engine.training_arrays', 'tensorflow.python.keras.engine.training_distributed', 'tensorflow.python.keras.engine.partial_batch_padding_handler', 'tensorflow.python.keras.engine.training_eager', 'tensorflow.python.feature_column', 'tensorflow.python.feature_column.feature_column_lib', 'tensorflow.python.feature_column.dense_features_v2', 'tensorflow.python.feature_column.dense_features', 'tensorflow.python.feature_column.feature_column_v2', 'tensorflow.python.feature_column.feature_column', 'tensorflow.python.feature_column.utils', 'tensorflow.python.layers', 'tensorflow.python.layers.base', 'tensorflow.python.training.checkpoint_utils', 'tensorflow.python.feature_column.sequence_feature_column', 'tensorflow.python.feature_column.serialization', 'tensorflow.python.layers.layers', 'tensorflow.python.layers.core', 'tensorflow.python.layers.convolutional', 'tensorflow.python.layers.pooling', 'tensorflow.python.layers.normalization', 'tensorflow.python.ops.gradient_checker_v2', 'tensorflow.python.ops.metrics', 'tensorflow.python.ops.metrics_impl', 'tensorflow.python.ops.distributions', 'tensorflow.python.ops.distributions.distributions', 'tensorflow.python.ops.distributions.bernoulli', 'tensorflow.python.ops.distributions.distribution', 'tensorflow.python.ops.distributions.kullback_leibler', 'tensorflow.python.ops.distributions.util', 'tensorflow.python.ops.distributions.beta', 'tensorflow.python.ops.distributions.categorical', 'tensorflow.python.ops.distributions.dirichlet', 'tensorflow.python.ops.distributions.dirichlet_multinomial', 'tensorflow.python.ops.distributions.exponential', 'tensorflow.python.ops.distributions.gamma', 'tensorflow.python.ops.distributions.laplace', 'tensorflow.python.ops.distributions.special_math', 'tensorflow.python.ops.distributions.multinomial', 'tensorflow.python.ops.distributions.normal', 'tensorflow.python.ops.distributions.student_t', 'tensorflow.python.ops.distributions.uniform', 'tensorflow.python.ops.linalg.linalg', 'tensorflow.python.ops.linalg.adjoint_registrations', 'tensorflow.python.ops.linalg.linear_operator', 'tensorflow.python.ops.linalg.linear_operator_algebra', 'tensorflow.python.ops.linalg.linear_operator_util', 'tensorflow.python.ops.linalg.linear_operator_adjoint', 'tensorflow.python.ops.linalg.linear_operator_block_diag', 'tensorflow.python.ops.linalg.linear_operator_circulant', 'tensorflow.python.ops.signal', 'tensorflow.python.ops.signal.fft_ops', 'tensorflow.python.ops.linalg.linear_operator_diag', 'tensorflow.python.ops.linalg.linear_operator_householder', 'tensorflow.python.ops.linalg.linear_operator_identity', 'tensorflow.python.ops.linalg.linear_operator_kronecker', 'tensorflow.python.ops.linalg.cholesky_registrations', 'tensorflow.python.ops.linalg.linear_operator_lower_triangular', 'tensorflow.python.ops.linalg.inverse_registrations', 'tensorflow.python.ops.linalg.linear_operator_addition', 'tensorflow.python.ops.linalg.linear_operator_full_matrix', 'tensorflow.python.ops.linalg.linear_operator_block_lower_triangular', 'tensorflow.python.ops.linalg.linear_operator_inversion', 'tensorflow.python.ops.linalg.matmul_registrations', 'tensorflow.python.ops.linalg.linear_operator_composition', 'tensorflow.python.ops.linalg.linear_operator_zeros', 'tensorflow.python.ops.linalg.registrations_util', 'tensorflow.python.ops.linalg.solve_registrations', 'tensorflow.python.ops.linalg.linear_operator_low_rank_update', 'tensorflow.python.ops.linalg.linear_operator_permutation', 'tensorflow.python.ops.linalg.linear_operator_toeplitz', 'tensorflow.python.ops.linalg.linear_operator_tridiag', 'tensorflow.python.ops.linalg.sparse', 'tensorflow.python.ops.linalg.sparse.sparse', 'tensorflow.python.ops.linalg.sparse.conjugate_gradient', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_grad', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_ops', 'tensorflow.python.ops.linalg.sparse.gen_sparse_csr_matrix_ops', 'tensorflow.python.ops.losses.losses', 'tensorflow.python.ops.signal.signal', 'tensorflow.python.ops.signal.dct_ops', 'tensorflow.python.ops.signal.mel_ops', 'tensorflow.python.ops.signal.shape_ops', 'tensorflow.python.ops.signal.util_ops', 'tensorflow.python.ops.signal.mfcc_ops', 'tensorflow.python.ops.signal.reconstruction_ops', 'tensorflow.python.ops.signal.spectral_ops', 'tensorflow.python.ops.signal.window_ops', 'tensorflow.python.profiler.profiler', 'tensorflow.core.profiler', 'tensorflow.core.profiler.tfprof_log_pb2', 'tensorflow.core.profiler.tfprof_output_pb2', 'tensorflow.python.profiler.model_analyzer', 'tensorflow.core.profiler.tfprof_options_pb2', 'tensorflow.python._pywrap_tfprof', 'tensorflow.python.profiler.option_builder', 'tensorflow.python.profiler.tfprof_logger', 'tensorflow.python.profiler.internal.flops_registry', 'tensorflow.python.profiler.profiler_client', 'tensorflow.python.saved_model.saved_model', 'tensorflow.python.saved_model.builder', 'tensorflow.python.saved_model.loader', 'tensorflow.python.saved_model.main_op', 'tensorflow.python.saved_model.main_op_impl', 'tensorflow.python.saved_model.method_name_updater', 'tensorflow.python.saved_model.utils', 'tensorflow.python.saved_model.simple_save', 'tensorflow.python.tpu.api', 'tensorflow.python.tpu.bfloat16', 'tensorflow.python.tpu.feature_column_v2', 'tensorflow.python.tpu.feature_column', 'tensorflow.python.tpu.tpu_embedding', 'tensorflow.core.protobuf.tpu.optimization_parameters_pb2', 'google.protobuf.wrappers_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_output_layout_pb2', 'tensorflow.python.tpu.tpu_optimizer', 'tensorflow.python.user_ops', 'tensorflow.python.user_ops.user_ops', 'tensorflow.python.ops.gen_user_ops', 'tensorflow.python.ops.gen_audio_ops', 'tensorflow.python.ops.gen_boosted_trees_ops', 'tensorflow.python.ops.gen_sendrecv_ops', 'tensorflow.python.training.training', 'tensorflow.python.ops.sdca_ops', 'tensorflow.python.ops.gen_sdca_ops', 'tensorflow.python.training.adadelta', 'tensorflow.python.training.adagrad', 'tensorflow.python.training.adagrad_da', 'tensorflow.python.training.proximal_adagrad', 'tensorflow.python.training.adam', 'tensorflow.python.training.ftrl', 'tensorflow.python.training.experimental.loss_scale_optimizer', 'tensorflow.python.training.experimental.mixed_precision', 'tensorflow.python.training.momentum', 'tensorflow.python.training.rmsprop', 'tensorflow.python.training.gradient_descent', 'tensorflow.python.training.proximal_gradient_descent', 'tensorflow.python.training.sync_replicas_optimizer', 'tensorflow.python.training.input', 'tensorflow.python.layers.utils', 'tensorflow.python.training.basic_loops', 'tensorflow.python.training.tracking.python_state', 'tensorflow.python.training.supervisor', 'tensorflow.python.training.warm_starting_util', 'tensorflow.python.training.checkpoint_ops', 'tensorflow.python.ops.gen_checkpoint_ops', 'tensorflow.core.example', 'tensorflow.core.example.example_pb2', 'tensorflow.core.example.feature_pb2', 'tensorflow.python.training.learning_rate_decay', 'tensorflow.python.training.quantize_training', 'tensorflow.python._pywrap_quantize_training', 'tensorflow.python.platform.resource_loader', 'tensorflow.python.platform.sysconfig', 'tensorflow.python.platform.test', 'tensorflow.python.framework.test_util', 'absl.testing', 'absl.testing.parameterized', 'absl.testing.absltest', 'shlex', 'absl._enum_module', 'absl.testing._pretty_print_reporter', 'absl.third_party', 'absl.third_party.unittest3_backport', 'absl.third_party.unittest3_backport.case', 'absl.third_party.unittest3_backport.result', 'absl.testing.xml_reporter', 'xml.sax', 'xml.sax.xmlreader', 'xml.sax.handler', 'xml.sax._exceptions', 'xml.sax.saxutils', 'unittest.mock', 'tensorflow.python._pywrap_stacktrace_handler', 'tensorflow.python._pywrap_util_port', 'tensorflow.python.ops.control_flow_util_v2', 'tensorflow.python.platform.googletest', 'tensorflow.python.platform.benchmark', 'tensorflow.core.util.test_log_pb2', 'tensorflow.python.util.protobuf', 'tensorflow.python.util.protobuf.compare', 'tensorflow.python.ops.gradient_checker', 'tensorflow.python.compat.v2_compat', 'tensorflow.python.ops.control_flow_v2_toggles', 'tensorflow.python.eager.remote', 'tensorflow.python.platform.remote_utils', 'tensorflow.python.ops.rnn', 'tensorflow.python.ops.rnn_cell_impl', 'tensorflow.python.ops.rnn_cell', 'tensorflow.python.debug', 'tensorflow.python.debug.lib', 'tensorflow.python.debug.lib.debug_data', 'tensorflow.python.debug.lib.debug_graphs', 'tensorflow.python.debug.lib.debug_gradients', 'tensorflow.python.debug.lib.debug_utils', 'tensorflow.python.debug.wrappers', 'tensorflow.python.debug.wrappers.dumping_wrapper', 'tensorflow.python.debug.wrappers.framework', 'tensorflow.python.debug.wrappers.grpc_wrapper', 'tensorflow.python.debug.lib.common', 'tensorflow.python.debug.wrappers.hooks', 'tensorflow.python.debug.wrappers.local_cli_wrapper', 'tensorflow.python.debug.cli', 'tensorflow.python.debug.cli.analyzer_cli', 'tensorflow.python.debug.cli.cli_config', 'tensorflow.python.debug.cli.debugger_cli_common', 'tensorflow.python.debug.cli.cli_shared', 'tensorflow.python.debug.cli.command_parser', 'tensorflow.python.debug.cli.tensor_format', 'tensorflow.python.debug.cli.evaluator', 'tensorflow.python.debug.cli.ui_factory', 'tensorflow.python.debug.lib.source_utils', 'tensorflow.python.debug.lib.profiling', 'tensorflow.python.debug.cli.profile_analyzer_cli', 'tensorflow.python.debug.lib.check_numerics_callback', 'tensorflow.core.protobuf.debug_event_pb2', 'tensorflow.python.debug.lib.op_callbacks_common', 'tensorflow.python.ops.gen_debug_ops', 'tensorflow.python.debug.lib.dumping_callback', 'tensorflow.python.debug.lib.debug_events_writer', 'tensorflow.python._pywrap_debug_events_writer', 'tensorflow.python.dlpack', 'tensorflow.python.dlpack.dlpack', 'tensorflow.python.compiler.mlir', 'tensorflow.python.compiler.mlir.mlir', 'tensorflow.python.pywrap_mlir', 'tensorflow.python._pywrap_mlir', 'tensorflow.python.tools', 'tensorflow.python.tools.module_util', 'tensorflow._api', 'tensorflow._api.v2', 'tensorflow._api.v2.audio', 'tensorflow._api.v2.autodiff', 'tensorflow._api.v2.autograph', 'tensorflow._api.v2.autograph.experimental', 'tensorflow._api.v2.bitwise', 'tensorflow._api.v2.compat', 'tensorflow._api.v2.compat.v1', 'tensorflow._api.v2.compat.v1.app', 'tensorflow._api.v2.compat.v1.audio', 'tensorflow._api.v2.compat.v1.autograph', 'tensorflow._api.v2.compat.v1.autograph.experimental', 'tensorflow._api.v2.compat.v1.bitwise', 'tensorflow._api.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v1.compat.v1', 'tensorflow._api.v2.compat.v1.compat.v1.compat', 'tensorflow._api.v2.compat.v1.config', 'tensorflow._api.v2.compat.v1.config.experimental', 'tensorflow._api.v2.compat.v1.config.optimizer', 'tensorflow._api.v2.compat.v1.config.threading', 'tensorflow._api.v2.compat.v1.data', 'tensorflow._api.v2.compat.v1.data.experimental', 'tensorflow._api.v2.compat.v1.debugging', 'tensorflow._api.v2.compat.v1.debugging.experimental', 'tensorflow._api.v2.compat.v1.distribute', 'tensorflow._api.v2.compat.v1.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v1.distribute.experimental', 'tensorflow._api.v2.compat.v1.distributions', 'tensorflow._api.v2.compat.v1.dtypes', 'tensorflow._api.v2.compat.v1.errors', 'tensorflow._api.v2.compat.v1.experimental', 'tensorflow._api.v2.compat.v1.feature_column', 'tensorflow._api.v2.compat.v1.gfile', 'tensorflow._api.v2.compat.v1.graph_util', 'tensorflow._api.v2.compat.v1.image', 'tensorflow._api.v2.compat.v1.initializers', 'tensorflow._api.v2.compat.v1.io', 'tensorflow._api.v2.compat.v1.io.gfile', 'tensorflow._api.v2.compat.v1.layers', 'tensorflow._api.v2.compat.v1.layers.experimental', 'tensorflow._api.v2.compat.v1.linalg', 'tensorflow._api.v2.compat.v1.linalg.experimental', 'tensorflow._api.v2.compat.v1.lite', 'tensorflow._api.v2.compat.v1.lite.constants', 'tensorflow.lite', 'tensorflow.lite.python', 'tensorflow.lite.python.lite_constants', 'tensorflow.lite.toco', 'tensorflow.lite.toco.toco_flags_pb2', 'tensorflow.lite.toco.types_pb2', 'tensorflow._api.v2.compat.v1.lite.experimental', 'tensorflow._api.v2.compat.v1.lite.experimental.nn', 'tensorflow.lite.python.lite', 'tensorflow.lite.experimental', 'tensorflow.lite.experimental.examples', 'tensorflow.lite.experimental.examples.lstm', 'tensorflow.lite.experimental.examples.lstm.rnn', 'tensorflow.lite.python.op_hint', 'tensorflow.lite.experimental.examples.lstm.rnn_cell', 'tensorflow.lite.experimental.microfrontend', 'tensorflow.lite.experimental.microfrontend.python', 'tensorflow.lite.experimental.microfrontend.python.ops', 'tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op', 'tensorflow.lite.experimental.microfrontend.ops', 'tensorflow.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op', '0294638c8bf50491b025b096f3dba0a1', 'tensorflow.lite.experimental.tensorboard', 'tensorflow.lite.experimental.tensorboard.ops_util', 'tensorflow.lite.python.wrap_toco', 'tensorflow.python._pywrap_toco_api', 'tensorflow.lite.python.convert', 'distutils.spawn', 'distutils.errors', 'distutils.debug', 'distutils.log', 'tensorflow.lite.python.util', 'tensorflow.python.framework.convert_to_constants', 'tensorflow.python.grappler', 'tensorflow.python.grappler.tf_optimizer', 'tensorflow.python._pywrap_tf_optimizer', 'tensorflow.python.grappler.cluster', 'tensorflow.core.grappler', 'tensorflow.core.grappler.costs', 'tensorflow.core.grappler.costs.op_performance_data_pb2', 'tensorflow.core.protobuf.device_properties_pb2', 'tensorflow.python._pywrap_tf_cluster', 'tensorflow.lite.toco.model_flags_pb2', 'tensorflow.lite.python.convert_saved_model', 'tensorflow.lite.python.interpreter', 'tensorflow.lite.python.optimize', 'tensorflow.lite.python.optimize.calibrator', 'tensorflow._api.v2.compat.v1.logging', 'tensorflow._api.v2.compat.v1.lookup', 'tensorflow._api.v2.compat.v1.lookup.experimental', 'tensorflow._api.v2.compat.v1.losses', 'tensorflow._api.v2.compat.v1.manip', 'tensorflow._api.v2.compat.v1.math', 'tensorflow._api.v2.compat.v1.math.special', 'tensorflow._api.v2.compat.v1.metrics', 'tensorflow._api.v2.compat.v1.mixed_precision', 'tensorflow._api.v2.compat.v1.mixed_precision.experimental', 'tensorflow._api.v2.compat.v1.mlir', 'tensorflow._api.v2.compat.v1.mlir.experimental', 'tensorflow._api.v2.compat.v1.nest', 'tensorflow._api.v2.compat.v1.nn', 'tensorflow._api.v2.compat.v1.nn.rnn_cell', 'tensorflow._api.v2.compat.v1.profiler', 'tensorflow._api.v2.compat.v1.python_io', 'tensorflow._api.v2.compat.v1.quantization', 'tensorflow._api.v2.compat.v1.queue', 'tensorflow._api.v2.compat.v1.ragged', 'tensorflow._api.v2.compat.v1.random', 'tensorflow._api.v2.compat.v1.random.experimental', 'tensorflow._api.v2.compat.v1.raw_ops', 'tensorflow._api.v2.compat.v1.resource_loader', 'tensorflow._api.v2.compat.v1.saved_model', 'tensorflow._api.v2.compat.v1.saved_model.builder', 'tensorflow._api.v2.compat.v1.saved_model.constants', 'tensorflow._api.v2.compat.v1.saved_model.experimental', 'tensorflow._api.v2.compat.v1.saved_model.loader', 'tensorflow._api.v2.compat.v1.saved_model.main_op', 'tensorflow._api.v2.compat.v1.saved_model.signature_constants', 'tensorflow._api.v2.compat.v1.saved_model.signature_def_utils', 'tensorflow._api.v2.compat.v1.saved_model.tag_constants', 'tensorflow._api.v2.compat.v1.saved_model.utils', 'tensorflow._api.v2.compat.v1.sets', 'tensorflow._api.v2.compat.v1.signal', 'tensorflow._api.v2.compat.v1.sparse', 'tensorflow._api.v2.compat.v1.spectral', 'tensorflow._api.v2.compat.v1.strings', 'tensorflow._api.v2.compat.v1.summary', 'tensorflow._api.v2.compat.v1.sysconfig', 'tensorflow._api.v2.compat.v1.test', 'tensorflow._api.v2.compat.v1.tpu', 'tensorflow._api.v2.compat.v1.tpu.experimental', 'tensorflow._api.v2.compat.v1.train', 'tensorflow._api.v2.compat.v1.train.experimental', 'tensorflow._api.v2.compat.v1.train.queue_runner', 'tensorflow._api.v2.compat.v1.user_ops', 'tensorflow._api.v2.compat.v1.version', 'tensorflow._api.v2.compat.v1.xla', 'tensorflow._api.v2.compat.v1.xla.experimental', 'tensorflow.python.keras.api', 'tensorflow.python.keras.api.keras', 'tensorflow.python.keras.api.keras.activations', 'tensorflow.python.util.module_wrapper', 'tensorflow.tools.compatibility', 'tensorflow.tools.compatibility.all_renames_v2', 'tensorflow.tools.compatibility.renames_v2', 'tensorflow.python.keras.api.keras.applications', 'tensorflow.python.keras.api.keras.applications.densenet', 'tensorflow.python.keras.applications', 'tensorflow.python.keras.applications.densenet', 'tensorflow.python.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api.keras.applications.inception_v3', 'tensorflow.python.keras.applications.inception_v3', 'tensorflow.python.keras.api.keras.applications.mobilenet', 'tensorflow.python.keras.applications.mobilenet', 'tensorflow.python.keras.api.keras.applications.mobilenet_v2', 'tensorflow.python.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api.keras.applications.nasnet', 'tensorflow.python.keras.applications.nasnet', 'tensorflow.python.keras.api.keras.applications.resnet', 'tensorflow.python.keras.applications.resnet', 'tensorflow.python.keras.api.keras.applications.resnet50', 'tensorflow.python.keras.api.keras.applications.resnet_v2', 'tensorflow.python.keras.applications.resnet_v2', 'tensorflow.python.keras.api.keras.applications.vgg16', 'tensorflow.python.keras.applications.vgg16', 'tensorflow.python.keras.api.keras.applications.vgg19', 'tensorflow.python.keras.applications.vgg19', 'tensorflow.python.keras.api.keras.applications.xception', 'tensorflow.python.keras.applications.xception', 'tensorflow.python.keras.api.keras.backend', 'tensorflow.python.keras.api.keras.callbacks', 'tensorflow.python.keras.callbacks_v1', 'tensorflow.python.keras.api.keras.constraints', 'tensorflow.python.keras.api.keras.datasets', 'tensorflow.python.keras.api.keras.datasets.boston_housing', 'tensorflow.python.keras.datasets', 'tensorflow.python.keras.datasets.boston_housing', 'tensorflow.python.keras.api.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar', 'tensorflow.python.keras.api.keras.datasets.cifar100', 'tensorflow.python.keras.datasets.cifar100', 'tensorflow.python.keras.api.keras.datasets.fashion_mnist', 'tensorflow.python.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api.keras.datasets.imdb', 'tensorflow.python.keras.datasets.imdb', 'tensorflow.python.keras.preprocessing', 'keras_preprocessing', 'tensorflow.python.keras.preprocessing.image', 'keras_preprocessing.image', 'keras_preprocessing.image.affine_transformations', 'keras_preprocessing.image.utils', 'keras_preprocessing.image.dataframe_iterator', 'keras_preprocessing.image.iterator', 'keras_preprocessing.image.directory_iterator', 'keras_preprocessing.image.image_data_generator', 'keras_preprocessing.image.numpy_array_iterator', 'tensorflow.python.keras.preprocessing.sequence', 'keras_preprocessing.sequence', 'tensorflow.python.keras.preprocessing.text', 'keras_preprocessing.text', 'tensorflow.python.keras.utils.all_utils', 'tensorflow.python.keras.utils.multi_gpu_utils', 'tensorflow.python.keras.utils.np_utils', 'tensorflow.python.keras.utils.vis_utils', 'tensorflow.python.keras.api.keras.datasets.mnist', 'tensorflow.python.keras.datasets.mnist', 'tensorflow.python.keras.api.keras.datasets.reuters', 'tensorflow.python.keras.datasets.reuters', 'tensorflow.python.keras.api.keras.estimator', 'tensorflow.python.keras.estimator', 'tensorflow.python.keras.api.keras.experimental', 'tensorflow.python.keras.premade', 'tensorflow.python.keras.premade.linear', 'tensorflow.python.keras.premade.wide_deep', 'tensorflow.python.keras.saving.saved_model_experimental', 'tensorflow.python.keras.api.keras.initializers', 'tensorflow.python.keras.api.keras.layers', 'tensorflow.python.keras.api.keras.layers.experimental', 'tensorflow.python.keras.api.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api.keras.losses', 'tensorflow.python.keras.api.keras.metrics', 'tensorflow.python.keras.api.keras.mixed_precision', 'tensorflow.python.keras.api.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.get_layer_policy', 'tensorflow.python.keras.api.keras.models', 'tensorflow.python.keras.api.keras.optimizers', 'tensorflow.python.keras.api.keras.optimizers.schedules', 'tensorflow.python.keras.api.keras.preprocessing', 'tensorflow.python.keras.api.keras.preprocessing.image', 'tensorflow.python.keras.api.keras.preprocessing.sequence', 'tensorflow.python.keras.api.keras.preprocessing.text', 'tensorflow.python.keras.api.keras.regularizers', 'tensorflow.python.keras.api.keras.utils', 'tensorflow.python.keras.api.keras.wrappers', 'tensorflow.python.keras.api.keras.wrappers.scikit_learn', 'tensorflow.python.keras.wrappers', 'tensorflow.python.keras.wrappers.scikit_learn', 'tensorflow.python.keras.api._v1', 'tensorflow.python.keras.api._v1.keras', 'tensorflow.python.keras.api._v1.keras.activations', 'tensorflow.python.keras.api._v1.keras.applications', 'tensorflow.python.keras.api._v1.keras.applications.densenet', 'tensorflow.python.keras.api._v1.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v1.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.inception_v3', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v1.keras.applications.nasnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet50', 'tensorflow.python.keras.api._v1.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.vgg16', 'tensorflow.python.keras.api._v1.keras.applications.vgg19', 'tensorflow.python.keras.api._v1.keras.applications.xception', 'tensorflow.python.keras.api._v1.keras.backend', 'tensorflow.python.keras.api._v1.keras.callbacks', 'tensorflow.python.keras.api._v1.keras.constraints', 'tensorflow.python.keras.api._v1.keras.datasets', 'tensorflow.python.keras.api._v1.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v1.keras.datasets.cifar10', 'tensorflow.python.keras.api._v1.keras.datasets.cifar100', 'tensorflow.python.keras.api._v1.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v1.keras.datasets.imdb', 'tensorflow.python.keras.api._v1.keras.datasets.mnist', 'tensorflow.python.keras.api._v1.keras.datasets.reuters', 'tensorflow.python.keras.api._v1.keras.estimator', 'tensorflow.python.keras.api._v1.keras.experimental', 'tensorflow.python.keras.api._v1.keras.initializers', 'tensorflow.python.keras.api._v1.keras.layers', 'tensorflow.python.keras.api._v1.keras.layers.experimental', 'tensorflow.python.keras.api._v1.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v1.keras.losses', 'tensorflow.python.keras.api._v1.keras.metrics', 'tensorflow.python.keras.api._v1.keras.mixed_precision', 'tensorflow.python.keras.api._v1.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v1.keras.models', 'tensorflow.python.keras.api._v1.keras.optimizers', 'tensorflow.python.keras.api._v1.keras.optimizers.schedules', 'tensorflow.python.keras.api._v1.keras.preprocessing', 'tensorflow.python.keras.api._v1.keras.preprocessing.image', 'tensorflow.python.keras.api._v1.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v1.keras.preprocessing.text', 'tensorflow.python.keras.api._v1.keras.regularizers', 'tensorflow.python.keras.api._v1.keras.utils', 'tensorflow.python.keras.api._v1.keras.wrappers', 'tensorflow.python.keras.api._v1.keras.wrappers.scikit_learn', 'tensorflow._api.v2.compat.v1.compat.v2', 'tensorflow._api.v2.compat.v1.compat.v2.compat', 'tensorflow._api.v2.compat.v2', 'tensorflow._api.v2.compat.v2.audio', 'tensorflow._api.v2.compat.v2.autodiff', 'tensorflow._api.v2.compat.v2.autograph', 'tensorflow._api.v2.compat.v2.autograph.experimental', 'tensorflow._api.v2.compat.v2.bitwise', 'tensorflow._api.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.compat.v1', 'tensorflow._api.v2.compat.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v2.compat.v2', 'tensorflow._api.v2.compat.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.config', 'tensorflow._api.v2.compat.v2.config.experimental', 'tensorflow._api.v2.compat.v2.config.optimizer', 'tensorflow._api.v2.compat.v2.config.threading', 'tensorflow._api.v2.compat.v2.data', 'tensorflow._api.v2.compat.v2.data.experimental', 'tensorflow._api.v2.compat.v2.debugging', 'tensorflow._api.v2.compat.v2.debugging.experimental', 'tensorflow._api.v2.compat.v2.distribute', 'tensorflow._api.v2.compat.v2.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v2.distribute.experimental', 'tensorflow._api.v2.compat.v2.dtypes', 'tensorflow._api.v2.compat.v2.errors', 'tensorflow._api.v2.compat.v2.experimental', 'tensorflow._api.v2.compat.v2.experimental.dlpack', 'tensorflow._api.v2.compat.v2.experimental.tensorrt', 'tensorflow._api.v2.compat.v2.feature_column', 'tensorflow._api.v2.compat.v2.graph_util', 'tensorflow._api.v2.compat.v2.image', 'tensorflow._api.v2.compat.v2.io', 'tensorflow._api.v2.compat.v2.io.gfile', 'tensorflow._api.v2.compat.v2.linalg', 'tensorflow._api.v2.compat.v2.linalg.experimental', 'tensorflow._api.v2.compat.v2.lite', 'tensorflow._api.v2.compat.v2.lite.experimental', 'tensorflow._api.v2.compat.v2.lookup', 'tensorflow._api.v2.compat.v2.lookup.experimental', 'tensorflow._api.v2.compat.v2.math', 'tensorflow._api.v2.compat.v2.math.special', 'tensorflow._api.v2.compat.v2.mixed_precision', 'tensorflow._api.v2.compat.v2.mixed_precision.experimental', 'tensorflow._api.v2.compat.v2.mlir', 'tensorflow._api.v2.compat.v2.mlir.experimental', 'tensorflow._api.v2.compat.v2.nest', 'tensorflow._api.v2.compat.v2.nn', 'tensorflow._api.v2.compat.v2.profiler', 'tensorflow._api.v2.compat.v2.profiler.experimental', 'tensorflow._api.v2.compat.v2.profiler.experimental.client', 'tensorflow._api.v2.compat.v2.profiler.experimental.server', 'tensorflow._api.v2.compat.v2.quantization', 'tensorflow._api.v2.compat.v2.queue', 'tensorflow._api.v2.compat.v2.ragged', 'tensorflow._api.v2.compat.v2.random', 'tensorflow._api.v2.compat.v2.random.experimental', 'tensorflow._api.v2.compat.v2.raw_ops', 'tensorflow._api.v2.compat.v2.saved_model', 'tensorflow._api.v2.compat.v2.sets', 'tensorflow._api.v2.compat.v2.signal', 'tensorflow._api.v2.compat.v2.sparse', 'tensorflow._api.v2.compat.v2.strings', 'tensorflow._api.v2.compat.v2.summary', 'tensorflow._api.v2.compat.v2.summary.experimental', 'tensorflow._api.v2.compat.v2.sysconfig', 'tensorflow._api.v2.compat.v2.test', 'tensorflow._api.v2.compat.v2.tpu', 'tensorflow._api.v2.compat.v2.tpu.experimental', 'tensorflow._api.v2.compat.v2.train', 'tensorflow._api.v2.compat.v2.train.experimental', 'tensorflow._api.v2.compat.v2.version', 'tensorflow._api.v2.compat.v2.xla', 'tensorflow._api.v2.compat.v2.xla.experimental', 'tensorboard', 'tensorboard.errors', 'tensorboard.lazy', 'tensorboard.version', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_shape_pb2', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.util.lazy_tensor_creator', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.event_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary._tf', 'tensorboard.summary._tf.summary', 'tensorflow.python.keras.api._v2', 'tensorflow.python.keras.api._v2.keras', 'tensorflow.python.keras.api._v2.keras.activations', 'tensorflow.python.keras.api._v2.keras.applications', 'tensorflow.python.keras.api._v2.keras.applications.densenet', 'tensorflow.python.keras.api._v2.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v2.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.inception_v3', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v2.keras.applications.nasnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet50', 'tensorflow.python.keras.api._v2.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.vgg16', 'tensorflow.python.keras.api._v2.keras.applications.vgg19', 'tensorflow.python.keras.api._v2.keras.applications.xception', 'tensorflow.python.keras.api._v2.keras.backend', 'tensorflow.python.keras.api._v2.keras.callbacks', 'tensorflow.python.keras.api._v2.keras.constraints', 'tensorflow.python.keras.api._v2.keras.datasets', 'tensorflow.python.keras.api._v2.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v2.keras.datasets.cifar10', 'tensorflow.python.keras.api._v2.keras.datasets.cifar100', 'tensorflow.python.keras.api._v2.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v2.keras.datasets.imdb', 'tensorflow.python.keras.api._v2.keras.datasets.mnist', 'tensorflow.python.keras.api._v2.keras.datasets.reuters', 'tensorflow.python.keras.api._v2.keras.estimator', 'tensorflow.python.keras.api._v2.keras.experimental', 'tensorflow.python.keras.api._v2.keras.initializers', 'tensorflow.python.keras.api._v2.keras.layers', 'tensorflow.python.keras.api._v2.keras.layers.experimental', 'tensorflow.python.keras.api._v2.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v2.keras.losses', 'tensorflow.python.keras.api._v2.keras.metrics', 'tensorflow.python.keras.api._v2.keras.mixed_precision', 'tensorflow.python.keras.api._v2.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v2.keras.models', 'tensorflow.python.keras.api._v2.keras.optimizers', 'tensorflow.python.keras.api._v2.keras.optimizers.schedules', 'tensorflow.python.keras.api._v2.keras.preprocessing', 'tensorflow.python.keras.api._v2.keras.preprocessing.image', 'tensorflow.python.keras.api._v2.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v2.keras.preprocessing.text', 'tensorflow.python.keras.api._v2.keras.regularizers', 'tensorflow.python.keras.api._v2.keras.utils', 'tensorflow.python.keras.api._v2.keras.wrappers', 'tensorflow.python.keras.api._v2.keras.wrappers.scikit_learn', 'tensorflow._api.v2.config', 'tensorflow._api.v2.config.experimental', 'tensorflow._api.v2.config.optimizer', 'tensorflow._api.v2.config.threading', 'tensorflow._api.v2.data', 'tensorflow._api.v2.data.experimental', 'tensorflow._api.v2.debugging', 'tensorflow._api.v2.debugging.experimental', 'tensorflow._api.v2.distribute', 'tensorflow._api.v2.distribute.cluster_resolver', 'tensorflow._api.v2.distribute.experimental', 'tensorflow._api.v2.dtypes', 'tensorflow._api.v2.errors', 'tensorflow._api.v2.experimental', 'tensorflow._api.v2.experimental.dlpack', 'tensorflow._api.v2.experimental.tensorrt', 'tensorflow._api.v2.feature_column', 'tensorflow._api.v2.graph_util', 'tensorflow._api.v2.image', 'tensorflow._api.v2.io', 'tensorflow._api.v2.io.gfile', 'tensorflow._api.v2.linalg', 'tensorflow._api.v2.linalg.experimental', 'tensorflow._api.v2.lite', 'tensorflow._api.v2.lite.experimental', 'tensorflow._api.v2.lookup', 'tensorflow._api.v2.lookup.experimental', 'tensorflow._api.v2.math', 'tensorflow._api.v2.math.special', 'tensorflow._api.v2.mixed_precision', 'tensorflow._api.v2.mixed_precision.experimental', 'tensorflow._api.v2.mlir', 'tensorflow._api.v2.mlir.experimental', 'tensorflow._api.v2.nest', 'tensorflow._api.v2.nn', 'tensorflow._api.v2.profiler', 'tensorflow._api.v2.profiler.experimental', 'tensorflow._api.v2.profiler.experimental.client', 'tensorflow._api.v2.profiler.experimental.server', 'tensorflow._api.v2.quantization', 'tensorflow._api.v2.queue', 'tensorflow._api.v2.ragged', 'tensorflow._api.v2.random', 'tensorflow._api.v2.random.experimental', 'tensorflow._api.v2.raw_ops', 'tensorflow._api.v2.saved_model', 'tensorflow._api.v2.sets', 'tensorflow._api.v2.signal', 'tensorflow._api.v2.sparse', 'tensorflow._api.v2.strings', 'tensorflow._api.v2.summary', 'tensorflow._api.v2.summary.experimental', 'tensorflow._api.v2.sysconfig', 'tensorflow._api.v2.test', 'tensorflow._api.v2.tpu', 'tensorflow._api.v2.tpu.experimental', 'tensorflow._api.v2.train', 'tensorflow._api.v2.train.experimental', 'tensorflow._api.v2.version', 'tensorflow._api.v2.xla', 'tensorflow._api.v2.xla.experimental', 'tensorflow.keras', 'tensorflow.keras.activations', 'tensorflow.keras.applications', 'tensorflow.keras.applications.densenet', 'tensorflow.keras.applications.imagenet_utils', 'tensorflow.keras.applications.inception_resnet_v2', 'tensorflow.keras.applications.inception_v3', 'tensorflow.keras.applications.mobilenet', 'tensorflow.keras.applications.mobilenet_v2', 'tensorflow.keras.applications.nasnet', 'tensorflow.keras.applications.resnet', 'tensorflow.keras.applications.resnet50', 'tensorflow.keras.applications.resnet_v2', 'tensorflow.keras.applications.vgg16', 'tensorflow.keras.applications.vgg19', 'tensorflow.keras.applications.xception', 'tensorflow.keras.backend', 'tensorflow.keras.callbacks', 'tensorflow.keras.constraints', 'tensorflow.keras.datasets', 'tensorflow.keras.datasets.boston_housing', 'tensorflow.keras.datasets.cifar10', 'tensorflow.keras.datasets.cifar100', 'tensorflow.keras.datasets.fashion_mnist', 'tensorflow.keras.datasets.imdb', 'tensorflow.keras.datasets.mnist', 'tensorflow.keras.datasets.reuters', 'tensorflow.keras.estimator', 'tensorflow.keras.experimental', 'tensorflow.keras.initializers', 'tensorflow.keras.layers', 'tensorflow.keras.layers.experimental', 'tensorflow.keras.layers.experimental.preprocessing', 'tensorflow.keras.losses', 'tensorflow.keras.metrics', 'tensorflow.keras.mixed_precision', 'tensorflow.keras.mixed_precision.experimental', 'tensorflow.keras.models', 'tensorflow.keras.optimizers', 'tensorflow.keras.optimizers.schedules', 'tensorflow.keras.preprocessing', 'tensorflow.keras.preprocessing.image', 'tensorflow.keras.preprocessing.sequence', 'tensorflow.keras.preprocessing.text', 'tensorflow.keras.regularizers', 'tensorflow.keras.utils', 'tensorflow.keras.wrappers', 'tensorflow.keras.wrappers.scikit_learn', 'keras.utils.losses_utils', 'keras.utils.metrics_utils', 'keras.utils.layer_utils', 'keras.utils.vis_utils', 'keras.models', 'keras.engine', 'keras.engine.input_layer', 'keras.engine.base_layer', 'keras.initializers', 'keras.legacy', 'keras.legacy.interfaces', 'keras.engine.network', 'keras.engine.saving', 'keras.losses', 'keras.optimizers', 'keras.engine.training', 'keras.engine.training_utils', 'keras.metrics', 'keras.layers', 'keras.layers.merge', 'keras.layers.core', 'keras.activations', 'keras.regularizers', 'keras.constraints', 'keras.layers.convolutional', 'keras.layers.pooling', 'keras.legacy.layers', 'keras.layers.local', 'keras.layers.recurrent', 'keras.layers.cudnn_recurrent', 'keras.layers.normalization', 'keras.layers.embeddings', 'keras.layers.noise', 'keras.layers.advanced_activations', 'keras.layers.wrappers', 'keras.layers.convolutional_recurrent', 'keras.engine.training_arrays', 'keras.callbacks', 'keras.callbacks.callbacks', 'keras.callbacks.tensorboard_v2', 'keras.engine.training_generator', 'keras.engine.sequential', 'keras.utils.multi_gpu_utils', 'keras.applications', 'keras_applications', 'keras_applications.vgg16', 'keras_applications.imagenet_utils', 'keras_applications.vgg19', 'keras_applications.resnet50', 'keras_applications.inception_v3', 'keras_applications.inception_resnet_v2', 'keras_applications.xception', 'keras_applications.mobilenet', 'keras_applications.mobilenet_v2', 'keras_applications.densenet', 'keras_applications.nasnet', 'keras_applications.resnet', 'keras_applications.resnet_common', 'keras_applications.resnet_v2', 'keras_applications.resnext', 'keras.applications.vgg16', 'keras.applications.vgg19', 'keras.applications.resnet50', 'keras.applications.inception_v3', 'keras.applications.inception_resnet_v2', 'keras.applications.xception', 'keras.applications.mobilenet', 'keras.applications.mobilenet_v2', 'keras.applications.densenet', 'keras.applications.nasnet', 'keras.applications.resnet', 'keras.applications.resnet_v2', 'keras.datasets', 'keras.datasets.mnist', 'keras.datasets.imdb', 'keras.preprocessing', 'keras.preprocessing.image', 'keras.preprocessing.sequence', 'keras.preprocessing.text', 'keras.datasets.reuters', 'keras.datasets.cifar10', 'keras.datasets.cifar', 'keras.datasets.cifar100', 'keras.datasets.boston_housing', 'keras.datasets.fashion_mnist', 'keras.wrappers', 'keras.wrappers.scikit_learn', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from C:\Users\Chelovek\.matplotlib\fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib:CONFIGDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib:(private) matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:loaded rc file D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data\matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.1
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is win32
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_winapi', '_bootlocale', '_locale', 'encodings.cp1251', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'pywin32_bootstrap', 'glob', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'fnmatch', 'posixpath', 'numpy', '__future__', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'ctypes', '_ctypes', 'struct', '_struct', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', 'time', 'math', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'errno', 'urllib', 'urllib.parse', 'pickle', '_compat_pickle', '_pickle', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'collections.abc', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'subprocess', 'signal', 'threading', 'traceback', 'linecache', 'tokenize', 'token', '_weakrefset', 'msvcrt', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'ast', '_ast', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'weakref', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random._bit_generator', '_cython_0_29_17', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'tqdm', 'tqdm.std', 'tqdm.utils', 'socket', '_socket', 'selectors', 'select', 'colorama', 'colorama.initialise', 'atexit', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes.wintypes', 'unicodedata', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'logging', 'string', '_string', 'common', 'argparse', 'gettext', 'locale', 'librosa', 'librosa.version', 'librosa._cache', 'joblib', 'joblib.memory', 'pydoc', 'inspect', 'dis', 'opcode', '_opcode', 'pkgutil', 'joblib.hashing', 'joblib._compat', 'joblib.func_inspect', 'joblib.logger', 'pprint', 'joblib.disk', 'joblib._memory_helpers', 'joblib._store_backends', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'joblib.backports', 'distutils', 'distutils.version', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'tempfile', '_multiprocessing', 'joblib.format_stack', 'joblib.my_exceptions', 'joblib._parallel_backends', 'gc', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'uuid', 'multiprocessing.pool', 'queue', '_queue', 'multiprocessing.util', 'joblib.executor', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_win32', 'multiprocessing.popen_spawn_win32', 'multiprocessing.spawn', 'runpy', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._win_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'librosa.core', 'librosa.core.time_frequency', 'six', 'librosa.util', 'librosa.util.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'typing', 'typing.io', 'typing.re', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_cython_0_29_14', '_ni_label', 'scipy.ndimage.morphology', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'difflib', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy._lib._util', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'numba', 'numba._version', 'numba.core', 'numba.core.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'pkg_resources', 'zipfile', 'plistlib', 'xml', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources.py31compat', 'pkg_resources._vendor.appdirs', 'win32com', 'win32api', 'pythoncom', 'pywintypes', 'imp', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'copy', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'sysconfig', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.testing', 'numba.testing.main', 'cProfile', '_lsprof', 'profile', 'numba.testing.loader', 'numba.testing._runtests', 'numba.core.types', 'numba.core.utils', 'timeit', 'numba.core.types.abstract', 'numba.core.types.containers', 'numba.core.types.common', 'numba.core.types.misc', 'numba.core.typeconv', 'numba.core.typeconv.castgraph', 'numba.core.errors', 'numba.core.types.functions', 'numba.core.types.iterators', 'numba.core.types.npytypes', 'numba.core.types.scalars', 'numba.np', 'numba.np.npdatetime_helpers', 'numba.core.types.function_type', 'numba.misc', 'numba.misc.special', 'numba.core.typing', 'numba.core.typing.context', 'numba.core.typeconv.rules', 'numba.core.typeconv.typeconv', 'numba.core.typeconv._typeconv', 'numba.core.typing.templates', 'numba.core.cpu_options', 'numba.core.typing.typeof', 'numba.np.numpy_support', 'numba.core.cgutils', 'numba.core.datamodel', 'numba.core.datamodel.manager', 'numba.core.datamodel.packer', 'numba.core.datamodel.registry', 'numba.core.datamodel.models', 'numba.core.decorators', 'numba.stencils', 'numba.stencils.stencil', 'numba.core.ir', 'numba.core.consts', 'numba.core.ir_utils', 'numba.core.extending', 'numba.core.imputils', 'numba.core.pythonapi', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._helperlib', 'numba.core.lowering', 'numba._dynfunc', 'numba.core.debuginfo', 'numba.core.funcdesc', 'numba.core.itanium_mangler', 'numba.core.generators', 'numba.core.analysis', 'numba.core.controlflow', 'numba.core.postproc', 'numba.core.transforms', 'numba.core.rewrites', 'numba.core.rewrites.registry', 'numba.core.rewrites.static_getitem', 'numba.core.rewrites.static_raise', 'numba.core.rewrites.static_binop', 'numba.core.rewrites.ir_print', 'numba.core.rewrites.macros', 'numba.core.registry', 'numba.core.descriptors', 'numba.core.dispatcher', 'numba._dispatcher', 'numba.core.serialize', 'numba.core.bytecode', 'numba.core.compiler', 'numba.core.tracing', 'numba.core.interpreter', 'numba.core.dataflow', 'numba.core.byteflow', 'numba.core.unsafe', 'numba.core.unsafe.eh', 'numba.core.callconv', 'numba.core.base', 'numba.core.compiler_lock', 'numba.np.arrayobj', 'numba.misc.quicksort', 'numba.misc.mergesort', 'numba.cpython', 'numba.cpython.slicing', 'numba.cpython.unsafe', 'numba.cpython.unsafe.tuple', 'numba.cpython.builtins', 'numba.core.typing.builtins', 'numba.parfors', 'numba.parfors.parfor_lowering', 'numba.parfors.parfor', 'numba.core.typeinfer', 'numba.stencils.stencilparfor', 'numba.core.typing.npydecl', 'numba.parfors.array_analysis', 'numba.core.sigutils', 'numba.parfors.parfor_lowering_utils', 'numba.extending', 'numba.core.cpu', 'numba.core.callwrapper', 'numba.core.codegen', 'llvmlite.llvmpy.passes', 'numba.core.runtime', 'numba.core.runtime.nrt', 'numba.core.runtime.nrtdynmod', 'numba.core.runtime._nrt_python', 'numba.core.runtime.nrtopt', 'numba.misc.inspection', 'numba.core.externals', 'numba.core.intrinsics', 'numba.core.fastmathpass', 'numba.core.options', 'numba.core.entrypoints', 'numba.cpython.setobj', 'numba.cpython.listobj', 'numba.core.inline_closurecall', 'numba.cpython.rangeobj', 'numba.np.unsafe', 'numba.np.unsafe.ndarray', 'numba.core.compiler_machinery', 'numba.core.untyped_passes', 'numba.core.ssa', 'numba.core.typed_passes', 'numba.core.annotations', 'numba.core.annotations.type_annotations', 'numba.core.object_mode_passes', 'numba.core.pylowering', 'numba.core.caching', 'numba.misc.appdirs', 'numba.np.ufunc', 'numba.np.ufunc.decorators', 'numba.np.ufunc._internal', 'numba.np.ufunc.ufuncbuilder', 'numba.np.ufunc.sigparse', 'numba.np.ufunc.wrappers', 'numba.np.ufunc.parallel', 'numba.np.ufunc.dufunc', 'numba.np.ufunc.array_exprs', 'numba.experimental', 'numba.experimental.jitclass', 'numba.experimental.jitclass.decorators', 'numba.experimental.jitclass.base', 'numba.experimental.jitclass._box', 'numba.experimental.jitclass.boxing', 'numba.core.withcontexts', 'numba.cpython.charseq', 'numba.cpython.unicode', 'numba.cpython.hashing', 'numba.core.unsafe.bytes', 'numba.cpython.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.typed.dictobject', 'numba.typed.typedobjectutils', 'numba.core.boxing', 'numba.typed.dictimpl', 'numba.experimental.function_type', 'numba.core.ccallback', 'numba.core.typing.ctypes_utils', 'numba.typed.typedlist', 'numba.typed.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'decorator', 'numba.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy._lib.messagestream', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy._lib.decorator', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.integrate', 'scipy.integrate.quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.stats', 'scipy.stats.stats', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.stats._stats', 'scipy.stats._tukeylambda_stats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._rvs_sampling', 'scipy.stats._hypotests', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'sklearn.utils.fixes', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils.deprecation', 'sklearn.utils._estimator_html_repr', 'html', 'html.entities', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils.sparsefuncs', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'array', 'sklearn.utils.multiclass', 'sklearn.preprocessing._discretization', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'threadpoolctl', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'csv', '_csv', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'keras_model', 'keras', 'keras.utils', 'keras.utils.np_utils', 'keras.utils.generic_utils', 'keras.utils.data_utils', 'tarfile', 'six.moves', 'six.moves.urllib', 'six.moves.urllib.error', 'urllib.error', 'urllib.response', 'six.moves.urllib.request', 'urllib.request', 'http', 'http.client', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'nturl2path', 'keras.utils.io_utils', 'h5py', 'h5py._errors', 'h5py._hl', 'h5py._hl.compat', 'h5py.version', 'h5py.h5', '_cython_0_29_13', 'h5py.defs', 'h5py._objects', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.utils', 'h5py.h5py_warnings', 'h5py.h5z', 'h5py.h5a', 'h5py.h5s', 'h5py.h5p', 'h5py.h5ac', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl.filters', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'keras.utils.conv_utils', 'keras.backend', 'keras.backend.load_backend', 'keras.backend.common', 'keras.backend.tensorflow_backend', 'tensorflow', 'tensorflow.python', 'tensorflow.python.pywrap_tensorflow', 'tensorflow.python.platform', 'tensorflow.python.platform.self_check', 'tensorflow.python.platform.build_info', 'tensorflow.python.pywrap_dlopen_global_flags', 'tensorflow.python.pywrap_tensorflow_internal', 'swig_runtime_data4', '_pywrap_tensorflow_internal', 'tensorflow.core', 'tensorflow.core.framework', 'tensorflow.core.framework.graph_pb2', 'google.protobuf', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorflow.core.framework.function_pb2', 'tensorflow.core.framework.attr_value_pb2', 'tensorflow.core.framework.tensor_pb2', 'tensorflow.core.framework.resource_handle_pb2', 'tensorflow.core.framework.tensor_shape_pb2', 'google.protobuf.internal.well_known_types', 'tensorflow.core.framework.types_pb2', 'tensorflow.core.framework.node_def_pb2', 'tensorflow.core.framework.op_def_pb2', 'tensorflow.core.framework.versions_pb2', 'tensorflow.core.framework.summary_pb2', 'tensorflow.core.protobuf', 'tensorflow.core.protobuf.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorflow.core.protobuf.saved_object_graph_pb2', 'tensorflow.core.framework.variable_pb2', 'tensorflow.core.protobuf.struct_pb2', 'tensorflow.core.protobuf.trackable_object_graph_pb2', 'tensorflow.core.protobuf.saver_pb2', 'tensorflow.core.protobuf.config_pb2', 'tensorflow.core.framework.cost_graph_pb2', 'tensorflow.core.framework.step_stats_pb2', 'tensorflow.core.framework.allocation_description_pb2', 'tensorflow.core.framework.tensor_description_pb2', 'tensorflow.core.protobuf.cluster_pb2', 'tensorflow.core.protobuf.debug_pb2', 'tensorflow.core.protobuf.rewriter_config_pb2', 'tensorflow.core.protobuf.verifier_config_pb2', 'tensorflow.core.protobuf.tensorflow_server_pb2', 'tensorflow.core.protobuf.device_filters_pb2', 'tensorflow.core.util', 'tensorflow.core.util.event_pb2', 'tensorflow.python.framework', 'tensorflow.python.framework.framework_lib', 'tensorflow.python.framework.device', 'tensorflow.python.tf2', 'tensorflow.python.framework.device_spec', 'tensorflow.python.util', 'tensorflow.python.util.tf_export', 'tensorflow.python.util.tf_decorator', 'tensorflow.python.util.tf_stack', 'tensorflow.python._tf_stack', 'tensorflow.python.util.tf_inspect', 'tensorflow.python.framework.ops', 'tensorflow.python.pywrap_tfe', 'tensorflow.python._pywrap_tfe', 'tensorflow.python.client', 'tensorflow.python.client.pywrap_tf_session', 'tensorflow.python._pywrap_tf_session', 'tensorflow.python.eager', 'tensorflow.python.eager.context', 'absl', 'absl.logging', 'getpass', 'absl.flags', 'getopt', 'absl.flags._argument_parser', 'absl.flags._helpers', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'absl.flags._validators', 'absl.logging.converter', 'tensorflow.python.eager.executor', 'tensorflow.python.eager.monitoring', 'tensorflow.python.framework.c_api_util', 'tensorflow.core.framework.api_def_pb2', 'tensorflow.python.util.compat', 'tensorflow.python.util.tf_contextlib', 'tensorflow.python.util.is_in_graph_mode', 'tensorflow.python.eager.core', 'tensorflow.python.framework.errors', 'tensorflow.python.framework.errors_impl', 'tensorflow.core.lib', 'tensorflow.core.lib.core', 'tensorflow.core.lib.core.error_codes_pb2', 'tensorflow.core.protobuf.error_codes_pb2', 'tensorflow.python._pywrap_py_exception_registry', 'tensorflow.python.framework.error_interpolation', 'tensorflow.core.protobuf.graph_debug_info_pb2', 'tensorflow.python.util.deprecation', 'tensorflow.python.platform.tf_logging', 'tensorflow.python.util.decorator_utils', 'tensorflow.python.eager.tape', 'tensorflow.python.util.lazy_loader', 'tensorflow.python.framework.composite_tensor', 'tensorflow.python._pywrap_utils', 'tensorflow.python.util.nest', 'wrapt', 'wrapt.wrappers', 'wrapt._wrappers', 'wrapt.decorators', 'wrapt.importer', 'tensorflow.python.framework.dtypes', 'tensorflow.python._pywrap_bfloat16', 'tensorflow.python._dtypes', 'tensorflow.python.framework.indexed_slices', 'tensorflow.python.framework.tensor_conversion_registry', 'tensorflow.python.framework.tensor_like', 'tensorflow.python.framework.tensor_shape', 'tensorflow.python.framework.type_spec', 'tensorflow.python.framework.registry', 'tensorflow.python.framework.traceable_stack', 'tensorflow.python.framework.versions', 'tensorflow.python.ops', 'tensorflow.python.ops.control_flow_util', 'tensorflow.python.platform.app', 'absl.app', 'pdb', 'cmd', 'bdb', 'code', 'codeop', 'absl.command_name', 'faulthandler', 'tensorflow.python.platform.flags', 'tensorflow.python.util.function_utils', 'tensorflow.python.util.lock_util', 'tensorflow.python.util.memory', 'tensorflow.python.util.object_identity', 'tensorflow.python.framework.sparse_tensor', 'tensorflow.python.framework.constant_op', 'tensorflow.python.eager.execute', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'tensorflow.python.framework.tensor_util', 'tensorflow.python.framework.tensor_spec', 'tensorflow.python.framework.common_shapes', 'tensorflow.python.ops.gen_sparse_ops', 'tensorflow.python.framework.op_def_registry', 'tensorflow.python._op_def_registry', 'tensorflow.python.framework.op_def_library', 'tensorflow.python.framework.op_callbacks', 'tensorflow.python.util.dispatch', 'tensorflow.python.framework.random_seed', 'tensorflow.python.framework.importer', 'tensorflow.python.framework.function', 'tensorflow.python.framework.graph_to_function_def', 'tensorflow.python.ops.array_ops', 'tensorflow.python.ops.gen_array_ops', 'tensorflow.python.ops.gen_math_ops', 'tensorflow.python.ops.resource_variable_ops', 'tensorflow.python.framework.auto_control_deps_utils', 'tensorflow.python.framework.cpp_shape_inference_pb2', 'tensorflow.python.ops.gen_logging_ops', 'tensorflow.python.ops.gen_resource_variable_ops', 'tensorflow.python.ops.gen_state_ops', 'tensorflow.python.ops.math_ops', 'tensorflow.python.framework.graph_util', 'tensorflow.python.framework.graph_util_impl', 'tensorflow.python.ops.gen_data_flow_ops', 'tensorflow.python.ops.gen_nn_ops', 'tensorflow.python.ops.state_ops', 'tensorflow.python.ops.variables', 'tensorflow.python.ops.control_flow_ops', 'tensorflow.core.protobuf.control_flow_pb2', 'tensorflow.python.ops.gen_control_flow_ops', 'tensorflow.python.ops.tensor_array_ops', 'tensorflow.python.ops.list_ops', 'tensorflow.python.ops.gen_list_ops', 'tensorflow.python.util.tf_should_use', 'tensorflow.python.training', 'tensorflow.python.training.tracking', 'tensorflow.python.training.tracking.base', 'tensorflow.python.ops.gen_io_ops', 'tensorflow.python.training.saving', 'tensorflow.python.training.saving.saveable_object', 'tensorflow.python.ops.variable_scope', 'tensorflow.python.client.session', 'tensorflow.python.ops.session_ops', 'tensorflow.python.training.experimental', 'tensorflow.python.training.experimental.mixed_precision_global_state', 'tensorflow.python.ops.init_ops', 'tensorflow.python.ops.gen_linalg_ops', 'tensorflow.python.ops.linalg_ops_impl', 'tensorflow.python.ops.random_ops', 'tensorflow.python.ops.gen_random_ops', 'tensorflow.python.framework.load_library', 'tensorflow.python._pywrap_python_op_gen', 'tensorflow.python.lib', 'tensorflow.python.lib.io', 'tensorflow.python.lib.io.file_io', 'tensorflow.python._pywrap_file_io', 'tensorflow.python.framework.config', 'tensorflow.python.client.client_lib', 'tensorflow.python.ops.standard_ops', 'tensorflow.python.autograph', 'tensorflow.python.autograph.operators', 'tensorflow.python.autograph.operators.control_flow', 'tensorflow.python.autograph.operators.py_builtins', 'tensorflow.python.autograph.utils', 'tensorflow.python.autograph.utils.context_managers', 'tensorflow.python.autograph.utils.misc', 'tensorflow.python.autograph.utils.py_func', 'tensorflow.python.ops.script_ops', 'tensorflow.python._pywrap_py_func', 'tensorflow.python.eager.backprop', 'tensorflow.python.eager.backprop_util', 'tensorflow.python.eager.imperative_grad', 'tensorflow.python.ops.unconnected_gradients', 'tensorflow.python.ops.check_ops', 'tensorflow.python.ops.default_gradient', 'tensorflow.python.framework.func_graph', 'tensorflow.python.eager.graph_only_ops', 'tensorflow.python.framework.auto_control_deps', 'tensorflow.python.ops.custom_gradient', 'tensorflow.python.ops.op_selector', 'tensorflow.python.ops.gen_script_ops', 'tensorflow.python.autograph.utils.tensor_list', 'tensorflow.python.autograph.utils.testing', 'tensorflow.python.autograph.utils.type_check', 'tensorflow.python.autograph.utils.tensors', 'tensorflow.python.data', 'tensorflow.python.data.experimental', 'tensorflow.python.data.experimental.ops', 'tensorflow.python.data.experimental.ops.batching', 'tensorflow.python.data.ops', 'tensorflow.python.data.ops.dataset_ops', 'tensorflow.python.compat', 'tensorflow.python.compat.compat', 'tensorflow.python.data.experimental.ops.distribute_options', 'tensorflow.python.data.util', 'tensorflow.python.data.util.options', 'tensorflow.python.data.experimental.ops.optimization_options', 'tensorflow.python.data.experimental.ops.stats_options', 'tensorflow.python.data.experimental.ops.stats_aggregator', 'tensorflow.python.ops.gen_experimental_dataset_ops', 'tensorflow.python.ops.summary_ops_v2', 'tensorflow.python.eager.profiler', 'tensorflow.python._pywrap_events_writer', 'tensorflow.python.platform.gfile', 'tensorflow.python.profiler', 'tensorflow.python.profiler.internal', 'tensorflow.python.profiler.internal._pywrap_profiler', 'tensorflow.python.framework.smart_cond', 'tensorflow.python.ops.gen_summary_ops', 'tensorflow.python.ops.summary_op_util', 'tensorflow.python.training.training_util', 'tensorflow.python.framework.graph_io', 'tensorflow.python.data.experimental.ops.threading_options', 'tensorflow.python.data.ops.iterator_ops', 'tensorflow.python.data.ops.optional_ops', 'tensorflow.python.data.util.structure', 'tensorflow.python.data.util.nest', 'tensorflow.python.ops.ragged', 'tensorflow.python.ops.ragged.ragged_array_ops', 'tensorflow.python.ops.sort_ops', 'tensorflow.python.ops.nn_ops', 'tensorflow.python.platform.device_context', 'tensorflow.python.ops.ragged.ragged_functional_ops', 'tensorflow.python.ops.ragged.ragged_config', 'tensorflow.python.ops.ragged.ragged_tensor', 'tensorflow.python.ops.gen_ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_tensor_value', 'tensorflow.python.ops.ragged.ragged_util', 'tensorflow.python.ops.gen_ragged_math_ops', 'tensorflow.python.ops.ragged.segment_id_ops', 'tensorflow.python.ops.ragged.ragged_math_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_ops', 'tensorflow.python.ops.ragged.ragged_gather_ops', 'tensorflow.python.ops.gen_ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_with_default_op', 'tensorflow.python.ops.ragged.ragged_dispatch', 'tensorflow.python.ops.clip_ops', 'tensorflow.python.ops.data_flow_ops', 'tensorflow.python.lib.io.python_io', 'tensorflow.python.lib.io.tf_record', 'tensorflow.python._pywrap_record_io', 'tensorflow.python.ops.gen_bitwise_ops', 'tensorflow.python.ops.parsing_ops', 'tensorflow.python.ops.gen_parsing_ops', 'tensorflow.python.ops.parsing_config', 'tensorflow.python.ops.sparse_ops', 'tensorflow.python.ops.string_ops', 'tensorflow.python.ops.gen_string_ops', 'tensorflow.python.ops.ragged.ragged_concat_ops', 'tensorflow.python.ops.ragged.ragged_squeeze_op', 'tensorflow.python.ops.ragged.ragged_string_ops', 'tensorflow.python.ops.ragged.ragged_tensor_shape', 'tensorflow.python.ops.ragged.ragged_where_op', 'tensorflow.python.ops.ragged.ragged_operators', 'tensorflow.python.ops.ragged.ragged_getitem', 'tensorflow.python.ops.ragged.ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_factory_ops', 'tensorflow.python.ops.ragged.ragged_map_ops', 'tensorflow.python.ops.gen_dataset_ops', 'tensorflow.python.training.saver', 'tensorflow.python.framework.meta_graph', 'tensorflow.python.ops.io_ops', 'tensorflow.python.training.checkpoint_management', 'tensorflow.python.training.checkpoint_state_pb2', 'tensorflow.python.training.py_checkpoint_reader', 'tensorflow.python._pywrap_checkpoint_reader', 'tensorflow.python.training.saving.saveable_object_util', 'tensorflow.python.data.util.random_seed', 'tensorflow.python.data.util.traverse', 'tensorflow.python.eager.function', 'tensorflow.python.eager.forwardprop_util', 'tensorflow.python.ops.functional_ops', 'tensorflow.python.ops.gen_functional_ops', 'tensorflow.python.ops.gradients_util', 'tensorflow.python.ops.control_flow_state', 'tensorflow.python.ops.control_flow_v2_func_graphs', 'tensorflow.python.training.tracking.tracking', 'tensorflow.python.eager.def_function', 'tensorflow.python.eager.lift_to_graph', 'tensorflow.python.training.tracking.data_structures', 'tensorflow.python.saved_model', 'tensorflow.python.saved_model.revived_types', 'tensorflow.python.training.tracking.layer_utils', 'tensorflow.python.data.util.convert', 'tensorflow.python.data.experimental.ops.cardinality', 'tensorflow.python.data.experimental.ops.counter', 'tensorflow.python.data.experimental.ops.scan_ops', 'tensorflow.python.data.experimental.ops.enumerate_ops', 'tensorflow.python.data.experimental.ops.error_ops', 'tensorflow.python.data.experimental.ops.get_single_element', 'tensorflow.python.data.experimental.ops.grouping', 'tensorflow.python.data.experimental.ops.interleave_ops', 'tensorflow.python.data.experimental.ops.random_ops', 'tensorflow.python.data.ops.readers', 'tensorflow.python.ops.gen_stateless_random_ops', 'tensorflow.python.data.experimental.ops.iterator_ops', 'tensorflow.python.training.basic_session_run_hooks', 'tensorflow.python.client.timeline', 'tensorflow.python.training.session_run_hook', 'tensorflow.python.training.summary_io', 'tensorflow.python.summary', 'tensorflow.python.summary.summary_iterator', 'tensorflow.python.summary.writer', 'tensorflow.python.summary.writer.writer', 'tensorflow.python.summary.plugin_asset', 'tensorflow.python.summary.writer.event_file_writer', 'tensorflow.python.summary.writer.event_file_writer_v2', 'tensorflow.python.summary.writer.writer_cache', 'tensorflow.python.data.experimental.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.prefetching_ops', 'tensorflow.python.data.experimental.ops.readers', 'gzip', 'tensorflow.python.data.experimental.ops.resampling', 'tensorflow.python.ops.logging_ops', 'tensorflow.python.data.experimental.ops.shuffle_ops', 'tensorflow.python.data.experimental.ops.stats_ops', 'tensorflow.python.data.experimental.ops.take_while_ops', 'tensorflow.python.data.experimental.ops.unique', 'tensorflow.python.data.experimental.ops.writers', 'tensorflow.python.util.all_util', 'tensorflow.python.autograph.operators.special_values', 'tensorflow.python.autograph.utils.ag_logging', 'tensorflow.python.autograph.utils.compat_util', 'tensorflow.python.autograph.operators.data_structures', 'tensorflow.python.autograph.operators.exceptions', 'tensorflow.python.autograph.operators.logical', 'tensorflow.python.autograph.operators.slices', 'tensorflow.python.autograph.core', 'tensorflow.python.autograph.core.converter', 'tensorflow.python.autograph.pyct', 'tensorflow.python.autograph.pyct.anno', 'gast', 'gast.gast', 'gast.ast3', 'gast.astn', 'tensorflow.python.autograph.pyct.ast_util', 'tensorflow.python.autograph.pyct.parser', 'astunparse', 'astunparse.unparser', 'astunparse.printer', 'tensorflow.python.autograph.pyct.errors', 'tensorflow.python.autograph.pyct.inspect_utils', 'tensorflow.python.autograph.pyct.qual_names', 'tensorflow.python.autograph.pyct.cfg', 'tensorflow.python.autograph.pyct.templates', 'tensorflow.python.autograph.pyct.transformer', 'tensorflow.python.autograph.pyct.loader', 'tensorflow.python.autograph.pyct.origin_info', 'tensorflow.python.autograph.pyct.pretty_printer', 'termcolor', 'tensorflow.python.autograph.pyct.static_analysis', 'tensorflow.python.autograph.pyct.static_analysis.activity', 'tensorflow.python.autograph.pyct.static_analysis.annos', 'tensorflow.python.autograph.pyct.static_analysis.liveness', 'tensorflow.python.autograph.pyct.static_analysis.reaching_definitions', 'tensorflow.python.autograph.impl', 'tensorflow.python.autograph.impl.api', 'tensorflow.python.autograph.core.ag_ctx', 'tensorflow.python.autograph.impl.conversion', 'tensorflow.python.autograph.converters', 'tensorflow.python.autograph.converters.arg_defaults', 'tensorflow.python.autograph.converters.asserts', 'tensorflow.python.autograph.converters.break_statements', 'tensorflow.python.autograph.converters.call_trees', 'tensorflow.python.autograph.converters.conditional_expressions', 'tensorflow.python.autograph.converters.continue_statements', 'tensorflow.python.autograph.converters.control_flow', 'tensorflow.python.autograph.lang', 'tensorflow.python.autograph.lang.directives', 'tensorflow.python.autograph.converters.directives', 'tensorflow.python.autograph.converters.function_scopes', 'tensorflow.python.autograph.converters.lists', 'tensorflow.python.autograph.converters.logical_expressions', 'tensorflow.python.autograph.converters.return_statements', 'tensorflow.python.autograph.converters.slices', 'tensorflow.python.autograph.core.config', 'tensorflow.python.autograph.core.config_lib', 'tensorflow.python.autograph.core.function_wrappers', 'tensorflow.python.autograph.core.naming', 'tensorflow.python.autograph.core.unsupported_features_checker', 'tensorflow.python.autograph.lang.special_functions', 'tensorflow.python.autograph.pyct.error_utils', 'tensorflow.python.training.experimental.loss_scaling_gradient_tape', 'tensorflow.python.distribute', 'tensorflow.python.distribute.cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.cluster_resolver', 'tensorflow.python.training.server_lib', 'tensorflow.python.distribute.cluster_resolver.gce_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.kubernetes_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.slurm_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tfconfig_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver', 'tensorflow.python.tpu', 'tensorflow.python.tpu.client', 'tensorflow.python.tpu.client.client', 'tensorflow.python.distribute.cross_device_ops', 'tensorflow.python.client.device_lib', 'tensorflow.core.framework.device_attributes_pb2', 'tensorflow.python._pywrap_device_lib', 'tensorflow.python.distribute.collective_util', 'tensorflow.python.distribute.cross_device_utils', 'tensorflow.python.distribute.all_reduce', 'tensorflow.python.ops.nccl_ops', 'tensorflow.python.ops.gen_nccl_ops', 'tensorflow.python.distribute.values', 'tensorflow.python.distribute.device_util', 'tensorflow.python.distribute.distribute_lib', 'tensorflow.python.distribute.distribution_strategy_context', 'tensorflow.python.distribute.numpy_dataset', 'tensorflow.python.distribute.reduce_util', 'tensorflow.python.ops.losses', 'tensorflow.python.ops.losses.loss_reduction', 'tensorflow.python.ops.losses.losses_impl', 'tensorflow.python.ops.confusion_matrix', 'tensorflow.python.ops.nn', 'tensorflow.python.ops.ctc_ops', 'tensorflow.python.ops.gen_ctc_ops', 'tensorflow.python.ops.inplace_ops', 'tensorflow.python.ops.linalg_ops', 'tensorflow.python.ops.map_fn', 'tensorflow.python.ops.nn_grad', 'tensorflow.python.ops.embedding_ops', 'tensorflow.python.ops.data_flow_grad', 'tensorflow.python.ops.nn_impl', 'tensorflow.python.ops.candidate_sampling_ops', 'tensorflow.python.ops.gen_candidate_sampling_ops', 'tensorflow.python.ops.losses.util', 'tensorflow.python.ops.weights_broadcast_ops', 'tensorflow.python.ops.sets', 'tensorflow.python.ops.sets_impl', 'tensorflow.python.ops.gen_set_ops', 'tensorflow.tools', 'tensorflow.tools.docs', 'tensorflow.tools.docs.doc_controls', 'tensorflow.python.ops.collective_ops', 'tensorflow.python.ops.gen_collective_ops', 'tensorflow.python.distribute.tpu_values', 'tensorflow.python.tpu.tpu', 'tensorflow.core.protobuf.tpu', 'tensorflow.core.protobuf.tpu.dynamic_padding_pb2', 'tensorflow.python.compiler', 'tensorflow.python.compiler.xla', 'tensorflow.python.compiler.xla.jit', 'tensorflow.python.compiler.xla.xla', 'tensorflow.compiler', 'tensorflow.compiler.jit', 'tensorflow.compiler.jit.ops', 'tensorflow.compiler.jit.ops.xla_ops', 'tensorflow.compiler.jit.ops.xla_ops_grad', 'tensorflow.python.distribute.summary_op_util', 'tensorflow.python.tpu.tpu_function', 'tensorflow.python.tpu.ops', 'tensorflow.python.tpu.ops.tpu_ops', 'tensorflow.python.ops.gen_tpu_ops', 'tensorflow.python.framework.kernels', 'tensorflow.core.framework.kernel_def_pb2', 'tensorflow.python.distribute.mirrored_strategy', 'tensorflow.python.distribute.input_lib', 'tensorflow.python.data.experimental.ops.distribute', 'tensorflow.python.data.ops.multi_device_iterator_ops', 'tensorflow.python.distribute.input_ops', 'tensorflow.python.distribute.multi_worker_util', 'tensorflow.python.distribute.distribute_coordinator_context', 'tensorflow.python.distribute.shared_variable_creator', 'tensorflow.python.training.coordinator', 'tensorflow.python.distribute.one_device_strategy', 'tensorflow.python.distribute.experimental', 'tensorflow.python.distribute.central_storage_strategy', 'tensorflow.python.distribute.parameter_server_strategy', 'tensorflow.python.training.device_setter', 'tensorflow.python.distribute.collective_all_reduce_strategy', 'tensorflow.python.distribute.tpu_strategy', 'tensorflow.compiler.xla', 'tensorflow.compiler.xla.experimental', 'tensorflow.compiler.xla.experimental.xla_sharding', 'tensorflow.compiler.xla.experimental.xla_sharding.xla_sharding', 'tensorflow.compiler.tf2xla', 'tensorflow.compiler.tf2xla.python', 'tensorflow.compiler.tf2xla.python.xla', 'tensorflow.compiler.tf2xla.ops', 'tensorflow.compiler.tf2xla.ops.gen_xla_ops', 'tensorflow.python.ops.bitwise_ops', 'tensorflow.compiler.xla.xla_data_pb2', 'tensorflow.python.tpu.device_assignment', 'tensorflow.python.tpu.topology', 'tensorflow.core.protobuf.tpu.topology_pb2', 'tensorflow.python.tpu.tpu_strategy_util', 'tensorflow.python.tpu.tpu_system_metadata', 'tensorflow.python.tpu.training_loop', 'tensorflow.python.tpu.tensor_tracer', 'tensorflow.python.platform.analytics', 'tensorflow.python.tpu.tensor_tracer_flags', 'tensorflow.python.tpu.tensor_tracer_report', 'tensorflow.python.tpu.tensor_tracer_pb2', 'tensorflow.python.training.experimental.loss_scale', 'tensorflow.python.ops.array_grad', 'tensorflow.python.ops.cudnn_rnn_grad', 'tensorflow.python.ops.gen_cudnn_rnn_ops', 'tensorflow.python.ops.manip_grad', 'tensorflow.python.ops.manip_ops', 'tensorflow.python.ops.gen_manip_ops', 'tensorflow.python.ops.math_grad', 'tensorflow.python.ops.random_grad', 'tensorflow.python.ops.rnn_grad', 'tensorflow.python.ops.gen_rnn_ops', 'tensorflow.python.ops.sparse_grad', 'tensorflow.python.ops.state_grad', 'tensorflow.python.ops.tensor_array_grad', 'tensorflow.python.ops.special_math_ops', 'opt_einsum', 'opt_einsum.blas', 'opt_einsum.helpers', 'opt_einsum.parser', 'opt_einsum.paths', 'opt_einsum.path_random', 'opt_einsum.contract', 'opt_einsum.backends', 'opt_einsum.backends.cupy', 'opt_einsum.sharing', 'opt_einsum.backends.dispatch', 'opt_einsum.backends.jax', 'opt_einsum.backends.tensorflow', 'opt_einsum.backends.theano', 'opt_einsum.backends.torch', 'opt_einsum._version', 'tensorflow.python.ops.gen_special_math_ops', 'tensorflow.python.eager.wrap_function', 'tensorflow.python.saved_model.nested_structure_coder', 'tensorflow.python.ops.batch_ops', 'tensorflow.python.ops.gen_batch_ops', 'tensorflow.python.ops.critical_section_ops', 'tensorflow.python.ops.gradients', 'tensorflow.python.eager.forwardprop', 'tensorflow.python.ops.gradients_impl', 'tensorflow.python.ops.control_flow_grad', 'tensorflow.python.ops.image_grad', 'tensorflow.python.ops.gen_image_ops', 'tensorflow.python.ops.linalg_grad', 'tensorflow.python.ops.linalg', 'tensorflow.python.ops.linalg.linalg_impl', 'tensorflow.python.ops.optional_grad', 'tensorflow.python.ops.histogram_ops', 'tensorflow.python.ops.lookup_ops', 'tensorflow.python.ops.gen_lookup_ops', 'tensorflow.python.ops.numerics', 'tensorflow.python.ops.partitioned_variables', 'tensorflow.python.ops.proto_ops', 'tensorflow.python.ops.gen_decode_proto_ops', 'tensorflow.python.ops.gen_encode_proto_ops', 'tensorflow.python.ops.stateless_random_ops', 'tensorflow.python.ops.template', 'tensorflow.python.training.tracking.util', 'tensorflow.python.training.saving.functional_saver', 'tensorflow.python.training.saving.saveable_hook', 'tensorflow.python.training.tracking.graph_view', 'tensorflow.python.training.optimizer', 'tensorflow.python.training.slot_creator', 'tensorflow.python.ops.parallel_for', 'tensorflow.python.ops.parallel_for.control_flow_ops', 'tensorflow.python.ops.parallel_for.pfor', 'tensorflow.python.ops.gen_spectral_ops', 'tensorflow.python.ops.parallel_for.gradients', 'tensorflow.python.compiler.tensorrt', 'tensorflow.python.compiler.tensorrt.trt_convert_windows', 'tensorflow.python.ops.initializers_ns', 'tensorflow.python.keras', 'tensorflow.python.keras.models', 'tensorflow.python.keras.backend', 'tensorflow.python.distribute.distribute_coordinator', 'tensorflow.python.training.monitored_session', 'tensorflow.python.ops.resources', 'tensorflow.python.summary.summary', 'google.protobuf.json_format', 'tensorflow.python.training.queue_runner', 'tensorflow.python.training.queue_runner_impl', 'tensorflow.core.protobuf.queue_runner_pb2', 'tensorflow.python.training.session_manager', 'tensorflow.python.keras.backend_config', 'tensorflow.python.ops.image_ops', 'tensorflow.python.ops.image_ops_impl', 'tensorflow.python.training.moving_averages', 'tensorflow.python.keras.metrics', 'tensorflow.python.keras.engine', 'tensorflow.python.keras.engine.base_layer', 'tensorflow.python.keras.constraints', 'tensorflow.python.keras.utils', 'tensorflow.python.keras.utils.generic_utils', 'tensorflow.python.keras.initializers', 'tensorflow.python.ops.init_ops_v2', 'tensorflow.python.keras.regularizers', 'tensorflow.python.keras.engine.base_layer_utils', 'tensorflow.python.keras.engine.input_spec', 'tensorflow.python.keras.engine.node', 'tensorflow.python.keras.mixed_precision', 'tensorflow.python.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.autocast_variable', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale_optimizer', 'tensorflow.python.keras.optimizers', 'tensorflow.python.keras.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.adadelta', 'tensorflow.python.keras.optimizer_v2.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.learning_rate_schedule', 'tensorflow.python.keras.utils.tf_utils', 'tensorflow.python.training.training_ops', 'tensorflow.python.training.gen_training_ops', 'tensorflow.python.keras.optimizer_v2.adagrad', 'tensorflow.python.keras.optimizer_v2.adam', 'tensorflow.python.keras.optimizer_v2.adamax', 'tensorflow.python.keras.optimizer_v2.ftrl', 'tensorflow.python.keras.optimizer_v2.gradient_descent', 'tensorflow.python.keras.optimizer_v2.nadam', 'tensorflow.python.keras.optimizer_v2.rmsprop', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale', 'tensorflow.python.keras.mixed_precision.experimental.policy', 'tensorflow.python.keras.mixed_precision.experimental.device_compatibility_check', 'tensorflow.python.framework.gpu_util', 'tensorflow.python.keras.saving', 'tensorflow.python.keras.saving.saved_model', 'tensorflow.python.keras.saving.saved_model.layer_serialization', 'tensorflow.python.keras.saving.saved_model.base_serialization', 'tensorflow.python.keras.saving.saved_model.json_utils', 'tensorflow.python.util.serialization', 'tensorflow.python.keras.saving.saved_model.constants', 'tensorflow.python.keras.saving.saved_model.save_impl', 'tensorflow.python.keras.saving.saving_utils', 'tensorflow.python.keras.losses', 'tensorflow.python.keras.utils.losses_utils', 'tensorflow.python.keras.utils.io_utils', 'tensorflow.python.keras.saving.saved_model.load', 'tensorflow.python.keras.saving.saved_model.utils', 'tensorflow.python.keras.saving.saved_model.serialized_attributes', 'tensorflow.python.keras.utils.metrics_utils', 'tensorflow.python.saved_model.load', 'tensorflow.python.saved_model.function_deserialization', 'tensorflow.python.framework.function_def_to_graph', 'tensorflow.python.saved_model.load_v1_in_v2', 'tensorflow.python.saved_model.loader_impl', 'tensorflow.core.protobuf.saved_model_pb2', 'tensorflow.python.saved_model.constants', 'tensorflow.python.saved_model.signature_def_utils', 'tensorflow.python.saved_model.signature_def_utils_impl', 'tensorflow.python.saved_model.signature_constants', 'tensorflow.python.saved_model.utils_impl', 'tensorflow.python.saved_model.signature_serialization', 'tensorflow.python.saved_model.function_serialization', 'tensorflow.python.keras.utils.layer_utils', 'tensorflow.python.keras.utils.conv_utils', 'tensorflow.python.keras.utils.version_utils', 'tensorflow.python.module', 'tensorflow.python.module.module', 'tensorflow.python.keras.saving.saved_model.metric_serialization', 'tensorflow.python.keras.engine.network', 'tensorflow.python.keras.engine.compile_utils', 'tensorflow.python.keras.engine.input_layer', 'tensorflow.python.keras.distribute', 'tensorflow.python.keras.distribute.distributed_training_utils', 'tensorflow.python.keras.callbacks', 'tensorflow.python.distribute.distributed_file_utils', 'tensorflow.python.keras.distribute.multi_worker_training_state', 'tensorflow.python.keras.utils.mode_keys', 'tensorflow.python.saved_model.model_utils', 'tensorflow.python.saved_model.model_utils.export_output', 'tensorflow.python.saved_model.model_utils.export_utils', 'tensorflow.python.saved_model.tag_constants', 'tensorflow.python.saved_model.model_utils.mode_keys', 'tensorflow.python.keras.utils.data_utils', 'multiprocessing.dummy', 'multiprocessing.dummy.connection', 'tensorflow.python.profiler.profiler_v2', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'mimetypes', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'tensorflow.python.keras.engine.training_utils', 'tensorflow.python.framework.composite_tensor_utils', 'tensorflow.python.keras.saving.hdf5_format', 'tensorflow.python.keras.saving.model_config', 'tensorflow.python.keras.saving.save', 'tensorflow.python.keras.saving.saved_model.save', 'tensorflow.python.saved_model.save', 'tensorflow.python.saved_model.builder_impl', 'tensorflow.python.saved_model.save_options', 'tensorflow.python.keras.saving.saved_model.network_serialization', 'tensorflow.python.keras.engine.sequential', 'tensorflow.python.keras.layers', 'tensorflow.python.keras.engine.base_preprocessing_layer', 'tensorflow.python.keras.engine.training_generator', 'tensorflow.python.keras.layers.preprocessing', 'tensorflow.python.keras.layers.preprocessing.image_preprocessing', 'tensorflow.python.ops.stateful_random_ops', 'tensorflow.python.ops.gen_stateful_random_ops', 'tensorflow.python.keras.layers.preprocessing.normalization', 'tensorflow.python.keras.layers.preprocessing.normalization_v1', 'tensorflow.python.keras.engine.base_preprocessing_layer_v1', 'tensorflow.python.keras.layers.preprocessing.text_vectorization', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding', 'tensorflow.python.keras.layers.preprocessing.index_lookup', 'tensorflow.python.keras.layers.preprocessing.text_vectorization_v1', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding_v1', 'tensorflow.python.keras.layers.preprocessing.index_lookup_v1', 'tensorflow.python.keras.layers.advanced_activations', 'tensorflow.python.keras.layers.convolutional', 'tensorflow.python.keras.activations', 'tensorflow.python.keras.layers.pooling', 'tensorflow.python.keras.layers.core', 'tensorflow.python.keras.layers.dense_attention', 'tensorflow.python.keras.layers.embeddings', 'tensorflow.python.keras.layers.local', 'tensorflow.python.keras.layers.merge', 'tensorflow.python.keras.layers.noise', 'tensorflow.python.keras.layers.normalization', 'tensorflow.python.keras.layers.normalization_v2', 'tensorflow.python.keras.layers.kernelized', 'tensorflow.python.keras.layers.recurrent', 'tensorflow.python.keras.layers.recurrent_v2', 'tensorflow.python.keras.layers.convolutional_recurrent', 'tensorflow.python.keras.layers.cudnn_recurrent', 'tensorflow.python.keras.layers.wrappers', 'tensorflow.python.keras.layers.rnn_cell_wrapper_v2', 'tensorflow.python.ops.rnn_cell_wrapper_impl', 'tensorflow.python.keras.layers.serialization', 'tensorflow.python.keras.engine.training', 'tensorflow.python.keras.engine.data_adapter', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'dateutil', 'dateutil._version', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'dateutil.relativedelta', 'dateutil._common', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'tensorflow.python.keras.saving.saved_model.model_serialization', 'tensorflow.python.profiler.traceme', 'tensorflow.python.profiler.internal._pywrap_traceme', 'tensorflow.python.keras.engine.training_v1', 'tensorflow.python.keras.engine.training_arrays', 'tensorflow.python.keras.engine.training_distributed', 'tensorflow.python.keras.engine.partial_batch_padding_handler', 'tensorflow.python.keras.engine.training_eager', 'tensorflow.python.feature_column', 'tensorflow.python.feature_column.feature_column_lib', 'tensorflow.python.feature_column.dense_features_v2', 'tensorflow.python.feature_column.dense_features', 'tensorflow.python.feature_column.feature_column_v2', 'tensorflow.python.feature_column.feature_column', 'tensorflow.python.feature_column.utils', 'tensorflow.python.layers', 'tensorflow.python.layers.base', 'tensorflow.python.training.checkpoint_utils', 'tensorflow.python.feature_column.sequence_feature_column', 'tensorflow.python.feature_column.serialization', 'tensorflow.python.layers.layers', 'tensorflow.python.layers.core', 'tensorflow.python.layers.convolutional', 'tensorflow.python.layers.pooling', 'tensorflow.python.layers.normalization', 'tensorflow.python.ops.gradient_checker_v2', 'tensorflow.python.ops.metrics', 'tensorflow.python.ops.metrics_impl', 'tensorflow.python.ops.distributions', 'tensorflow.python.ops.distributions.distributions', 'tensorflow.python.ops.distributions.bernoulli', 'tensorflow.python.ops.distributions.distribution', 'tensorflow.python.ops.distributions.kullback_leibler', 'tensorflow.python.ops.distributions.util', 'tensorflow.python.ops.distributions.beta', 'tensorflow.python.ops.distributions.categorical', 'tensorflow.python.ops.distributions.dirichlet', 'tensorflow.python.ops.distributions.dirichlet_multinomial', 'tensorflow.python.ops.distributions.exponential', 'tensorflow.python.ops.distributions.gamma', 'tensorflow.python.ops.distributions.laplace', 'tensorflow.python.ops.distributions.special_math', 'tensorflow.python.ops.distributions.multinomial', 'tensorflow.python.ops.distributions.normal', 'tensorflow.python.ops.distributions.student_t', 'tensorflow.python.ops.distributions.uniform', 'tensorflow.python.ops.linalg.linalg', 'tensorflow.python.ops.linalg.adjoint_registrations', 'tensorflow.python.ops.linalg.linear_operator', 'tensorflow.python.ops.linalg.linear_operator_algebra', 'tensorflow.python.ops.linalg.linear_operator_util', 'tensorflow.python.ops.linalg.linear_operator_adjoint', 'tensorflow.python.ops.linalg.linear_operator_block_diag', 'tensorflow.python.ops.linalg.linear_operator_circulant', 'tensorflow.python.ops.signal', 'tensorflow.python.ops.signal.fft_ops', 'tensorflow.python.ops.linalg.linear_operator_diag', 'tensorflow.python.ops.linalg.linear_operator_householder', 'tensorflow.python.ops.linalg.linear_operator_identity', 'tensorflow.python.ops.linalg.linear_operator_kronecker', 'tensorflow.python.ops.linalg.cholesky_registrations', 'tensorflow.python.ops.linalg.linear_operator_lower_triangular', 'tensorflow.python.ops.linalg.inverse_registrations', 'tensorflow.python.ops.linalg.linear_operator_addition', 'tensorflow.python.ops.linalg.linear_operator_full_matrix', 'tensorflow.python.ops.linalg.linear_operator_block_lower_triangular', 'tensorflow.python.ops.linalg.linear_operator_inversion', 'tensorflow.python.ops.linalg.matmul_registrations', 'tensorflow.python.ops.linalg.linear_operator_composition', 'tensorflow.python.ops.linalg.linear_operator_zeros', 'tensorflow.python.ops.linalg.registrations_util', 'tensorflow.python.ops.linalg.solve_registrations', 'tensorflow.python.ops.linalg.linear_operator_low_rank_update', 'tensorflow.python.ops.linalg.linear_operator_permutation', 'tensorflow.python.ops.linalg.linear_operator_toeplitz', 'tensorflow.python.ops.linalg.linear_operator_tridiag', 'tensorflow.python.ops.linalg.sparse', 'tensorflow.python.ops.linalg.sparse.sparse', 'tensorflow.python.ops.linalg.sparse.conjugate_gradient', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_grad', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_ops', 'tensorflow.python.ops.linalg.sparse.gen_sparse_csr_matrix_ops', 'tensorflow.python.ops.losses.losses', 'tensorflow.python.ops.signal.signal', 'tensorflow.python.ops.signal.dct_ops', 'tensorflow.python.ops.signal.mel_ops', 'tensorflow.python.ops.signal.shape_ops', 'tensorflow.python.ops.signal.util_ops', 'tensorflow.python.ops.signal.mfcc_ops', 'tensorflow.python.ops.signal.reconstruction_ops', 'tensorflow.python.ops.signal.spectral_ops', 'tensorflow.python.ops.signal.window_ops', 'tensorflow.python.profiler.profiler', 'tensorflow.core.profiler', 'tensorflow.core.profiler.tfprof_log_pb2', 'tensorflow.core.profiler.tfprof_output_pb2', 'tensorflow.python.profiler.model_analyzer', 'tensorflow.core.profiler.tfprof_options_pb2', 'tensorflow.python._pywrap_tfprof', 'tensorflow.python.profiler.option_builder', 'tensorflow.python.profiler.tfprof_logger', 'tensorflow.python.profiler.internal.flops_registry', 'tensorflow.python.profiler.profiler_client', 'tensorflow.python.saved_model.saved_model', 'tensorflow.python.saved_model.builder', 'tensorflow.python.saved_model.loader', 'tensorflow.python.saved_model.main_op', 'tensorflow.python.saved_model.main_op_impl', 'tensorflow.python.saved_model.method_name_updater', 'tensorflow.python.saved_model.utils', 'tensorflow.python.saved_model.simple_save', 'tensorflow.python.tpu.api', 'tensorflow.python.tpu.bfloat16', 'tensorflow.python.tpu.feature_column_v2', 'tensorflow.python.tpu.feature_column', 'tensorflow.python.tpu.tpu_embedding', 'tensorflow.core.protobuf.tpu.optimization_parameters_pb2', 'google.protobuf.wrappers_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_output_layout_pb2', 'tensorflow.python.tpu.tpu_optimizer', 'tensorflow.python.user_ops', 'tensorflow.python.user_ops.user_ops', 'tensorflow.python.ops.gen_user_ops', 'tensorflow.python.ops.gen_audio_ops', 'tensorflow.python.ops.gen_boosted_trees_ops', 'tensorflow.python.ops.gen_sendrecv_ops', 'tensorflow.python.training.training', 'tensorflow.python.ops.sdca_ops', 'tensorflow.python.ops.gen_sdca_ops', 'tensorflow.python.training.adadelta', 'tensorflow.python.training.adagrad', 'tensorflow.python.training.adagrad_da', 'tensorflow.python.training.proximal_adagrad', 'tensorflow.python.training.adam', 'tensorflow.python.training.ftrl', 'tensorflow.python.training.experimental.loss_scale_optimizer', 'tensorflow.python.training.experimental.mixed_precision', 'tensorflow.python.training.momentum', 'tensorflow.python.training.rmsprop', 'tensorflow.python.training.gradient_descent', 'tensorflow.python.training.proximal_gradient_descent', 'tensorflow.python.training.sync_replicas_optimizer', 'tensorflow.python.training.input', 'tensorflow.python.layers.utils', 'tensorflow.python.training.basic_loops', 'tensorflow.python.training.tracking.python_state', 'tensorflow.python.training.supervisor', 'tensorflow.python.training.warm_starting_util', 'tensorflow.python.training.checkpoint_ops', 'tensorflow.python.ops.gen_checkpoint_ops', 'tensorflow.core.example', 'tensorflow.core.example.example_pb2', 'tensorflow.core.example.feature_pb2', 'tensorflow.python.training.learning_rate_decay', 'tensorflow.python.training.quantize_training', 'tensorflow.python._pywrap_quantize_training', 'tensorflow.python.platform.resource_loader', 'tensorflow.python.platform.sysconfig', 'tensorflow.python.platform.test', 'tensorflow.python.framework.test_util', 'absl.testing', 'absl.testing.parameterized', 'absl.testing.absltest', 'shlex', 'absl._enum_module', 'absl.testing._pretty_print_reporter', 'absl.third_party', 'absl.third_party.unittest3_backport', 'absl.third_party.unittest3_backport.case', 'absl.third_party.unittest3_backport.result', 'absl.testing.xml_reporter', 'xml.sax', 'xml.sax.xmlreader', 'xml.sax.handler', 'xml.sax._exceptions', 'xml.sax.saxutils', 'unittest.mock', 'tensorflow.python._pywrap_stacktrace_handler', 'tensorflow.python._pywrap_util_port', 'tensorflow.python.ops.control_flow_util_v2', 'tensorflow.python.platform.googletest', 'tensorflow.python.platform.benchmark', 'tensorflow.core.util.test_log_pb2', 'tensorflow.python.util.protobuf', 'tensorflow.python.util.protobuf.compare', 'tensorflow.python.ops.gradient_checker', 'tensorflow.python.compat.v2_compat', 'tensorflow.python.ops.control_flow_v2_toggles', 'tensorflow.python.eager.remote', 'tensorflow.python.platform.remote_utils', 'tensorflow.python.ops.rnn', 'tensorflow.python.ops.rnn_cell_impl', 'tensorflow.python.ops.rnn_cell', 'tensorflow.python.debug', 'tensorflow.python.debug.lib', 'tensorflow.python.debug.lib.debug_data', 'tensorflow.python.debug.lib.debug_graphs', 'tensorflow.python.debug.lib.debug_gradients', 'tensorflow.python.debug.lib.debug_utils', 'tensorflow.python.debug.wrappers', 'tensorflow.python.debug.wrappers.dumping_wrapper', 'tensorflow.python.debug.wrappers.framework', 'tensorflow.python.debug.wrappers.grpc_wrapper', 'tensorflow.python.debug.lib.common', 'tensorflow.python.debug.wrappers.hooks', 'tensorflow.python.debug.wrappers.local_cli_wrapper', 'tensorflow.python.debug.cli', 'tensorflow.python.debug.cli.analyzer_cli', 'tensorflow.python.debug.cli.cli_config', 'tensorflow.python.debug.cli.debugger_cli_common', 'tensorflow.python.debug.cli.cli_shared', 'tensorflow.python.debug.cli.command_parser', 'tensorflow.python.debug.cli.tensor_format', 'tensorflow.python.debug.cli.evaluator', 'tensorflow.python.debug.cli.ui_factory', 'tensorflow.python.debug.lib.source_utils', 'tensorflow.python.debug.lib.profiling', 'tensorflow.python.debug.cli.profile_analyzer_cli', 'tensorflow.python.debug.lib.check_numerics_callback', 'tensorflow.core.protobuf.debug_event_pb2', 'tensorflow.python.debug.lib.op_callbacks_common', 'tensorflow.python.ops.gen_debug_ops', 'tensorflow.python.debug.lib.dumping_callback', 'tensorflow.python.debug.lib.debug_events_writer', 'tensorflow.python._pywrap_debug_events_writer', 'tensorflow.python.dlpack', 'tensorflow.python.dlpack.dlpack', 'tensorflow.python.compiler.mlir', 'tensorflow.python.compiler.mlir.mlir', 'tensorflow.python.pywrap_mlir', 'tensorflow.python._pywrap_mlir', 'tensorflow.python.tools', 'tensorflow.python.tools.module_util', 'tensorflow._api', 'tensorflow._api.v2', 'tensorflow._api.v2.audio', 'tensorflow._api.v2.autodiff', 'tensorflow._api.v2.autograph', 'tensorflow._api.v2.autograph.experimental', 'tensorflow._api.v2.bitwise', 'tensorflow._api.v2.compat', 'tensorflow._api.v2.compat.v1', 'tensorflow._api.v2.compat.v1.app', 'tensorflow._api.v2.compat.v1.audio', 'tensorflow._api.v2.compat.v1.autograph', 'tensorflow._api.v2.compat.v1.autograph.experimental', 'tensorflow._api.v2.compat.v1.bitwise', 'tensorflow._api.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v1.compat.v1', 'tensorflow._api.v2.compat.v1.compat.v1.compat', 'tensorflow._api.v2.compat.v1.config', 'tensorflow._api.v2.compat.v1.config.experimental', 'tensorflow._api.v2.compat.v1.config.optimizer', 'tensorflow._api.v2.compat.v1.config.threading', 'tensorflow._api.v2.compat.v1.data', 'tensorflow._api.v2.compat.v1.data.experimental', 'tensorflow._api.v2.compat.v1.debugging', 'tensorflow._api.v2.compat.v1.debugging.experimental', 'tensorflow._api.v2.compat.v1.distribute', 'tensorflow._api.v2.compat.v1.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v1.distribute.experimental', 'tensorflow._api.v2.compat.v1.distributions', 'tensorflow._api.v2.compat.v1.dtypes', 'tensorflow._api.v2.compat.v1.errors', 'tensorflow._api.v2.compat.v1.experimental', 'tensorflow._api.v2.compat.v1.feature_column', 'tensorflow._api.v2.compat.v1.gfile', 'tensorflow._api.v2.compat.v1.graph_util', 'tensorflow._api.v2.compat.v1.image', 'tensorflow._api.v2.compat.v1.initializers', 'tensorflow._api.v2.compat.v1.io', 'tensorflow._api.v2.compat.v1.io.gfile', 'tensorflow._api.v2.compat.v1.layers', 'tensorflow._api.v2.compat.v1.layers.experimental', 'tensorflow._api.v2.compat.v1.linalg', 'tensorflow._api.v2.compat.v1.linalg.experimental', 'tensorflow._api.v2.compat.v1.lite', 'tensorflow._api.v2.compat.v1.lite.constants', 'tensorflow.lite', 'tensorflow.lite.python', 'tensorflow.lite.python.lite_constants', 'tensorflow.lite.toco', 'tensorflow.lite.toco.toco_flags_pb2', 'tensorflow.lite.toco.types_pb2', 'tensorflow._api.v2.compat.v1.lite.experimental', 'tensorflow._api.v2.compat.v1.lite.experimental.nn', 'tensorflow.lite.python.lite', 'tensorflow.lite.experimental', 'tensorflow.lite.experimental.examples', 'tensorflow.lite.experimental.examples.lstm', 'tensorflow.lite.experimental.examples.lstm.rnn', 'tensorflow.lite.python.op_hint', 'tensorflow.lite.experimental.examples.lstm.rnn_cell', 'tensorflow.lite.experimental.microfrontend', 'tensorflow.lite.experimental.microfrontend.python', 'tensorflow.lite.experimental.microfrontend.python.ops', 'tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op', 'tensorflow.lite.experimental.microfrontend.ops', 'tensorflow.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op', '0294638c8bf50491b025b096f3dba0a1', 'tensorflow.lite.experimental.tensorboard', 'tensorflow.lite.experimental.tensorboard.ops_util', 'tensorflow.lite.python.wrap_toco', 'tensorflow.python._pywrap_toco_api', 'tensorflow.lite.python.convert', 'distutils.spawn', 'distutils.errors', 'distutils.debug', 'distutils.log', 'tensorflow.lite.python.util', 'tensorflow.python.framework.convert_to_constants', 'tensorflow.python.grappler', 'tensorflow.python.grappler.tf_optimizer', 'tensorflow.python._pywrap_tf_optimizer', 'tensorflow.python.grappler.cluster', 'tensorflow.core.grappler', 'tensorflow.core.grappler.costs', 'tensorflow.core.grappler.costs.op_performance_data_pb2', 'tensorflow.core.protobuf.device_properties_pb2', 'tensorflow.python._pywrap_tf_cluster', 'tensorflow.lite.toco.model_flags_pb2', 'tensorflow.lite.python.convert_saved_model', 'tensorflow.lite.python.interpreter', 'tensorflow.lite.python.optimize', 'tensorflow.lite.python.optimize.calibrator', 'tensorflow._api.v2.compat.v1.logging', 'tensorflow._api.v2.compat.v1.lookup', 'tensorflow._api.v2.compat.v1.lookup.experimental', 'tensorflow._api.v2.compat.v1.losses', 'tensorflow._api.v2.compat.v1.manip', 'tensorflow._api.v2.compat.v1.math', 'tensorflow._api.v2.compat.v1.math.special', 'tensorflow._api.v2.compat.v1.metrics', 'tensorflow._api.v2.compat.v1.mixed_precision', 'tensorflow._api.v2.compat.v1.mixed_precision.experimental', 'tensorflow._api.v2.compat.v1.mlir', 'tensorflow._api.v2.compat.v1.mlir.experimental', 'tensorflow._api.v2.compat.v1.nest', 'tensorflow._api.v2.compat.v1.nn', 'tensorflow._api.v2.compat.v1.nn.rnn_cell', 'tensorflow._api.v2.compat.v1.profiler', 'tensorflow._api.v2.compat.v1.python_io', 'tensorflow._api.v2.compat.v1.quantization', 'tensorflow._api.v2.compat.v1.queue', 'tensorflow._api.v2.compat.v1.ragged', 'tensorflow._api.v2.compat.v1.random', 'tensorflow._api.v2.compat.v1.random.experimental', 'tensorflow._api.v2.compat.v1.raw_ops', 'tensorflow._api.v2.compat.v1.resource_loader', 'tensorflow._api.v2.compat.v1.saved_model', 'tensorflow._api.v2.compat.v1.saved_model.builder', 'tensorflow._api.v2.compat.v1.saved_model.constants', 'tensorflow._api.v2.compat.v1.saved_model.experimental', 'tensorflow._api.v2.compat.v1.saved_model.loader', 'tensorflow._api.v2.compat.v1.saved_model.main_op', 'tensorflow._api.v2.compat.v1.saved_model.signature_constants', 'tensorflow._api.v2.compat.v1.saved_model.signature_def_utils', 'tensorflow._api.v2.compat.v1.saved_model.tag_constants', 'tensorflow._api.v2.compat.v1.saved_model.utils', 'tensorflow._api.v2.compat.v1.sets', 'tensorflow._api.v2.compat.v1.signal', 'tensorflow._api.v2.compat.v1.sparse', 'tensorflow._api.v2.compat.v1.spectral', 'tensorflow._api.v2.compat.v1.strings', 'tensorflow._api.v2.compat.v1.summary', 'tensorflow._api.v2.compat.v1.sysconfig', 'tensorflow._api.v2.compat.v1.test', 'tensorflow._api.v2.compat.v1.tpu', 'tensorflow._api.v2.compat.v1.tpu.experimental', 'tensorflow._api.v2.compat.v1.train', 'tensorflow._api.v2.compat.v1.train.experimental', 'tensorflow._api.v2.compat.v1.train.queue_runner', 'tensorflow._api.v2.compat.v1.user_ops', 'tensorflow._api.v2.compat.v1.version', 'tensorflow._api.v2.compat.v1.xla', 'tensorflow._api.v2.compat.v1.xla.experimental', 'tensorflow.python.keras.api', 'tensorflow.python.keras.api.keras', 'tensorflow.python.keras.api.keras.activations', 'tensorflow.python.util.module_wrapper', 'tensorflow.tools.compatibility', 'tensorflow.tools.compatibility.all_renames_v2', 'tensorflow.tools.compatibility.renames_v2', 'tensorflow.python.keras.api.keras.applications', 'tensorflow.python.keras.api.keras.applications.densenet', 'tensorflow.python.keras.applications', 'tensorflow.python.keras.applications.densenet', 'tensorflow.python.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api.keras.applications.inception_v3', 'tensorflow.python.keras.applications.inception_v3', 'tensorflow.python.keras.api.keras.applications.mobilenet', 'tensorflow.python.keras.applications.mobilenet', 'tensorflow.python.keras.api.keras.applications.mobilenet_v2', 'tensorflow.python.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api.keras.applications.nasnet', 'tensorflow.python.keras.applications.nasnet', 'tensorflow.python.keras.api.keras.applications.resnet', 'tensorflow.python.keras.applications.resnet', 'tensorflow.python.keras.api.keras.applications.resnet50', 'tensorflow.python.keras.api.keras.applications.resnet_v2', 'tensorflow.python.keras.applications.resnet_v2', 'tensorflow.python.keras.api.keras.applications.vgg16', 'tensorflow.python.keras.applications.vgg16', 'tensorflow.python.keras.api.keras.applications.vgg19', 'tensorflow.python.keras.applications.vgg19', 'tensorflow.python.keras.api.keras.applications.xception', 'tensorflow.python.keras.applications.xception', 'tensorflow.python.keras.api.keras.backend', 'tensorflow.python.keras.api.keras.callbacks', 'tensorflow.python.keras.callbacks_v1', 'tensorflow.python.keras.api.keras.constraints', 'tensorflow.python.keras.api.keras.datasets', 'tensorflow.python.keras.api.keras.datasets.boston_housing', 'tensorflow.python.keras.datasets', 'tensorflow.python.keras.datasets.boston_housing', 'tensorflow.python.keras.api.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar', 'tensorflow.python.keras.api.keras.datasets.cifar100', 'tensorflow.python.keras.datasets.cifar100', 'tensorflow.python.keras.api.keras.datasets.fashion_mnist', 'tensorflow.python.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api.keras.datasets.imdb', 'tensorflow.python.keras.datasets.imdb', 'tensorflow.python.keras.preprocessing', 'keras_preprocessing', 'tensorflow.python.keras.preprocessing.image', 'keras_preprocessing.image', 'keras_preprocessing.image.affine_transformations', 'keras_preprocessing.image.utils', 'keras_preprocessing.image.dataframe_iterator', 'keras_preprocessing.image.iterator', 'keras_preprocessing.image.directory_iterator', 'keras_preprocessing.image.image_data_generator', 'keras_preprocessing.image.numpy_array_iterator', 'tensorflow.python.keras.preprocessing.sequence', 'keras_preprocessing.sequence', 'tensorflow.python.keras.preprocessing.text', 'keras_preprocessing.text', 'tensorflow.python.keras.utils.all_utils', 'tensorflow.python.keras.utils.multi_gpu_utils', 'tensorflow.python.keras.utils.np_utils', 'tensorflow.python.keras.utils.vis_utils', 'tensorflow.python.keras.api.keras.datasets.mnist', 'tensorflow.python.keras.datasets.mnist', 'tensorflow.python.keras.api.keras.datasets.reuters', 'tensorflow.python.keras.datasets.reuters', 'tensorflow.python.keras.api.keras.estimator', 'tensorflow.python.keras.estimator', 'tensorflow.python.keras.api.keras.experimental', 'tensorflow.python.keras.premade', 'tensorflow.python.keras.premade.linear', 'tensorflow.python.keras.premade.wide_deep', 'tensorflow.python.keras.saving.saved_model_experimental', 'tensorflow.python.keras.api.keras.initializers', 'tensorflow.python.keras.api.keras.layers', 'tensorflow.python.keras.api.keras.layers.experimental', 'tensorflow.python.keras.api.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api.keras.losses', 'tensorflow.python.keras.api.keras.metrics', 'tensorflow.python.keras.api.keras.mixed_precision', 'tensorflow.python.keras.api.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.get_layer_policy', 'tensorflow.python.keras.api.keras.models', 'tensorflow.python.keras.api.keras.optimizers', 'tensorflow.python.keras.api.keras.optimizers.schedules', 'tensorflow.python.keras.api.keras.preprocessing', 'tensorflow.python.keras.api.keras.preprocessing.image', 'tensorflow.python.keras.api.keras.preprocessing.sequence', 'tensorflow.python.keras.api.keras.preprocessing.text', 'tensorflow.python.keras.api.keras.regularizers', 'tensorflow.python.keras.api.keras.utils', 'tensorflow.python.keras.api.keras.wrappers', 'tensorflow.python.keras.api.keras.wrappers.scikit_learn', 'tensorflow.python.keras.wrappers', 'tensorflow.python.keras.wrappers.scikit_learn', 'tensorflow.python.keras.api._v1', 'tensorflow.python.keras.api._v1.keras', 'tensorflow.python.keras.api._v1.keras.activations', 'tensorflow.python.keras.api._v1.keras.applications', 'tensorflow.python.keras.api._v1.keras.applications.densenet', 'tensorflow.python.keras.api._v1.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v1.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.inception_v3', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v1.keras.applications.nasnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet50', 'tensorflow.python.keras.api._v1.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.vgg16', 'tensorflow.python.keras.api._v1.keras.applications.vgg19', 'tensorflow.python.keras.api._v1.keras.applications.xception', 'tensorflow.python.keras.api._v1.keras.backend', 'tensorflow.python.keras.api._v1.keras.callbacks', 'tensorflow.python.keras.api._v1.keras.constraints', 'tensorflow.python.keras.api._v1.keras.datasets', 'tensorflow.python.keras.api._v1.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v1.keras.datasets.cifar10', 'tensorflow.python.keras.api._v1.keras.datasets.cifar100', 'tensorflow.python.keras.api._v1.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v1.keras.datasets.imdb', 'tensorflow.python.keras.api._v1.keras.datasets.mnist', 'tensorflow.python.keras.api._v1.keras.datasets.reuters', 'tensorflow.python.keras.api._v1.keras.estimator', 'tensorflow.python.keras.api._v1.keras.experimental', 'tensorflow.python.keras.api._v1.keras.initializers', 'tensorflow.python.keras.api._v1.keras.layers', 'tensorflow.python.keras.api._v1.keras.layers.experimental', 'tensorflow.python.keras.api._v1.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v1.keras.losses', 'tensorflow.python.keras.api._v1.keras.metrics', 'tensorflow.python.keras.api._v1.keras.mixed_precision', 'tensorflow.python.keras.api._v1.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v1.keras.models', 'tensorflow.python.keras.api._v1.keras.optimizers', 'tensorflow.python.keras.api._v1.keras.optimizers.schedules', 'tensorflow.python.keras.api._v1.keras.preprocessing', 'tensorflow.python.keras.api._v1.keras.preprocessing.image', 'tensorflow.python.keras.api._v1.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v1.keras.preprocessing.text', 'tensorflow.python.keras.api._v1.keras.regularizers', 'tensorflow.python.keras.api._v1.keras.utils', 'tensorflow.python.keras.api._v1.keras.wrappers', 'tensorflow.python.keras.api._v1.keras.wrappers.scikit_learn', 'tensorflow._api.v2.compat.v1.compat.v2', 'tensorflow._api.v2.compat.v1.compat.v2.compat', 'tensorflow._api.v2.compat.v2', 'tensorflow._api.v2.compat.v2.audio', 'tensorflow._api.v2.compat.v2.autodiff', 'tensorflow._api.v2.compat.v2.autograph', 'tensorflow._api.v2.compat.v2.autograph.experimental', 'tensorflow._api.v2.compat.v2.bitwise', 'tensorflow._api.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.compat.v1', 'tensorflow._api.v2.compat.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v2.compat.v2', 'tensorflow._api.v2.compat.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.config', 'tensorflow._api.v2.compat.v2.config.experimental', 'tensorflow._api.v2.compat.v2.config.optimizer', 'tensorflow._api.v2.compat.v2.config.threading', 'tensorflow._api.v2.compat.v2.data', 'tensorflow._api.v2.compat.v2.data.experimental', 'tensorflow._api.v2.compat.v2.debugging', 'tensorflow._api.v2.compat.v2.debugging.experimental', 'tensorflow._api.v2.compat.v2.distribute', 'tensorflow._api.v2.compat.v2.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v2.distribute.experimental', 'tensorflow._api.v2.compat.v2.dtypes', 'tensorflow._api.v2.compat.v2.errors', 'tensorflow._api.v2.compat.v2.experimental', 'tensorflow._api.v2.compat.v2.experimental.dlpack', 'tensorflow._api.v2.compat.v2.experimental.tensorrt', 'tensorflow._api.v2.compat.v2.feature_column', 'tensorflow._api.v2.compat.v2.graph_util', 'tensorflow._api.v2.compat.v2.image', 'tensorflow._api.v2.compat.v2.io', 'tensorflow._api.v2.compat.v2.io.gfile', 'tensorflow._api.v2.compat.v2.linalg', 'tensorflow._api.v2.compat.v2.linalg.experimental', 'tensorflow._api.v2.compat.v2.lite', 'tensorflow._api.v2.compat.v2.lite.experimental', 'tensorflow._api.v2.compat.v2.lookup', 'tensorflow._api.v2.compat.v2.lookup.experimental', 'tensorflow._api.v2.compat.v2.math', 'tensorflow._api.v2.compat.v2.math.special', 'tensorflow._api.v2.compat.v2.mixed_precision', 'tensorflow._api.v2.compat.v2.mixed_precision.experimental', 'tensorflow._api.v2.compat.v2.mlir', 'tensorflow._api.v2.compat.v2.mlir.experimental', 'tensorflow._api.v2.compat.v2.nest', 'tensorflow._api.v2.compat.v2.nn', 'tensorflow._api.v2.compat.v2.profiler', 'tensorflow._api.v2.compat.v2.profiler.experimental', 'tensorflow._api.v2.compat.v2.profiler.experimental.client', 'tensorflow._api.v2.compat.v2.profiler.experimental.server', 'tensorflow._api.v2.compat.v2.quantization', 'tensorflow._api.v2.compat.v2.queue', 'tensorflow._api.v2.compat.v2.ragged', 'tensorflow._api.v2.compat.v2.random', 'tensorflow._api.v2.compat.v2.random.experimental', 'tensorflow._api.v2.compat.v2.raw_ops', 'tensorflow._api.v2.compat.v2.saved_model', 'tensorflow._api.v2.compat.v2.sets', 'tensorflow._api.v2.compat.v2.signal', 'tensorflow._api.v2.compat.v2.sparse', 'tensorflow._api.v2.compat.v2.strings', 'tensorflow._api.v2.compat.v2.summary', 'tensorflow._api.v2.compat.v2.summary.experimental', 'tensorflow._api.v2.compat.v2.sysconfig', 'tensorflow._api.v2.compat.v2.test', 'tensorflow._api.v2.compat.v2.tpu', 'tensorflow._api.v2.compat.v2.tpu.experimental', 'tensorflow._api.v2.compat.v2.train', 'tensorflow._api.v2.compat.v2.train.experimental', 'tensorflow._api.v2.compat.v2.version', 'tensorflow._api.v2.compat.v2.xla', 'tensorflow._api.v2.compat.v2.xla.experimental', 'tensorboard', 'tensorboard.errors', 'tensorboard.lazy', 'tensorboard.version', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_shape_pb2', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.util.lazy_tensor_creator', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.event_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary._tf', 'tensorboard.summary._tf.summary', 'tensorflow.python.keras.api._v2', 'tensorflow.python.keras.api._v2.keras', 'tensorflow.python.keras.api._v2.keras.activations', 'tensorflow.python.keras.api._v2.keras.applications', 'tensorflow.python.keras.api._v2.keras.applications.densenet', 'tensorflow.python.keras.api._v2.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v2.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.inception_v3', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v2.keras.applications.nasnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet50', 'tensorflow.python.keras.api._v2.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.vgg16', 'tensorflow.python.keras.api._v2.keras.applications.vgg19', 'tensorflow.python.keras.api._v2.keras.applications.xception', 'tensorflow.python.keras.api._v2.keras.backend', 'tensorflow.python.keras.api._v2.keras.callbacks', 'tensorflow.python.keras.api._v2.keras.constraints', 'tensorflow.python.keras.api._v2.keras.datasets', 'tensorflow.python.keras.api._v2.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v2.keras.datasets.cifar10', 'tensorflow.python.keras.api._v2.keras.datasets.cifar100', 'tensorflow.python.keras.api._v2.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v2.keras.datasets.imdb', 'tensorflow.python.keras.api._v2.keras.datasets.mnist', 'tensorflow.python.keras.api._v2.keras.datasets.reuters', 'tensorflow.python.keras.api._v2.keras.estimator', 'tensorflow.python.keras.api._v2.keras.experimental', 'tensorflow.python.keras.api._v2.keras.initializers', 'tensorflow.python.keras.api._v2.keras.layers', 'tensorflow.python.keras.api._v2.keras.layers.experimental', 'tensorflow.python.keras.api._v2.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v2.keras.losses', 'tensorflow.python.keras.api._v2.keras.metrics', 'tensorflow.python.keras.api._v2.keras.mixed_precision', 'tensorflow.python.keras.api._v2.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v2.keras.models', 'tensorflow.python.keras.api._v2.keras.optimizers', 'tensorflow.python.keras.api._v2.keras.optimizers.schedules', 'tensorflow.python.keras.api._v2.keras.preprocessing', 'tensorflow.python.keras.api._v2.keras.preprocessing.image', 'tensorflow.python.keras.api._v2.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v2.keras.preprocessing.text', 'tensorflow.python.keras.api._v2.keras.regularizers', 'tensorflow.python.keras.api._v2.keras.utils', 'tensorflow.python.keras.api._v2.keras.wrappers', 'tensorflow.python.keras.api._v2.keras.wrappers.scikit_learn', 'tensorflow._api.v2.config', 'tensorflow._api.v2.config.experimental', 'tensorflow._api.v2.config.optimizer', 'tensorflow._api.v2.config.threading', 'tensorflow._api.v2.data', 'tensorflow._api.v2.data.experimental', 'tensorflow._api.v2.debugging', 'tensorflow._api.v2.debugging.experimental', 'tensorflow._api.v2.distribute', 'tensorflow._api.v2.distribute.cluster_resolver', 'tensorflow._api.v2.distribute.experimental', 'tensorflow._api.v2.dtypes', 'tensorflow._api.v2.errors', 'tensorflow._api.v2.experimental', 'tensorflow._api.v2.experimental.dlpack', 'tensorflow._api.v2.experimental.tensorrt', 'tensorflow._api.v2.feature_column', 'tensorflow._api.v2.graph_util', 'tensorflow._api.v2.image', 'tensorflow._api.v2.io', 'tensorflow._api.v2.io.gfile', 'tensorflow._api.v2.linalg', 'tensorflow._api.v2.linalg.experimental', 'tensorflow._api.v2.lite', 'tensorflow._api.v2.lite.experimental', 'tensorflow._api.v2.lookup', 'tensorflow._api.v2.lookup.experimental', 'tensorflow._api.v2.math', 'tensorflow._api.v2.math.special', 'tensorflow._api.v2.mixed_precision', 'tensorflow._api.v2.mixed_precision.experimental', 'tensorflow._api.v2.mlir', 'tensorflow._api.v2.mlir.experimental', 'tensorflow._api.v2.nest', 'tensorflow._api.v2.nn', 'tensorflow._api.v2.profiler', 'tensorflow._api.v2.profiler.experimental', 'tensorflow._api.v2.profiler.experimental.client', 'tensorflow._api.v2.profiler.experimental.server', 'tensorflow._api.v2.quantization', 'tensorflow._api.v2.queue', 'tensorflow._api.v2.ragged', 'tensorflow._api.v2.random', 'tensorflow._api.v2.random.experimental', 'tensorflow._api.v2.raw_ops', 'tensorflow._api.v2.saved_model', 'tensorflow._api.v2.sets', 'tensorflow._api.v2.signal', 'tensorflow._api.v2.sparse', 'tensorflow._api.v2.strings', 'tensorflow._api.v2.summary', 'tensorflow._api.v2.summary.experimental', 'tensorflow._api.v2.sysconfig', 'tensorflow._api.v2.test', 'tensorflow._api.v2.tpu', 'tensorflow._api.v2.tpu.experimental', 'tensorflow._api.v2.train', 'tensorflow._api.v2.train.experimental', 'tensorflow._api.v2.version', 'tensorflow._api.v2.xla', 'tensorflow._api.v2.xla.experimental', 'tensorflow.keras', 'tensorflow.keras.activations', 'tensorflow.keras.applications', 'tensorflow.keras.applications.densenet', 'tensorflow.keras.applications.imagenet_utils', 'tensorflow.keras.applications.inception_resnet_v2', 'tensorflow.keras.applications.inception_v3', 'tensorflow.keras.applications.mobilenet', 'tensorflow.keras.applications.mobilenet_v2', 'tensorflow.keras.applications.nasnet', 'tensorflow.keras.applications.resnet', 'tensorflow.keras.applications.resnet50', 'tensorflow.keras.applications.resnet_v2', 'tensorflow.keras.applications.vgg16', 'tensorflow.keras.applications.vgg19', 'tensorflow.keras.applications.xception', 'tensorflow.keras.backend', 'tensorflow.keras.callbacks', 'tensorflow.keras.constraints', 'tensorflow.keras.datasets', 'tensorflow.keras.datasets.boston_housing', 'tensorflow.keras.datasets.cifar10', 'tensorflow.keras.datasets.cifar100', 'tensorflow.keras.datasets.fashion_mnist', 'tensorflow.keras.datasets.imdb', 'tensorflow.keras.datasets.mnist', 'tensorflow.keras.datasets.reuters', 'tensorflow.keras.estimator', 'tensorflow.keras.experimental', 'tensorflow.keras.initializers', 'tensorflow.keras.layers', 'tensorflow.keras.layers.experimental', 'tensorflow.keras.layers.experimental.preprocessing', 'tensorflow.keras.losses', 'tensorflow.keras.metrics', 'tensorflow.keras.mixed_precision', 'tensorflow.keras.mixed_precision.experimental', 'tensorflow.keras.models', 'tensorflow.keras.optimizers', 'tensorflow.keras.optimizers.schedules', 'tensorflow.keras.preprocessing', 'tensorflow.keras.preprocessing.image', 'tensorflow.keras.preprocessing.sequence', 'tensorflow.keras.preprocessing.text', 'tensorflow.keras.regularizers', 'tensorflow.keras.utils', 'tensorflow.keras.wrappers', 'tensorflow.keras.wrappers.scikit_learn', 'keras.utils.losses_utils', 'keras.utils.metrics_utils', 'keras.utils.layer_utils', 'keras.utils.vis_utils', 'keras.models', 'keras.engine', 'keras.engine.input_layer', 'keras.engine.base_layer', 'keras.initializers', 'keras.legacy', 'keras.legacy.interfaces', 'keras.engine.network', 'keras.engine.saving', 'keras.losses', 'keras.optimizers', 'keras.engine.training', 'keras.engine.training_utils', 'keras.metrics', 'keras.layers', 'keras.layers.merge', 'keras.layers.core', 'keras.activations', 'keras.regularizers', 'keras.constraints', 'keras.layers.convolutional', 'keras.layers.pooling', 'keras.legacy.layers', 'keras.layers.local', 'keras.layers.recurrent', 'keras.layers.cudnn_recurrent', 'keras.layers.normalization', 'keras.layers.embeddings', 'keras.layers.noise', 'keras.layers.advanced_activations', 'keras.layers.wrappers', 'keras.layers.convolutional_recurrent', 'keras.engine.training_arrays', 'keras.callbacks', 'keras.callbacks.callbacks', 'keras.callbacks.tensorboard_v2', 'keras.engine.training_generator', 'keras.engine.sequential', 'keras.utils.multi_gpu_utils', 'keras.applications', 'keras_applications', 'keras_applications.vgg16', 'keras_applications.imagenet_utils', 'keras_applications.vgg19', 'keras_applications.resnet50', 'keras_applications.inception_v3', 'keras_applications.inception_resnet_v2', 'keras_applications.xception', 'keras_applications.mobilenet', 'keras_applications.mobilenet_v2', 'keras_applications.densenet', 'keras_applications.nasnet', 'keras_applications.resnet', 'keras_applications.resnet_common', 'keras_applications.resnet_v2', 'keras_applications.resnext', 'keras.applications.vgg16', 'keras.applications.vgg19', 'keras.applications.resnet50', 'keras.applications.inception_v3', 'keras.applications.inception_resnet_v2', 'keras.applications.xception', 'keras.applications.mobilenet', 'keras.applications.mobilenet_v2', 'keras.applications.densenet', 'keras.applications.nasnet', 'keras.applications.resnet', 'keras.applications.resnet_v2', 'keras.datasets', 'keras.datasets.mnist', 'keras.datasets.imdb', 'keras.preprocessing', 'keras.preprocessing.image', 'keras.preprocessing.sequence', 'keras.preprocessing.text', 'keras.datasets.reuters', 'keras.datasets.cifar10', 'keras.datasets.cifar', 'keras.datasets.cifar100', 'keras.datasets.boston_housing', 'keras.datasets.fashion_mnist', 'keras.wrappers', 'keras.wrappers.scikit_learn', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from C:\Users\Chelovek\.matplotlib\fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib:CONFIGDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib:(private) matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:loaded rc file D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data\matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.1
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is win32
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_winapi', '_bootlocale', '_locale', 'encodings.cp1251', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'pywin32_bootstrap', 'glob', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'fnmatch', 'posixpath', 'numpy', '__future__', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'ctypes', '_ctypes', 'struct', '_struct', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', 'time', 'math', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'errno', 'urllib', 'urllib.parse', 'pickle', '_compat_pickle', '_pickle', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'collections.abc', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'subprocess', 'signal', 'threading', 'traceback', 'linecache', 'tokenize', 'token', '_weakrefset', 'msvcrt', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'ast', '_ast', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'weakref', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random._bit_generator', '_cython_0_29_17', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'tqdm', 'tqdm.std', 'tqdm.utils', 'socket', '_socket', 'selectors', 'select', 'colorama', 'colorama.initialise', 'atexit', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes.wintypes', 'unicodedata', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'logging', 'string', '_string', 'common', 'argparse', 'gettext', 'locale', 'librosa', 'librosa.version', 'librosa._cache', 'joblib', 'joblib.memory', 'pydoc', 'inspect', 'dis', 'opcode', '_opcode', 'pkgutil', 'joblib.hashing', 'joblib._compat', 'joblib.func_inspect', 'joblib.logger', 'pprint', 'joblib.disk', 'joblib._memory_helpers', 'joblib._store_backends', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'joblib.backports', 'distutils', 'distutils.version', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'tempfile', '_multiprocessing', 'joblib.format_stack', 'joblib.my_exceptions', 'joblib._parallel_backends', 'gc', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'uuid', 'multiprocessing.pool', 'queue', '_queue', 'multiprocessing.util', 'joblib.executor', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_win32', 'multiprocessing.popen_spawn_win32', 'multiprocessing.spawn', 'runpy', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._win_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'librosa.core', 'librosa.core.time_frequency', 'six', 'librosa.util', 'librosa.util.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'typing', 'typing.io', 'typing.re', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_cython_0_29_14', '_ni_label', 'scipy.ndimage.morphology', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'difflib', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy._lib._util', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'numba', 'numba._version', 'numba.core', 'numba.core.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'pkg_resources', 'zipfile', 'plistlib', 'xml', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources.py31compat', 'pkg_resources._vendor.appdirs', 'win32com', 'win32api', 'pythoncom', 'pywintypes', 'imp', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'copy', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'sysconfig', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.testing', 'numba.testing.main', 'cProfile', '_lsprof', 'profile', 'numba.testing.loader', 'numba.testing._runtests', 'numba.core.types', 'numba.core.utils', 'timeit', 'numba.core.types.abstract', 'numba.core.types.containers', 'numba.core.types.common', 'numba.core.types.misc', 'numba.core.typeconv', 'numba.core.typeconv.castgraph', 'numba.core.errors', 'numba.core.types.functions', 'numba.core.types.iterators', 'numba.core.types.npytypes', 'numba.core.types.scalars', 'numba.np', 'numba.np.npdatetime_helpers', 'numba.core.types.function_type', 'numba.misc', 'numba.misc.special', 'numba.core.typing', 'numba.core.typing.context', 'numba.core.typeconv.rules', 'numba.core.typeconv.typeconv', 'numba.core.typeconv._typeconv', 'numba.core.typing.templates', 'numba.core.cpu_options', 'numba.core.typing.typeof', 'numba.np.numpy_support', 'numba.core.cgutils', 'numba.core.datamodel', 'numba.core.datamodel.manager', 'numba.core.datamodel.packer', 'numba.core.datamodel.registry', 'numba.core.datamodel.models', 'numba.core.decorators', 'numba.stencils', 'numba.stencils.stencil', 'numba.core.ir', 'numba.core.consts', 'numba.core.ir_utils', 'numba.core.extending', 'numba.core.imputils', 'numba.core.pythonapi', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._helperlib', 'numba.core.lowering', 'numba._dynfunc', 'numba.core.debuginfo', 'numba.core.funcdesc', 'numba.core.itanium_mangler', 'numba.core.generators', 'numba.core.analysis', 'numba.core.controlflow', 'numba.core.postproc', 'numba.core.transforms', 'numba.core.rewrites', 'numba.core.rewrites.registry', 'numba.core.rewrites.static_getitem', 'numba.core.rewrites.static_raise', 'numba.core.rewrites.static_binop', 'numba.core.rewrites.ir_print', 'numba.core.rewrites.macros', 'numba.core.registry', 'numba.core.descriptors', 'numba.core.dispatcher', 'numba._dispatcher', 'numba.core.serialize', 'numba.core.bytecode', 'numba.core.compiler', 'numba.core.tracing', 'numba.core.interpreter', 'numba.core.dataflow', 'numba.core.byteflow', 'numba.core.unsafe', 'numba.core.unsafe.eh', 'numba.core.callconv', 'numba.core.base', 'numba.core.compiler_lock', 'numba.np.arrayobj', 'numba.misc.quicksort', 'numba.misc.mergesort', 'numba.cpython', 'numba.cpython.slicing', 'numba.cpython.unsafe', 'numba.cpython.unsafe.tuple', 'numba.cpython.builtins', 'numba.core.typing.builtins', 'numba.parfors', 'numba.parfors.parfor_lowering', 'numba.parfors.parfor', 'numba.core.typeinfer', 'numba.stencils.stencilparfor', 'numba.core.typing.npydecl', 'numba.parfors.array_analysis', 'numba.core.sigutils', 'numba.parfors.parfor_lowering_utils', 'numba.extending', 'numba.core.cpu', 'numba.core.callwrapper', 'numba.core.codegen', 'llvmlite.llvmpy.passes', 'numba.core.runtime', 'numba.core.runtime.nrt', 'numba.core.runtime.nrtdynmod', 'numba.core.runtime._nrt_python', 'numba.core.runtime.nrtopt', 'numba.misc.inspection', 'numba.core.externals', 'numba.core.intrinsics', 'numba.core.fastmathpass', 'numba.core.options', 'numba.core.entrypoints', 'numba.cpython.setobj', 'numba.cpython.listobj', 'numba.core.inline_closurecall', 'numba.cpython.rangeobj', 'numba.np.unsafe', 'numba.np.unsafe.ndarray', 'numba.core.compiler_machinery', 'numba.core.untyped_passes', 'numba.core.ssa', 'numba.core.typed_passes', 'numba.core.annotations', 'numba.core.annotations.type_annotations', 'numba.core.object_mode_passes', 'numba.core.pylowering', 'numba.core.caching', 'numba.misc.appdirs', 'numba.np.ufunc', 'numba.np.ufunc.decorators', 'numba.np.ufunc._internal', 'numba.np.ufunc.ufuncbuilder', 'numba.np.ufunc.sigparse', 'numba.np.ufunc.wrappers', 'numba.np.ufunc.parallel', 'numba.np.ufunc.dufunc', 'numba.np.ufunc.array_exprs', 'numba.experimental', 'numba.experimental.jitclass', 'numba.experimental.jitclass.decorators', 'numba.experimental.jitclass.base', 'numba.experimental.jitclass._box', 'numba.experimental.jitclass.boxing', 'numba.core.withcontexts', 'numba.cpython.charseq', 'numba.cpython.unicode', 'numba.cpython.hashing', 'numba.core.unsafe.bytes', 'numba.cpython.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.typed.dictobject', 'numba.typed.typedobjectutils', 'numba.core.boxing', 'numba.typed.dictimpl', 'numba.experimental.function_type', 'numba.core.ccallback', 'numba.core.typing.ctypes_utils', 'numba.typed.typedlist', 'numba.typed.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'decorator', 'numba.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy._lib.messagestream', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy._lib.decorator', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.integrate', 'scipy.integrate.quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.stats', 'scipy.stats.stats', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.stats._stats', 'scipy.stats._tukeylambda_stats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._rvs_sampling', 'scipy.stats._hypotests', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'sklearn.utils.fixes', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils.deprecation', 'sklearn.utils._estimator_html_repr', 'html', 'html.entities', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils.sparsefuncs', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'array', 'sklearn.utils.multiclass', 'sklearn.preprocessing._discretization', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'threadpoolctl', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'csv', '_csv', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'keras_model', 'keras', 'keras.utils', 'keras.utils.np_utils', 'keras.utils.generic_utils', 'keras.utils.data_utils', 'tarfile', 'six.moves', 'six.moves.urllib', 'six.moves.urllib.error', 'urllib.error', 'urllib.response', 'six.moves.urllib.request', 'urllib.request', 'http', 'http.client', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'nturl2path', 'keras.utils.io_utils', 'h5py', 'h5py._errors', 'h5py._hl', 'h5py._hl.compat', 'h5py.version', 'h5py.h5', '_cython_0_29_13', 'h5py.defs', 'h5py._objects', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.utils', 'h5py.h5py_warnings', 'h5py.h5z', 'h5py.h5a', 'h5py.h5s', 'h5py.h5p', 'h5py.h5ac', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl.filters', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'keras.utils.conv_utils', 'keras.backend', 'keras.backend.load_backend', 'keras.backend.common', 'keras.backend.tensorflow_backend', 'tensorflow', 'tensorflow.python', 'tensorflow.python.pywrap_tensorflow', 'tensorflow.python.platform', 'tensorflow.python.platform.self_check', 'tensorflow.python.platform.build_info', 'tensorflow.python.pywrap_dlopen_global_flags', 'tensorflow.python.pywrap_tensorflow_internal', 'swig_runtime_data4', '_pywrap_tensorflow_internal', 'tensorflow.core', 'tensorflow.core.framework', 'tensorflow.core.framework.graph_pb2', 'google.protobuf', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorflow.core.framework.function_pb2', 'tensorflow.core.framework.attr_value_pb2', 'tensorflow.core.framework.tensor_pb2', 'tensorflow.core.framework.resource_handle_pb2', 'tensorflow.core.framework.tensor_shape_pb2', 'google.protobuf.internal.well_known_types', 'tensorflow.core.framework.types_pb2', 'tensorflow.core.framework.node_def_pb2', 'tensorflow.core.framework.op_def_pb2', 'tensorflow.core.framework.versions_pb2', 'tensorflow.core.framework.summary_pb2', 'tensorflow.core.protobuf', 'tensorflow.core.protobuf.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorflow.core.protobuf.saved_object_graph_pb2', 'tensorflow.core.framework.variable_pb2', 'tensorflow.core.protobuf.struct_pb2', 'tensorflow.core.protobuf.trackable_object_graph_pb2', 'tensorflow.core.protobuf.saver_pb2', 'tensorflow.core.protobuf.config_pb2', 'tensorflow.core.framework.cost_graph_pb2', 'tensorflow.core.framework.step_stats_pb2', 'tensorflow.core.framework.allocation_description_pb2', 'tensorflow.core.framework.tensor_description_pb2', 'tensorflow.core.protobuf.cluster_pb2', 'tensorflow.core.protobuf.debug_pb2', 'tensorflow.core.protobuf.rewriter_config_pb2', 'tensorflow.core.protobuf.verifier_config_pb2', 'tensorflow.core.protobuf.tensorflow_server_pb2', 'tensorflow.core.protobuf.device_filters_pb2', 'tensorflow.core.util', 'tensorflow.core.util.event_pb2', 'tensorflow.python.framework', 'tensorflow.python.framework.framework_lib', 'tensorflow.python.framework.device', 'tensorflow.python.tf2', 'tensorflow.python.framework.device_spec', 'tensorflow.python.util', 'tensorflow.python.util.tf_export', 'tensorflow.python.util.tf_decorator', 'tensorflow.python.util.tf_stack', 'tensorflow.python._tf_stack', 'tensorflow.python.util.tf_inspect', 'tensorflow.python.framework.ops', 'tensorflow.python.pywrap_tfe', 'tensorflow.python._pywrap_tfe', 'tensorflow.python.client', 'tensorflow.python.client.pywrap_tf_session', 'tensorflow.python._pywrap_tf_session', 'tensorflow.python.eager', 'tensorflow.python.eager.context', 'absl', 'absl.logging', 'getpass', 'absl.flags', 'getopt', 'absl.flags._argument_parser', 'absl.flags._helpers', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'absl.flags._validators', 'absl.logging.converter', 'tensorflow.python.eager.executor', 'tensorflow.python.eager.monitoring', 'tensorflow.python.framework.c_api_util', 'tensorflow.core.framework.api_def_pb2', 'tensorflow.python.util.compat', 'tensorflow.python.util.tf_contextlib', 'tensorflow.python.util.is_in_graph_mode', 'tensorflow.python.eager.core', 'tensorflow.python.framework.errors', 'tensorflow.python.framework.errors_impl', 'tensorflow.core.lib', 'tensorflow.core.lib.core', 'tensorflow.core.lib.core.error_codes_pb2', 'tensorflow.core.protobuf.error_codes_pb2', 'tensorflow.python._pywrap_py_exception_registry', 'tensorflow.python.framework.error_interpolation', 'tensorflow.core.protobuf.graph_debug_info_pb2', 'tensorflow.python.util.deprecation', 'tensorflow.python.platform.tf_logging', 'tensorflow.python.util.decorator_utils', 'tensorflow.python.eager.tape', 'tensorflow.python.util.lazy_loader', 'tensorflow.python.framework.composite_tensor', 'tensorflow.python._pywrap_utils', 'tensorflow.python.util.nest', 'wrapt', 'wrapt.wrappers', 'wrapt._wrappers', 'wrapt.decorators', 'wrapt.importer', 'tensorflow.python.framework.dtypes', 'tensorflow.python._pywrap_bfloat16', 'tensorflow.python._dtypes', 'tensorflow.python.framework.indexed_slices', 'tensorflow.python.framework.tensor_conversion_registry', 'tensorflow.python.framework.tensor_like', 'tensorflow.python.framework.tensor_shape', 'tensorflow.python.framework.type_spec', 'tensorflow.python.framework.registry', 'tensorflow.python.framework.traceable_stack', 'tensorflow.python.framework.versions', 'tensorflow.python.ops', 'tensorflow.python.ops.control_flow_util', 'tensorflow.python.platform.app', 'absl.app', 'pdb', 'cmd', 'bdb', 'code', 'codeop', 'absl.command_name', 'faulthandler', 'tensorflow.python.platform.flags', 'tensorflow.python.util.function_utils', 'tensorflow.python.util.lock_util', 'tensorflow.python.util.memory', 'tensorflow.python.util.object_identity', 'tensorflow.python.framework.sparse_tensor', 'tensorflow.python.framework.constant_op', 'tensorflow.python.eager.execute', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'tensorflow.python.framework.tensor_util', 'tensorflow.python.framework.tensor_spec', 'tensorflow.python.framework.common_shapes', 'tensorflow.python.ops.gen_sparse_ops', 'tensorflow.python.framework.op_def_registry', 'tensorflow.python._op_def_registry', 'tensorflow.python.framework.op_def_library', 'tensorflow.python.framework.op_callbacks', 'tensorflow.python.util.dispatch', 'tensorflow.python.framework.random_seed', 'tensorflow.python.framework.importer', 'tensorflow.python.framework.function', 'tensorflow.python.framework.graph_to_function_def', 'tensorflow.python.ops.array_ops', 'tensorflow.python.ops.gen_array_ops', 'tensorflow.python.ops.gen_math_ops', 'tensorflow.python.ops.resource_variable_ops', 'tensorflow.python.framework.auto_control_deps_utils', 'tensorflow.python.framework.cpp_shape_inference_pb2', 'tensorflow.python.ops.gen_logging_ops', 'tensorflow.python.ops.gen_resource_variable_ops', 'tensorflow.python.ops.gen_state_ops', 'tensorflow.python.ops.math_ops', 'tensorflow.python.framework.graph_util', 'tensorflow.python.framework.graph_util_impl', 'tensorflow.python.ops.gen_data_flow_ops', 'tensorflow.python.ops.gen_nn_ops', 'tensorflow.python.ops.state_ops', 'tensorflow.python.ops.variables', 'tensorflow.python.ops.control_flow_ops', 'tensorflow.core.protobuf.control_flow_pb2', 'tensorflow.python.ops.gen_control_flow_ops', 'tensorflow.python.ops.tensor_array_ops', 'tensorflow.python.ops.list_ops', 'tensorflow.python.ops.gen_list_ops', 'tensorflow.python.util.tf_should_use', 'tensorflow.python.training', 'tensorflow.python.training.tracking', 'tensorflow.python.training.tracking.base', 'tensorflow.python.ops.gen_io_ops', 'tensorflow.python.training.saving', 'tensorflow.python.training.saving.saveable_object', 'tensorflow.python.ops.variable_scope', 'tensorflow.python.client.session', 'tensorflow.python.ops.session_ops', 'tensorflow.python.training.experimental', 'tensorflow.python.training.experimental.mixed_precision_global_state', 'tensorflow.python.ops.init_ops', 'tensorflow.python.ops.gen_linalg_ops', 'tensorflow.python.ops.linalg_ops_impl', 'tensorflow.python.ops.random_ops', 'tensorflow.python.ops.gen_random_ops', 'tensorflow.python.framework.load_library', 'tensorflow.python._pywrap_python_op_gen', 'tensorflow.python.lib', 'tensorflow.python.lib.io', 'tensorflow.python.lib.io.file_io', 'tensorflow.python._pywrap_file_io', 'tensorflow.python.framework.config', 'tensorflow.python.client.client_lib', 'tensorflow.python.ops.standard_ops', 'tensorflow.python.autograph', 'tensorflow.python.autograph.operators', 'tensorflow.python.autograph.operators.control_flow', 'tensorflow.python.autograph.operators.py_builtins', 'tensorflow.python.autograph.utils', 'tensorflow.python.autograph.utils.context_managers', 'tensorflow.python.autograph.utils.misc', 'tensorflow.python.autograph.utils.py_func', 'tensorflow.python.ops.script_ops', 'tensorflow.python._pywrap_py_func', 'tensorflow.python.eager.backprop', 'tensorflow.python.eager.backprop_util', 'tensorflow.python.eager.imperative_grad', 'tensorflow.python.ops.unconnected_gradients', 'tensorflow.python.ops.check_ops', 'tensorflow.python.ops.default_gradient', 'tensorflow.python.framework.func_graph', 'tensorflow.python.eager.graph_only_ops', 'tensorflow.python.framework.auto_control_deps', 'tensorflow.python.ops.custom_gradient', 'tensorflow.python.ops.op_selector', 'tensorflow.python.ops.gen_script_ops', 'tensorflow.python.autograph.utils.tensor_list', 'tensorflow.python.autograph.utils.testing', 'tensorflow.python.autograph.utils.type_check', 'tensorflow.python.autograph.utils.tensors', 'tensorflow.python.data', 'tensorflow.python.data.experimental', 'tensorflow.python.data.experimental.ops', 'tensorflow.python.data.experimental.ops.batching', 'tensorflow.python.data.ops', 'tensorflow.python.data.ops.dataset_ops', 'tensorflow.python.compat', 'tensorflow.python.compat.compat', 'tensorflow.python.data.experimental.ops.distribute_options', 'tensorflow.python.data.util', 'tensorflow.python.data.util.options', 'tensorflow.python.data.experimental.ops.optimization_options', 'tensorflow.python.data.experimental.ops.stats_options', 'tensorflow.python.data.experimental.ops.stats_aggregator', 'tensorflow.python.ops.gen_experimental_dataset_ops', 'tensorflow.python.ops.summary_ops_v2', 'tensorflow.python.eager.profiler', 'tensorflow.python._pywrap_events_writer', 'tensorflow.python.platform.gfile', 'tensorflow.python.profiler', 'tensorflow.python.profiler.internal', 'tensorflow.python.profiler.internal._pywrap_profiler', 'tensorflow.python.framework.smart_cond', 'tensorflow.python.ops.gen_summary_ops', 'tensorflow.python.ops.summary_op_util', 'tensorflow.python.training.training_util', 'tensorflow.python.framework.graph_io', 'tensorflow.python.data.experimental.ops.threading_options', 'tensorflow.python.data.ops.iterator_ops', 'tensorflow.python.data.ops.optional_ops', 'tensorflow.python.data.util.structure', 'tensorflow.python.data.util.nest', 'tensorflow.python.ops.ragged', 'tensorflow.python.ops.ragged.ragged_array_ops', 'tensorflow.python.ops.sort_ops', 'tensorflow.python.ops.nn_ops', 'tensorflow.python.platform.device_context', 'tensorflow.python.ops.ragged.ragged_functional_ops', 'tensorflow.python.ops.ragged.ragged_config', 'tensorflow.python.ops.ragged.ragged_tensor', 'tensorflow.python.ops.gen_ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_tensor_value', 'tensorflow.python.ops.ragged.ragged_util', 'tensorflow.python.ops.gen_ragged_math_ops', 'tensorflow.python.ops.ragged.segment_id_ops', 'tensorflow.python.ops.ragged.ragged_math_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_ops', 'tensorflow.python.ops.ragged.ragged_gather_ops', 'tensorflow.python.ops.gen_ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_with_default_op', 'tensorflow.python.ops.ragged.ragged_dispatch', 'tensorflow.python.ops.clip_ops', 'tensorflow.python.ops.data_flow_ops', 'tensorflow.python.lib.io.python_io', 'tensorflow.python.lib.io.tf_record', 'tensorflow.python._pywrap_record_io', 'tensorflow.python.ops.gen_bitwise_ops', 'tensorflow.python.ops.parsing_ops', 'tensorflow.python.ops.gen_parsing_ops', 'tensorflow.python.ops.parsing_config', 'tensorflow.python.ops.sparse_ops', 'tensorflow.python.ops.string_ops', 'tensorflow.python.ops.gen_string_ops', 'tensorflow.python.ops.ragged.ragged_concat_ops', 'tensorflow.python.ops.ragged.ragged_squeeze_op', 'tensorflow.python.ops.ragged.ragged_string_ops', 'tensorflow.python.ops.ragged.ragged_tensor_shape', 'tensorflow.python.ops.ragged.ragged_where_op', 'tensorflow.python.ops.ragged.ragged_operators', 'tensorflow.python.ops.ragged.ragged_getitem', 'tensorflow.python.ops.ragged.ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_factory_ops', 'tensorflow.python.ops.ragged.ragged_map_ops', 'tensorflow.python.ops.gen_dataset_ops', 'tensorflow.python.training.saver', 'tensorflow.python.framework.meta_graph', 'tensorflow.python.ops.io_ops', 'tensorflow.python.training.checkpoint_management', 'tensorflow.python.training.checkpoint_state_pb2', 'tensorflow.python.training.py_checkpoint_reader', 'tensorflow.python._pywrap_checkpoint_reader', 'tensorflow.python.training.saving.saveable_object_util', 'tensorflow.python.data.util.random_seed', 'tensorflow.python.data.util.traverse', 'tensorflow.python.eager.function', 'tensorflow.python.eager.forwardprop_util', 'tensorflow.python.ops.functional_ops', 'tensorflow.python.ops.gen_functional_ops', 'tensorflow.python.ops.gradients_util', 'tensorflow.python.ops.control_flow_state', 'tensorflow.python.ops.control_flow_v2_func_graphs', 'tensorflow.python.training.tracking.tracking', 'tensorflow.python.eager.def_function', 'tensorflow.python.eager.lift_to_graph', 'tensorflow.python.training.tracking.data_structures', 'tensorflow.python.saved_model', 'tensorflow.python.saved_model.revived_types', 'tensorflow.python.training.tracking.layer_utils', 'tensorflow.python.data.util.convert', 'tensorflow.python.data.experimental.ops.cardinality', 'tensorflow.python.data.experimental.ops.counter', 'tensorflow.python.data.experimental.ops.scan_ops', 'tensorflow.python.data.experimental.ops.enumerate_ops', 'tensorflow.python.data.experimental.ops.error_ops', 'tensorflow.python.data.experimental.ops.get_single_element', 'tensorflow.python.data.experimental.ops.grouping', 'tensorflow.python.data.experimental.ops.interleave_ops', 'tensorflow.python.data.experimental.ops.random_ops', 'tensorflow.python.data.ops.readers', 'tensorflow.python.ops.gen_stateless_random_ops', 'tensorflow.python.data.experimental.ops.iterator_ops', 'tensorflow.python.training.basic_session_run_hooks', 'tensorflow.python.client.timeline', 'tensorflow.python.training.session_run_hook', 'tensorflow.python.training.summary_io', 'tensorflow.python.summary', 'tensorflow.python.summary.summary_iterator', 'tensorflow.python.summary.writer', 'tensorflow.python.summary.writer.writer', 'tensorflow.python.summary.plugin_asset', 'tensorflow.python.summary.writer.event_file_writer', 'tensorflow.python.summary.writer.event_file_writer_v2', 'tensorflow.python.summary.writer.writer_cache', 'tensorflow.python.data.experimental.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.prefetching_ops', 'tensorflow.python.data.experimental.ops.readers', 'gzip', 'tensorflow.python.data.experimental.ops.resampling', 'tensorflow.python.ops.logging_ops', 'tensorflow.python.data.experimental.ops.shuffle_ops', 'tensorflow.python.data.experimental.ops.stats_ops', 'tensorflow.python.data.experimental.ops.take_while_ops', 'tensorflow.python.data.experimental.ops.unique', 'tensorflow.python.data.experimental.ops.writers', 'tensorflow.python.util.all_util', 'tensorflow.python.autograph.operators.special_values', 'tensorflow.python.autograph.utils.ag_logging', 'tensorflow.python.autograph.utils.compat_util', 'tensorflow.python.autograph.operators.data_structures', 'tensorflow.python.autograph.operators.exceptions', 'tensorflow.python.autograph.operators.logical', 'tensorflow.python.autograph.operators.slices', 'tensorflow.python.autograph.core', 'tensorflow.python.autograph.core.converter', 'tensorflow.python.autograph.pyct', 'tensorflow.python.autograph.pyct.anno', 'gast', 'gast.gast', 'gast.ast3', 'gast.astn', 'tensorflow.python.autograph.pyct.ast_util', 'tensorflow.python.autograph.pyct.parser', 'astunparse', 'astunparse.unparser', 'astunparse.printer', 'tensorflow.python.autograph.pyct.errors', 'tensorflow.python.autograph.pyct.inspect_utils', 'tensorflow.python.autograph.pyct.qual_names', 'tensorflow.python.autograph.pyct.cfg', 'tensorflow.python.autograph.pyct.templates', 'tensorflow.python.autograph.pyct.transformer', 'tensorflow.python.autograph.pyct.loader', 'tensorflow.python.autograph.pyct.origin_info', 'tensorflow.python.autograph.pyct.pretty_printer', 'termcolor', 'tensorflow.python.autograph.pyct.static_analysis', 'tensorflow.python.autograph.pyct.static_analysis.activity', 'tensorflow.python.autograph.pyct.static_analysis.annos', 'tensorflow.python.autograph.pyct.static_analysis.liveness', 'tensorflow.python.autograph.pyct.static_analysis.reaching_definitions', 'tensorflow.python.autograph.impl', 'tensorflow.python.autograph.impl.api', 'tensorflow.python.autograph.core.ag_ctx', 'tensorflow.python.autograph.impl.conversion', 'tensorflow.python.autograph.converters', 'tensorflow.python.autograph.converters.arg_defaults', 'tensorflow.python.autograph.converters.asserts', 'tensorflow.python.autograph.converters.break_statements', 'tensorflow.python.autograph.converters.call_trees', 'tensorflow.python.autograph.converters.conditional_expressions', 'tensorflow.python.autograph.converters.continue_statements', 'tensorflow.python.autograph.converters.control_flow', 'tensorflow.python.autograph.lang', 'tensorflow.python.autograph.lang.directives', 'tensorflow.python.autograph.converters.directives', 'tensorflow.python.autograph.converters.function_scopes', 'tensorflow.python.autograph.converters.lists', 'tensorflow.python.autograph.converters.logical_expressions', 'tensorflow.python.autograph.converters.return_statements', 'tensorflow.python.autograph.converters.slices', 'tensorflow.python.autograph.core.config', 'tensorflow.python.autograph.core.config_lib', 'tensorflow.python.autograph.core.function_wrappers', 'tensorflow.python.autograph.core.naming', 'tensorflow.python.autograph.core.unsupported_features_checker', 'tensorflow.python.autograph.lang.special_functions', 'tensorflow.python.autograph.pyct.error_utils', 'tensorflow.python.training.experimental.loss_scaling_gradient_tape', 'tensorflow.python.distribute', 'tensorflow.python.distribute.cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.cluster_resolver', 'tensorflow.python.training.server_lib', 'tensorflow.python.distribute.cluster_resolver.gce_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.kubernetes_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.slurm_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tfconfig_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver', 'tensorflow.python.tpu', 'tensorflow.python.tpu.client', 'tensorflow.python.tpu.client.client', 'tensorflow.python.distribute.cross_device_ops', 'tensorflow.python.client.device_lib', 'tensorflow.core.framework.device_attributes_pb2', 'tensorflow.python._pywrap_device_lib', 'tensorflow.python.distribute.collective_util', 'tensorflow.python.distribute.cross_device_utils', 'tensorflow.python.distribute.all_reduce', 'tensorflow.python.ops.nccl_ops', 'tensorflow.python.ops.gen_nccl_ops', 'tensorflow.python.distribute.values', 'tensorflow.python.distribute.device_util', 'tensorflow.python.distribute.distribute_lib', 'tensorflow.python.distribute.distribution_strategy_context', 'tensorflow.python.distribute.numpy_dataset', 'tensorflow.python.distribute.reduce_util', 'tensorflow.python.ops.losses', 'tensorflow.python.ops.losses.loss_reduction', 'tensorflow.python.ops.losses.losses_impl', 'tensorflow.python.ops.confusion_matrix', 'tensorflow.python.ops.nn', 'tensorflow.python.ops.ctc_ops', 'tensorflow.python.ops.gen_ctc_ops', 'tensorflow.python.ops.inplace_ops', 'tensorflow.python.ops.linalg_ops', 'tensorflow.python.ops.map_fn', 'tensorflow.python.ops.nn_grad', 'tensorflow.python.ops.embedding_ops', 'tensorflow.python.ops.data_flow_grad', 'tensorflow.python.ops.nn_impl', 'tensorflow.python.ops.candidate_sampling_ops', 'tensorflow.python.ops.gen_candidate_sampling_ops', 'tensorflow.python.ops.losses.util', 'tensorflow.python.ops.weights_broadcast_ops', 'tensorflow.python.ops.sets', 'tensorflow.python.ops.sets_impl', 'tensorflow.python.ops.gen_set_ops', 'tensorflow.tools', 'tensorflow.tools.docs', 'tensorflow.tools.docs.doc_controls', 'tensorflow.python.ops.collective_ops', 'tensorflow.python.ops.gen_collective_ops', 'tensorflow.python.distribute.tpu_values', 'tensorflow.python.tpu.tpu', 'tensorflow.core.protobuf.tpu', 'tensorflow.core.protobuf.tpu.dynamic_padding_pb2', 'tensorflow.python.compiler', 'tensorflow.python.compiler.xla', 'tensorflow.python.compiler.xla.jit', 'tensorflow.python.compiler.xla.xla', 'tensorflow.compiler', 'tensorflow.compiler.jit', 'tensorflow.compiler.jit.ops', 'tensorflow.compiler.jit.ops.xla_ops', 'tensorflow.compiler.jit.ops.xla_ops_grad', 'tensorflow.python.distribute.summary_op_util', 'tensorflow.python.tpu.tpu_function', 'tensorflow.python.tpu.ops', 'tensorflow.python.tpu.ops.tpu_ops', 'tensorflow.python.ops.gen_tpu_ops', 'tensorflow.python.framework.kernels', 'tensorflow.core.framework.kernel_def_pb2', 'tensorflow.python.distribute.mirrored_strategy', 'tensorflow.python.distribute.input_lib', 'tensorflow.python.data.experimental.ops.distribute', 'tensorflow.python.data.ops.multi_device_iterator_ops', 'tensorflow.python.distribute.input_ops', 'tensorflow.python.distribute.multi_worker_util', 'tensorflow.python.distribute.distribute_coordinator_context', 'tensorflow.python.distribute.shared_variable_creator', 'tensorflow.python.training.coordinator', 'tensorflow.python.distribute.one_device_strategy', 'tensorflow.python.distribute.experimental', 'tensorflow.python.distribute.central_storage_strategy', 'tensorflow.python.distribute.parameter_server_strategy', 'tensorflow.python.training.device_setter', 'tensorflow.python.distribute.collective_all_reduce_strategy', 'tensorflow.python.distribute.tpu_strategy', 'tensorflow.compiler.xla', 'tensorflow.compiler.xla.experimental', 'tensorflow.compiler.xla.experimental.xla_sharding', 'tensorflow.compiler.xla.experimental.xla_sharding.xla_sharding', 'tensorflow.compiler.tf2xla', 'tensorflow.compiler.tf2xla.python', 'tensorflow.compiler.tf2xla.python.xla', 'tensorflow.compiler.tf2xla.ops', 'tensorflow.compiler.tf2xla.ops.gen_xla_ops', 'tensorflow.python.ops.bitwise_ops', 'tensorflow.compiler.xla.xla_data_pb2', 'tensorflow.python.tpu.device_assignment', 'tensorflow.python.tpu.topology', 'tensorflow.core.protobuf.tpu.topology_pb2', 'tensorflow.python.tpu.tpu_strategy_util', 'tensorflow.python.tpu.tpu_system_metadata', 'tensorflow.python.tpu.training_loop', 'tensorflow.python.tpu.tensor_tracer', 'tensorflow.python.platform.analytics', 'tensorflow.python.tpu.tensor_tracer_flags', 'tensorflow.python.tpu.tensor_tracer_report', 'tensorflow.python.tpu.tensor_tracer_pb2', 'tensorflow.python.training.experimental.loss_scale', 'tensorflow.python.ops.array_grad', 'tensorflow.python.ops.cudnn_rnn_grad', 'tensorflow.python.ops.gen_cudnn_rnn_ops', 'tensorflow.python.ops.manip_grad', 'tensorflow.python.ops.manip_ops', 'tensorflow.python.ops.gen_manip_ops', 'tensorflow.python.ops.math_grad', 'tensorflow.python.ops.random_grad', 'tensorflow.python.ops.rnn_grad', 'tensorflow.python.ops.gen_rnn_ops', 'tensorflow.python.ops.sparse_grad', 'tensorflow.python.ops.state_grad', 'tensorflow.python.ops.tensor_array_grad', 'tensorflow.python.ops.special_math_ops', 'opt_einsum', 'opt_einsum.blas', 'opt_einsum.helpers', 'opt_einsum.parser', 'opt_einsum.paths', 'opt_einsum.path_random', 'opt_einsum.contract', 'opt_einsum.backends', 'opt_einsum.backends.cupy', 'opt_einsum.sharing', 'opt_einsum.backends.dispatch', 'opt_einsum.backends.jax', 'opt_einsum.backends.tensorflow', 'opt_einsum.backends.theano', 'opt_einsum.backends.torch', 'opt_einsum._version', 'tensorflow.python.ops.gen_special_math_ops', 'tensorflow.python.eager.wrap_function', 'tensorflow.python.saved_model.nested_structure_coder', 'tensorflow.python.ops.batch_ops', 'tensorflow.python.ops.gen_batch_ops', 'tensorflow.python.ops.critical_section_ops', 'tensorflow.python.ops.gradients', 'tensorflow.python.eager.forwardprop', 'tensorflow.python.ops.gradients_impl', 'tensorflow.python.ops.control_flow_grad', 'tensorflow.python.ops.image_grad', 'tensorflow.python.ops.gen_image_ops', 'tensorflow.python.ops.linalg_grad', 'tensorflow.python.ops.linalg', 'tensorflow.python.ops.linalg.linalg_impl', 'tensorflow.python.ops.optional_grad', 'tensorflow.python.ops.histogram_ops', 'tensorflow.python.ops.lookup_ops', 'tensorflow.python.ops.gen_lookup_ops', 'tensorflow.python.ops.numerics', 'tensorflow.python.ops.partitioned_variables', 'tensorflow.python.ops.proto_ops', 'tensorflow.python.ops.gen_decode_proto_ops', 'tensorflow.python.ops.gen_encode_proto_ops', 'tensorflow.python.ops.stateless_random_ops', 'tensorflow.python.ops.template', 'tensorflow.python.training.tracking.util', 'tensorflow.python.training.saving.functional_saver', 'tensorflow.python.training.saving.saveable_hook', 'tensorflow.python.training.tracking.graph_view', 'tensorflow.python.training.optimizer', 'tensorflow.python.training.slot_creator', 'tensorflow.python.ops.parallel_for', 'tensorflow.python.ops.parallel_for.control_flow_ops', 'tensorflow.python.ops.parallel_for.pfor', 'tensorflow.python.ops.gen_spectral_ops', 'tensorflow.python.ops.parallel_for.gradients', 'tensorflow.python.compiler.tensorrt', 'tensorflow.python.compiler.tensorrt.trt_convert_windows', 'tensorflow.python.ops.initializers_ns', 'tensorflow.python.keras', 'tensorflow.python.keras.models', 'tensorflow.python.keras.backend', 'tensorflow.python.distribute.distribute_coordinator', 'tensorflow.python.training.monitored_session', 'tensorflow.python.ops.resources', 'tensorflow.python.summary.summary', 'google.protobuf.json_format', 'tensorflow.python.training.queue_runner', 'tensorflow.python.training.queue_runner_impl', 'tensorflow.core.protobuf.queue_runner_pb2', 'tensorflow.python.training.session_manager', 'tensorflow.python.keras.backend_config', 'tensorflow.python.ops.image_ops', 'tensorflow.python.ops.image_ops_impl', 'tensorflow.python.training.moving_averages', 'tensorflow.python.keras.metrics', 'tensorflow.python.keras.engine', 'tensorflow.python.keras.engine.base_layer', 'tensorflow.python.keras.constraints', 'tensorflow.python.keras.utils', 'tensorflow.python.keras.utils.generic_utils', 'tensorflow.python.keras.initializers', 'tensorflow.python.ops.init_ops_v2', 'tensorflow.python.keras.regularizers', 'tensorflow.python.keras.engine.base_layer_utils', 'tensorflow.python.keras.engine.input_spec', 'tensorflow.python.keras.engine.node', 'tensorflow.python.keras.mixed_precision', 'tensorflow.python.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.autocast_variable', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale_optimizer', 'tensorflow.python.keras.optimizers', 'tensorflow.python.keras.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.adadelta', 'tensorflow.python.keras.optimizer_v2.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.learning_rate_schedule', 'tensorflow.python.keras.utils.tf_utils', 'tensorflow.python.training.training_ops', 'tensorflow.python.training.gen_training_ops', 'tensorflow.python.keras.optimizer_v2.adagrad', 'tensorflow.python.keras.optimizer_v2.adam', 'tensorflow.python.keras.optimizer_v2.adamax', 'tensorflow.python.keras.optimizer_v2.ftrl', 'tensorflow.python.keras.optimizer_v2.gradient_descent', 'tensorflow.python.keras.optimizer_v2.nadam', 'tensorflow.python.keras.optimizer_v2.rmsprop', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale', 'tensorflow.python.keras.mixed_precision.experimental.policy', 'tensorflow.python.keras.mixed_precision.experimental.device_compatibility_check', 'tensorflow.python.framework.gpu_util', 'tensorflow.python.keras.saving', 'tensorflow.python.keras.saving.saved_model', 'tensorflow.python.keras.saving.saved_model.layer_serialization', 'tensorflow.python.keras.saving.saved_model.base_serialization', 'tensorflow.python.keras.saving.saved_model.json_utils', 'tensorflow.python.util.serialization', 'tensorflow.python.keras.saving.saved_model.constants', 'tensorflow.python.keras.saving.saved_model.save_impl', 'tensorflow.python.keras.saving.saving_utils', 'tensorflow.python.keras.losses', 'tensorflow.python.keras.utils.losses_utils', 'tensorflow.python.keras.utils.io_utils', 'tensorflow.python.keras.saving.saved_model.load', 'tensorflow.python.keras.saving.saved_model.utils', 'tensorflow.python.keras.saving.saved_model.serialized_attributes', 'tensorflow.python.keras.utils.metrics_utils', 'tensorflow.python.saved_model.load', 'tensorflow.python.saved_model.function_deserialization', 'tensorflow.python.framework.function_def_to_graph', 'tensorflow.python.saved_model.load_v1_in_v2', 'tensorflow.python.saved_model.loader_impl', 'tensorflow.core.protobuf.saved_model_pb2', 'tensorflow.python.saved_model.constants', 'tensorflow.python.saved_model.signature_def_utils', 'tensorflow.python.saved_model.signature_def_utils_impl', 'tensorflow.python.saved_model.signature_constants', 'tensorflow.python.saved_model.utils_impl', 'tensorflow.python.saved_model.signature_serialization', 'tensorflow.python.saved_model.function_serialization', 'tensorflow.python.keras.utils.layer_utils', 'tensorflow.python.keras.utils.conv_utils', 'tensorflow.python.keras.utils.version_utils', 'tensorflow.python.module', 'tensorflow.python.module.module', 'tensorflow.python.keras.saving.saved_model.metric_serialization', 'tensorflow.python.keras.engine.network', 'tensorflow.python.keras.engine.compile_utils', 'tensorflow.python.keras.engine.input_layer', 'tensorflow.python.keras.distribute', 'tensorflow.python.keras.distribute.distributed_training_utils', 'tensorflow.python.keras.callbacks', 'tensorflow.python.distribute.distributed_file_utils', 'tensorflow.python.keras.distribute.multi_worker_training_state', 'tensorflow.python.keras.utils.mode_keys', 'tensorflow.python.saved_model.model_utils', 'tensorflow.python.saved_model.model_utils.export_output', 'tensorflow.python.saved_model.model_utils.export_utils', 'tensorflow.python.saved_model.tag_constants', 'tensorflow.python.saved_model.model_utils.mode_keys', 'tensorflow.python.keras.utils.data_utils', 'multiprocessing.dummy', 'multiprocessing.dummy.connection', 'tensorflow.python.profiler.profiler_v2', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'mimetypes', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'tensorflow.python.keras.engine.training_utils', 'tensorflow.python.framework.composite_tensor_utils', 'tensorflow.python.keras.saving.hdf5_format', 'tensorflow.python.keras.saving.model_config', 'tensorflow.python.keras.saving.save', 'tensorflow.python.keras.saving.saved_model.save', 'tensorflow.python.saved_model.save', 'tensorflow.python.saved_model.builder_impl', 'tensorflow.python.saved_model.save_options', 'tensorflow.python.keras.saving.saved_model.network_serialization', 'tensorflow.python.keras.engine.sequential', 'tensorflow.python.keras.layers', 'tensorflow.python.keras.engine.base_preprocessing_layer', 'tensorflow.python.keras.engine.training_generator', 'tensorflow.python.keras.layers.preprocessing', 'tensorflow.python.keras.layers.preprocessing.image_preprocessing', 'tensorflow.python.ops.stateful_random_ops', 'tensorflow.python.ops.gen_stateful_random_ops', 'tensorflow.python.keras.layers.preprocessing.normalization', 'tensorflow.python.keras.layers.preprocessing.normalization_v1', 'tensorflow.python.keras.engine.base_preprocessing_layer_v1', 'tensorflow.python.keras.layers.preprocessing.text_vectorization', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding', 'tensorflow.python.keras.layers.preprocessing.index_lookup', 'tensorflow.python.keras.layers.preprocessing.text_vectorization_v1', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding_v1', 'tensorflow.python.keras.layers.preprocessing.index_lookup_v1', 'tensorflow.python.keras.layers.advanced_activations', 'tensorflow.python.keras.layers.convolutional', 'tensorflow.python.keras.activations', 'tensorflow.python.keras.layers.pooling', 'tensorflow.python.keras.layers.core', 'tensorflow.python.keras.layers.dense_attention', 'tensorflow.python.keras.layers.embeddings', 'tensorflow.python.keras.layers.local', 'tensorflow.python.keras.layers.merge', 'tensorflow.python.keras.layers.noise', 'tensorflow.python.keras.layers.normalization', 'tensorflow.python.keras.layers.normalization_v2', 'tensorflow.python.keras.layers.kernelized', 'tensorflow.python.keras.layers.recurrent', 'tensorflow.python.keras.layers.recurrent_v2', 'tensorflow.python.keras.layers.convolutional_recurrent', 'tensorflow.python.keras.layers.cudnn_recurrent', 'tensorflow.python.keras.layers.wrappers', 'tensorflow.python.keras.layers.rnn_cell_wrapper_v2', 'tensorflow.python.ops.rnn_cell_wrapper_impl', 'tensorflow.python.keras.layers.serialization', 'tensorflow.python.keras.engine.training', 'tensorflow.python.keras.engine.data_adapter', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'dateutil', 'dateutil._version', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'dateutil.relativedelta', 'dateutil._common', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'tensorflow.python.keras.saving.saved_model.model_serialization', 'tensorflow.python.profiler.traceme', 'tensorflow.python.profiler.internal._pywrap_traceme', 'tensorflow.python.keras.engine.training_v1', 'tensorflow.python.keras.engine.training_arrays', 'tensorflow.python.keras.engine.training_distributed', 'tensorflow.python.keras.engine.partial_batch_padding_handler', 'tensorflow.python.keras.engine.training_eager', 'tensorflow.python.feature_column', 'tensorflow.python.feature_column.feature_column_lib', 'tensorflow.python.feature_column.dense_features_v2', 'tensorflow.python.feature_column.dense_features', 'tensorflow.python.feature_column.feature_column_v2', 'tensorflow.python.feature_column.feature_column', 'tensorflow.python.feature_column.utils', 'tensorflow.python.layers', 'tensorflow.python.layers.base', 'tensorflow.python.training.checkpoint_utils', 'tensorflow.python.feature_column.sequence_feature_column', 'tensorflow.python.feature_column.serialization', 'tensorflow.python.layers.layers', 'tensorflow.python.layers.core', 'tensorflow.python.layers.convolutional', 'tensorflow.python.layers.pooling', 'tensorflow.python.layers.normalization', 'tensorflow.python.ops.gradient_checker_v2', 'tensorflow.python.ops.metrics', 'tensorflow.python.ops.metrics_impl', 'tensorflow.python.ops.distributions', 'tensorflow.python.ops.distributions.distributions', 'tensorflow.python.ops.distributions.bernoulli', 'tensorflow.python.ops.distributions.distribution', 'tensorflow.python.ops.distributions.kullback_leibler', 'tensorflow.python.ops.distributions.util', 'tensorflow.python.ops.distributions.beta', 'tensorflow.python.ops.distributions.categorical', 'tensorflow.python.ops.distributions.dirichlet', 'tensorflow.python.ops.distributions.dirichlet_multinomial', 'tensorflow.python.ops.distributions.exponential', 'tensorflow.python.ops.distributions.gamma', 'tensorflow.python.ops.distributions.laplace', 'tensorflow.python.ops.distributions.special_math', 'tensorflow.python.ops.distributions.multinomial', 'tensorflow.python.ops.distributions.normal', 'tensorflow.python.ops.distributions.student_t', 'tensorflow.python.ops.distributions.uniform', 'tensorflow.python.ops.linalg.linalg', 'tensorflow.python.ops.linalg.adjoint_registrations', 'tensorflow.python.ops.linalg.linear_operator', 'tensorflow.python.ops.linalg.linear_operator_algebra', 'tensorflow.python.ops.linalg.linear_operator_util', 'tensorflow.python.ops.linalg.linear_operator_adjoint', 'tensorflow.python.ops.linalg.linear_operator_block_diag', 'tensorflow.python.ops.linalg.linear_operator_circulant', 'tensorflow.python.ops.signal', 'tensorflow.python.ops.signal.fft_ops', 'tensorflow.python.ops.linalg.linear_operator_diag', 'tensorflow.python.ops.linalg.linear_operator_householder', 'tensorflow.python.ops.linalg.linear_operator_identity', 'tensorflow.python.ops.linalg.linear_operator_kronecker', 'tensorflow.python.ops.linalg.cholesky_registrations', 'tensorflow.python.ops.linalg.linear_operator_lower_triangular', 'tensorflow.python.ops.linalg.inverse_registrations', 'tensorflow.python.ops.linalg.linear_operator_addition', 'tensorflow.python.ops.linalg.linear_operator_full_matrix', 'tensorflow.python.ops.linalg.linear_operator_block_lower_triangular', 'tensorflow.python.ops.linalg.linear_operator_inversion', 'tensorflow.python.ops.linalg.matmul_registrations', 'tensorflow.python.ops.linalg.linear_operator_composition', 'tensorflow.python.ops.linalg.linear_operator_zeros', 'tensorflow.python.ops.linalg.registrations_util', 'tensorflow.python.ops.linalg.solve_registrations', 'tensorflow.python.ops.linalg.linear_operator_low_rank_update', 'tensorflow.python.ops.linalg.linear_operator_permutation', 'tensorflow.python.ops.linalg.linear_operator_toeplitz', 'tensorflow.python.ops.linalg.linear_operator_tridiag', 'tensorflow.python.ops.linalg.sparse', 'tensorflow.python.ops.linalg.sparse.sparse', 'tensorflow.python.ops.linalg.sparse.conjugate_gradient', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_grad', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_ops', 'tensorflow.python.ops.linalg.sparse.gen_sparse_csr_matrix_ops', 'tensorflow.python.ops.losses.losses', 'tensorflow.python.ops.signal.signal', 'tensorflow.python.ops.signal.dct_ops', 'tensorflow.python.ops.signal.mel_ops', 'tensorflow.python.ops.signal.shape_ops', 'tensorflow.python.ops.signal.util_ops', 'tensorflow.python.ops.signal.mfcc_ops', 'tensorflow.python.ops.signal.reconstruction_ops', 'tensorflow.python.ops.signal.spectral_ops', 'tensorflow.python.ops.signal.window_ops', 'tensorflow.python.profiler.profiler', 'tensorflow.core.profiler', 'tensorflow.core.profiler.tfprof_log_pb2', 'tensorflow.core.profiler.tfprof_output_pb2', 'tensorflow.python.profiler.model_analyzer', 'tensorflow.core.profiler.tfprof_options_pb2', 'tensorflow.python._pywrap_tfprof', 'tensorflow.python.profiler.option_builder', 'tensorflow.python.profiler.tfprof_logger', 'tensorflow.python.profiler.internal.flops_registry', 'tensorflow.python.profiler.profiler_client', 'tensorflow.python.saved_model.saved_model', 'tensorflow.python.saved_model.builder', 'tensorflow.python.saved_model.loader', 'tensorflow.python.saved_model.main_op', 'tensorflow.python.saved_model.main_op_impl', 'tensorflow.python.saved_model.method_name_updater', 'tensorflow.python.saved_model.utils', 'tensorflow.python.saved_model.simple_save', 'tensorflow.python.tpu.api', 'tensorflow.python.tpu.bfloat16', 'tensorflow.python.tpu.feature_column_v2', 'tensorflow.python.tpu.feature_column', 'tensorflow.python.tpu.tpu_embedding', 'tensorflow.core.protobuf.tpu.optimization_parameters_pb2', 'google.protobuf.wrappers_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_output_layout_pb2', 'tensorflow.python.tpu.tpu_optimizer', 'tensorflow.python.user_ops', 'tensorflow.python.user_ops.user_ops', 'tensorflow.python.ops.gen_user_ops', 'tensorflow.python.ops.gen_audio_ops', 'tensorflow.python.ops.gen_boosted_trees_ops', 'tensorflow.python.ops.gen_sendrecv_ops', 'tensorflow.python.training.training', 'tensorflow.python.ops.sdca_ops', 'tensorflow.python.ops.gen_sdca_ops', 'tensorflow.python.training.adadelta', 'tensorflow.python.training.adagrad', 'tensorflow.python.training.adagrad_da', 'tensorflow.python.training.proximal_adagrad', 'tensorflow.python.training.adam', 'tensorflow.python.training.ftrl', 'tensorflow.python.training.experimental.loss_scale_optimizer', 'tensorflow.python.training.experimental.mixed_precision', 'tensorflow.python.training.momentum', 'tensorflow.python.training.rmsprop', 'tensorflow.python.training.gradient_descent', 'tensorflow.python.training.proximal_gradient_descent', 'tensorflow.python.training.sync_replicas_optimizer', 'tensorflow.python.training.input', 'tensorflow.python.layers.utils', 'tensorflow.python.training.basic_loops', 'tensorflow.python.training.tracking.python_state', 'tensorflow.python.training.supervisor', 'tensorflow.python.training.warm_starting_util', 'tensorflow.python.training.checkpoint_ops', 'tensorflow.python.ops.gen_checkpoint_ops', 'tensorflow.core.example', 'tensorflow.core.example.example_pb2', 'tensorflow.core.example.feature_pb2', 'tensorflow.python.training.learning_rate_decay', 'tensorflow.python.training.quantize_training', 'tensorflow.python._pywrap_quantize_training', 'tensorflow.python.platform.resource_loader', 'tensorflow.python.platform.sysconfig', 'tensorflow.python.platform.test', 'tensorflow.python.framework.test_util', 'absl.testing', 'absl.testing.parameterized', 'absl.testing.absltest', 'shlex', 'absl._enum_module', 'absl.testing._pretty_print_reporter', 'absl.third_party', 'absl.third_party.unittest3_backport', 'absl.third_party.unittest3_backport.case', 'absl.third_party.unittest3_backport.result', 'absl.testing.xml_reporter', 'xml.sax', 'xml.sax.xmlreader', 'xml.sax.handler', 'xml.sax._exceptions', 'xml.sax.saxutils', 'unittest.mock', 'tensorflow.python._pywrap_stacktrace_handler', 'tensorflow.python._pywrap_util_port', 'tensorflow.python.ops.control_flow_util_v2', 'tensorflow.python.platform.googletest', 'tensorflow.python.platform.benchmark', 'tensorflow.core.util.test_log_pb2', 'tensorflow.python.util.protobuf', 'tensorflow.python.util.protobuf.compare', 'tensorflow.python.ops.gradient_checker', 'tensorflow.python.compat.v2_compat', 'tensorflow.python.ops.control_flow_v2_toggles', 'tensorflow.python.eager.remote', 'tensorflow.python.platform.remote_utils', 'tensorflow.python.ops.rnn', 'tensorflow.python.ops.rnn_cell_impl', 'tensorflow.python.ops.rnn_cell', 'tensorflow.python.debug', 'tensorflow.python.debug.lib', 'tensorflow.python.debug.lib.debug_data', 'tensorflow.python.debug.lib.debug_graphs', 'tensorflow.python.debug.lib.debug_gradients', 'tensorflow.python.debug.lib.debug_utils', 'tensorflow.python.debug.wrappers', 'tensorflow.python.debug.wrappers.dumping_wrapper', 'tensorflow.python.debug.wrappers.framework', 'tensorflow.python.debug.wrappers.grpc_wrapper', 'tensorflow.python.debug.lib.common', 'tensorflow.python.debug.wrappers.hooks', 'tensorflow.python.debug.wrappers.local_cli_wrapper', 'tensorflow.python.debug.cli', 'tensorflow.python.debug.cli.analyzer_cli', 'tensorflow.python.debug.cli.cli_config', 'tensorflow.python.debug.cli.debugger_cli_common', 'tensorflow.python.debug.cli.cli_shared', 'tensorflow.python.debug.cli.command_parser', 'tensorflow.python.debug.cli.tensor_format', 'tensorflow.python.debug.cli.evaluator', 'tensorflow.python.debug.cli.ui_factory', 'tensorflow.python.debug.lib.source_utils', 'tensorflow.python.debug.lib.profiling', 'tensorflow.python.debug.cli.profile_analyzer_cli', 'tensorflow.python.debug.lib.check_numerics_callback', 'tensorflow.core.protobuf.debug_event_pb2', 'tensorflow.python.debug.lib.op_callbacks_common', 'tensorflow.python.ops.gen_debug_ops', 'tensorflow.python.debug.lib.dumping_callback', 'tensorflow.python.debug.lib.debug_events_writer', 'tensorflow.python._pywrap_debug_events_writer', 'tensorflow.python.dlpack', 'tensorflow.python.dlpack.dlpack', 'tensorflow.python.compiler.mlir', 'tensorflow.python.compiler.mlir.mlir', 'tensorflow.python.pywrap_mlir', 'tensorflow.python._pywrap_mlir', 'tensorflow.python.tools', 'tensorflow.python.tools.module_util', 'tensorflow._api', 'tensorflow._api.v2', 'tensorflow._api.v2.audio', 'tensorflow._api.v2.autodiff', 'tensorflow._api.v2.autograph', 'tensorflow._api.v2.autograph.experimental', 'tensorflow._api.v2.bitwise', 'tensorflow._api.v2.compat', 'tensorflow._api.v2.compat.v1', 'tensorflow._api.v2.compat.v1.app', 'tensorflow._api.v2.compat.v1.audio', 'tensorflow._api.v2.compat.v1.autograph', 'tensorflow._api.v2.compat.v1.autograph.experimental', 'tensorflow._api.v2.compat.v1.bitwise', 'tensorflow._api.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v1.compat.v1', 'tensorflow._api.v2.compat.v1.compat.v1.compat', 'tensorflow._api.v2.compat.v1.config', 'tensorflow._api.v2.compat.v1.config.experimental', 'tensorflow._api.v2.compat.v1.config.optimizer', 'tensorflow._api.v2.compat.v1.config.threading', 'tensorflow._api.v2.compat.v1.data', 'tensorflow._api.v2.compat.v1.data.experimental', 'tensorflow._api.v2.compat.v1.debugging', 'tensorflow._api.v2.compat.v1.debugging.experimental', 'tensorflow._api.v2.compat.v1.distribute', 'tensorflow._api.v2.compat.v1.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v1.distribute.experimental', 'tensorflow._api.v2.compat.v1.distributions', 'tensorflow._api.v2.compat.v1.dtypes', 'tensorflow._api.v2.compat.v1.errors', 'tensorflow._api.v2.compat.v1.experimental', 'tensorflow._api.v2.compat.v1.feature_column', 'tensorflow._api.v2.compat.v1.gfile', 'tensorflow._api.v2.compat.v1.graph_util', 'tensorflow._api.v2.compat.v1.image', 'tensorflow._api.v2.compat.v1.initializers', 'tensorflow._api.v2.compat.v1.io', 'tensorflow._api.v2.compat.v1.io.gfile', 'tensorflow._api.v2.compat.v1.layers', 'tensorflow._api.v2.compat.v1.layers.experimental', 'tensorflow._api.v2.compat.v1.linalg', 'tensorflow._api.v2.compat.v1.linalg.experimental', 'tensorflow._api.v2.compat.v1.lite', 'tensorflow._api.v2.compat.v1.lite.constants', 'tensorflow.lite', 'tensorflow.lite.python', 'tensorflow.lite.python.lite_constants', 'tensorflow.lite.toco', 'tensorflow.lite.toco.toco_flags_pb2', 'tensorflow.lite.toco.types_pb2', 'tensorflow._api.v2.compat.v1.lite.experimental', 'tensorflow._api.v2.compat.v1.lite.experimental.nn', 'tensorflow.lite.python.lite', 'tensorflow.lite.experimental', 'tensorflow.lite.experimental.examples', 'tensorflow.lite.experimental.examples.lstm', 'tensorflow.lite.experimental.examples.lstm.rnn', 'tensorflow.lite.python.op_hint', 'tensorflow.lite.experimental.examples.lstm.rnn_cell', 'tensorflow.lite.experimental.microfrontend', 'tensorflow.lite.experimental.microfrontend.python', 'tensorflow.lite.experimental.microfrontend.python.ops', 'tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op', 'tensorflow.lite.experimental.microfrontend.ops', 'tensorflow.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op', '0294638c8bf50491b025b096f3dba0a1', 'tensorflow.lite.experimental.tensorboard', 'tensorflow.lite.experimental.tensorboard.ops_util', 'tensorflow.lite.python.wrap_toco', 'tensorflow.python._pywrap_toco_api', 'tensorflow.lite.python.convert', 'distutils.spawn', 'distutils.errors', 'distutils.debug', 'distutils.log', 'tensorflow.lite.python.util', 'tensorflow.python.framework.convert_to_constants', 'tensorflow.python.grappler', 'tensorflow.python.grappler.tf_optimizer', 'tensorflow.python._pywrap_tf_optimizer', 'tensorflow.python.grappler.cluster', 'tensorflow.core.grappler', 'tensorflow.core.grappler.costs', 'tensorflow.core.grappler.costs.op_performance_data_pb2', 'tensorflow.core.protobuf.device_properties_pb2', 'tensorflow.python._pywrap_tf_cluster', 'tensorflow.lite.toco.model_flags_pb2', 'tensorflow.lite.python.convert_saved_model', 'tensorflow.lite.python.interpreter', 'tensorflow.lite.python.optimize', 'tensorflow.lite.python.optimize.calibrator', 'tensorflow._api.v2.compat.v1.logging', 'tensorflow._api.v2.compat.v1.lookup', 'tensorflow._api.v2.compat.v1.lookup.experimental', 'tensorflow._api.v2.compat.v1.losses', 'tensorflow._api.v2.compat.v1.manip', 'tensorflow._api.v2.compat.v1.math', 'tensorflow._api.v2.compat.v1.math.special', 'tensorflow._api.v2.compat.v1.metrics', 'tensorflow._api.v2.compat.v1.mixed_precision', 'tensorflow._api.v2.compat.v1.mixed_precision.experimental', 'tensorflow._api.v2.compat.v1.mlir', 'tensorflow._api.v2.compat.v1.mlir.experimental', 'tensorflow._api.v2.compat.v1.nest', 'tensorflow._api.v2.compat.v1.nn', 'tensorflow._api.v2.compat.v1.nn.rnn_cell', 'tensorflow._api.v2.compat.v1.profiler', 'tensorflow._api.v2.compat.v1.python_io', 'tensorflow._api.v2.compat.v1.quantization', 'tensorflow._api.v2.compat.v1.queue', 'tensorflow._api.v2.compat.v1.ragged', 'tensorflow._api.v2.compat.v1.random', 'tensorflow._api.v2.compat.v1.random.experimental', 'tensorflow._api.v2.compat.v1.raw_ops', 'tensorflow._api.v2.compat.v1.resource_loader', 'tensorflow._api.v2.compat.v1.saved_model', 'tensorflow._api.v2.compat.v1.saved_model.builder', 'tensorflow._api.v2.compat.v1.saved_model.constants', 'tensorflow._api.v2.compat.v1.saved_model.experimental', 'tensorflow._api.v2.compat.v1.saved_model.loader', 'tensorflow._api.v2.compat.v1.saved_model.main_op', 'tensorflow._api.v2.compat.v1.saved_model.signature_constants', 'tensorflow._api.v2.compat.v1.saved_model.signature_def_utils', 'tensorflow._api.v2.compat.v1.saved_model.tag_constants', 'tensorflow._api.v2.compat.v1.saved_model.utils', 'tensorflow._api.v2.compat.v1.sets', 'tensorflow._api.v2.compat.v1.signal', 'tensorflow._api.v2.compat.v1.sparse', 'tensorflow._api.v2.compat.v1.spectral', 'tensorflow._api.v2.compat.v1.strings', 'tensorflow._api.v2.compat.v1.summary', 'tensorflow._api.v2.compat.v1.sysconfig', 'tensorflow._api.v2.compat.v1.test', 'tensorflow._api.v2.compat.v1.tpu', 'tensorflow._api.v2.compat.v1.tpu.experimental', 'tensorflow._api.v2.compat.v1.train', 'tensorflow._api.v2.compat.v1.train.experimental', 'tensorflow._api.v2.compat.v1.train.queue_runner', 'tensorflow._api.v2.compat.v1.user_ops', 'tensorflow._api.v2.compat.v1.version', 'tensorflow._api.v2.compat.v1.xla', 'tensorflow._api.v2.compat.v1.xla.experimental', 'tensorflow.python.keras.api', 'tensorflow.python.keras.api.keras', 'tensorflow.python.keras.api.keras.activations', 'tensorflow.python.util.module_wrapper', 'tensorflow.tools.compatibility', 'tensorflow.tools.compatibility.all_renames_v2', 'tensorflow.tools.compatibility.renames_v2', 'tensorflow.python.keras.api.keras.applications', 'tensorflow.python.keras.api.keras.applications.densenet', 'tensorflow.python.keras.applications', 'tensorflow.python.keras.applications.densenet', 'tensorflow.python.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api.keras.applications.inception_v3', 'tensorflow.python.keras.applications.inception_v3', 'tensorflow.python.keras.api.keras.applications.mobilenet', 'tensorflow.python.keras.applications.mobilenet', 'tensorflow.python.keras.api.keras.applications.mobilenet_v2', 'tensorflow.python.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api.keras.applications.nasnet', 'tensorflow.python.keras.applications.nasnet', 'tensorflow.python.keras.api.keras.applications.resnet', 'tensorflow.python.keras.applications.resnet', 'tensorflow.python.keras.api.keras.applications.resnet50', 'tensorflow.python.keras.api.keras.applications.resnet_v2', 'tensorflow.python.keras.applications.resnet_v2', 'tensorflow.python.keras.api.keras.applications.vgg16', 'tensorflow.python.keras.applications.vgg16', 'tensorflow.python.keras.api.keras.applications.vgg19', 'tensorflow.python.keras.applications.vgg19', 'tensorflow.python.keras.api.keras.applications.xception', 'tensorflow.python.keras.applications.xception', 'tensorflow.python.keras.api.keras.backend', 'tensorflow.python.keras.api.keras.callbacks', 'tensorflow.python.keras.callbacks_v1', 'tensorflow.python.keras.api.keras.constraints', 'tensorflow.python.keras.api.keras.datasets', 'tensorflow.python.keras.api.keras.datasets.boston_housing', 'tensorflow.python.keras.datasets', 'tensorflow.python.keras.datasets.boston_housing', 'tensorflow.python.keras.api.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar', 'tensorflow.python.keras.api.keras.datasets.cifar100', 'tensorflow.python.keras.datasets.cifar100', 'tensorflow.python.keras.api.keras.datasets.fashion_mnist', 'tensorflow.python.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api.keras.datasets.imdb', 'tensorflow.python.keras.datasets.imdb', 'tensorflow.python.keras.preprocessing', 'keras_preprocessing', 'tensorflow.python.keras.preprocessing.image', 'keras_preprocessing.image', 'keras_preprocessing.image.affine_transformations', 'keras_preprocessing.image.utils', 'keras_preprocessing.image.dataframe_iterator', 'keras_preprocessing.image.iterator', 'keras_preprocessing.image.directory_iterator', 'keras_preprocessing.image.image_data_generator', 'keras_preprocessing.image.numpy_array_iterator', 'tensorflow.python.keras.preprocessing.sequence', 'keras_preprocessing.sequence', 'tensorflow.python.keras.preprocessing.text', 'keras_preprocessing.text', 'tensorflow.python.keras.utils.all_utils', 'tensorflow.python.keras.utils.multi_gpu_utils', 'tensorflow.python.keras.utils.np_utils', 'tensorflow.python.keras.utils.vis_utils', 'tensorflow.python.keras.api.keras.datasets.mnist', 'tensorflow.python.keras.datasets.mnist', 'tensorflow.python.keras.api.keras.datasets.reuters', 'tensorflow.python.keras.datasets.reuters', 'tensorflow.python.keras.api.keras.estimator', 'tensorflow.python.keras.estimator', 'tensorflow.python.keras.api.keras.experimental', 'tensorflow.python.keras.premade', 'tensorflow.python.keras.premade.linear', 'tensorflow.python.keras.premade.wide_deep', 'tensorflow.python.keras.saving.saved_model_experimental', 'tensorflow.python.keras.api.keras.initializers', 'tensorflow.python.keras.api.keras.layers', 'tensorflow.python.keras.api.keras.layers.experimental', 'tensorflow.python.keras.api.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api.keras.losses', 'tensorflow.python.keras.api.keras.metrics', 'tensorflow.python.keras.api.keras.mixed_precision', 'tensorflow.python.keras.api.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.get_layer_policy', 'tensorflow.python.keras.api.keras.models', 'tensorflow.python.keras.api.keras.optimizers', 'tensorflow.python.keras.api.keras.optimizers.schedules', 'tensorflow.python.keras.api.keras.preprocessing', 'tensorflow.python.keras.api.keras.preprocessing.image', 'tensorflow.python.keras.api.keras.preprocessing.sequence', 'tensorflow.python.keras.api.keras.preprocessing.text', 'tensorflow.python.keras.api.keras.regularizers', 'tensorflow.python.keras.api.keras.utils', 'tensorflow.python.keras.api.keras.wrappers', 'tensorflow.python.keras.api.keras.wrappers.scikit_learn', 'tensorflow.python.keras.wrappers', 'tensorflow.python.keras.wrappers.scikit_learn', 'tensorflow.python.keras.api._v1', 'tensorflow.python.keras.api._v1.keras', 'tensorflow.python.keras.api._v1.keras.activations', 'tensorflow.python.keras.api._v1.keras.applications', 'tensorflow.python.keras.api._v1.keras.applications.densenet', 'tensorflow.python.keras.api._v1.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v1.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.inception_v3', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v1.keras.applications.nasnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet50', 'tensorflow.python.keras.api._v1.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.vgg16', 'tensorflow.python.keras.api._v1.keras.applications.vgg19', 'tensorflow.python.keras.api._v1.keras.applications.xception', 'tensorflow.python.keras.api._v1.keras.backend', 'tensorflow.python.keras.api._v1.keras.callbacks', 'tensorflow.python.keras.api._v1.keras.constraints', 'tensorflow.python.keras.api._v1.keras.datasets', 'tensorflow.python.keras.api._v1.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v1.keras.datasets.cifar10', 'tensorflow.python.keras.api._v1.keras.datasets.cifar100', 'tensorflow.python.keras.api._v1.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v1.keras.datasets.imdb', 'tensorflow.python.keras.api._v1.keras.datasets.mnist', 'tensorflow.python.keras.api._v1.keras.datasets.reuters', 'tensorflow.python.keras.api._v1.keras.estimator', 'tensorflow.python.keras.api._v1.keras.experimental', 'tensorflow.python.keras.api._v1.keras.initializers', 'tensorflow.python.keras.api._v1.keras.layers', 'tensorflow.python.keras.api._v1.keras.layers.experimental', 'tensorflow.python.keras.api._v1.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v1.keras.losses', 'tensorflow.python.keras.api._v1.keras.metrics', 'tensorflow.python.keras.api._v1.keras.mixed_precision', 'tensorflow.python.keras.api._v1.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v1.keras.models', 'tensorflow.python.keras.api._v1.keras.optimizers', 'tensorflow.python.keras.api._v1.keras.optimizers.schedules', 'tensorflow.python.keras.api._v1.keras.preprocessing', 'tensorflow.python.keras.api._v1.keras.preprocessing.image', 'tensorflow.python.keras.api._v1.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v1.keras.preprocessing.text', 'tensorflow.python.keras.api._v1.keras.regularizers', 'tensorflow.python.keras.api._v1.keras.utils', 'tensorflow.python.keras.api._v1.keras.wrappers', 'tensorflow.python.keras.api._v1.keras.wrappers.scikit_learn', 'tensorflow._api.v2.compat.v1.compat.v2', 'tensorflow._api.v2.compat.v1.compat.v2.compat', 'tensorflow._api.v2.compat.v2', 'tensorflow._api.v2.compat.v2.audio', 'tensorflow._api.v2.compat.v2.autodiff', 'tensorflow._api.v2.compat.v2.autograph', 'tensorflow._api.v2.compat.v2.autograph.experimental', 'tensorflow._api.v2.compat.v2.bitwise', 'tensorflow._api.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.compat.v1', 'tensorflow._api.v2.compat.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v2.compat.v2', 'tensorflow._api.v2.compat.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.config', 'tensorflow._api.v2.compat.v2.config.experimental', 'tensorflow._api.v2.compat.v2.config.optimizer', 'tensorflow._api.v2.compat.v2.config.threading', 'tensorflow._api.v2.compat.v2.data', 'tensorflow._api.v2.compat.v2.data.experimental', 'tensorflow._api.v2.compat.v2.debugging', 'tensorflow._api.v2.compat.v2.debugging.experimental', 'tensorflow._api.v2.compat.v2.distribute', 'tensorflow._api.v2.compat.v2.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v2.distribute.experimental', 'tensorflow._api.v2.compat.v2.dtypes', 'tensorflow._api.v2.compat.v2.errors', 'tensorflow._api.v2.compat.v2.experimental', 'tensorflow._api.v2.compat.v2.experimental.dlpack', 'tensorflow._api.v2.compat.v2.experimental.tensorrt', 'tensorflow._api.v2.compat.v2.feature_column', 'tensorflow._api.v2.compat.v2.graph_util', 'tensorflow._api.v2.compat.v2.image', 'tensorflow._api.v2.compat.v2.io', 'tensorflow._api.v2.compat.v2.io.gfile', 'tensorflow._api.v2.compat.v2.linalg', 'tensorflow._api.v2.compat.v2.linalg.experimental', 'tensorflow._api.v2.compat.v2.lite', 'tensorflow._api.v2.compat.v2.lite.experimental', 'tensorflow._api.v2.compat.v2.lookup', 'tensorflow._api.v2.compat.v2.lookup.experimental', 'tensorflow._api.v2.compat.v2.math', 'tensorflow._api.v2.compat.v2.math.special', 'tensorflow._api.v2.compat.v2.mixed_precision', 'tensorflow._api.v2.compat.v2.mixed_precision.experimental', 'tensorflow._api.v2.compat.v2.mlir', 'tensorflow._api.v2.compat.v2.mlir.experimental', 'tensorflow._api.v2.compat.v2.nest', 'tensorflow._api.v2.compat.v2.nn', 'tensorflow._api.v2.compat.v2.profiler', 'tensorflow._api.v2.compat.v2.profiler.experimental', 'tensorflow._api.v2.compat.v2.profiler.experimental.client', 'tensorflow._api.v2.compat.v2.profiler.experimental.server', 'tensorflow._api.v2.compat.v2.quantization', 'tensorflow._api.v2.compat.v2.queue', 'tensorflow._api.v2.compat.v2.ragged', 'tensorflow._api.v2.compat.v2.random', 'tensorflow._api.v2.compat.v2.random.experimental', 'tensorflow._api.v2.compat.v2.raw_ops', 'tensorflow._api.v2.compat.v2.saved_model', 'tensorflow._api.v2.compat.v2.sets', 'tensorflow._api.v2.compat.v2.signal', 'tensorflow._api.v2.compat.v2.sparse', 'tensorflow._api.v2.compat.v2.strings', 'tensorflow._api.v2.compat.v2.summary', 'tensorflow._api.v2.compat.v2.summary.experimental', 'tensorflow._api.v2.compat.v2.sysconfig', 'tensorflow._api.v2.compat.v2.test', 'tensorflow._api.v2.compat.v2.tpu', 'tensorflow._api.v2.compat.v2.tpu.experimental', 'tensorflow._api.v2.compat.v2.train', 'tensorflow._api.v2.compat.v2.train.experimental', 'tensorflow._api.v2.compat.v2.version', 'tensorflow._api.v2.compat.v2.xla', 'tensorflow._api.v2.compat.v2.xla.experimental', 'tensorboard', 'tensorboard.errors', 'tensorboard.lazy', 'tensorboard.version', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_shape_pb2', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.util.lazy_tensor_creator', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.event_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary._tf', 'tensorboard.summary._tf.summary', 'tensorflow.python.keras.api._v2', 'tensorflow.python.keras.api._v2.keras', 'tensorflow.python.keras.api._v2.keras.activations', 'tensorflow.python.keras.api._v2.keras.applications', 'tensorflow.python.keras.api._v2.keras.applications.densenet', 'tensorflow.python.keras.api._v2.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v2.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.inception_v3', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v2.keras.applications.nasnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet50', 'tensorflow.python.keras.api._v2.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.vgg16', 'tensorflow.python.keras.api._v2.keras.applications.vgg19', 'tensorflow.python.keras.api._v2.keras.applications.xception', 'tensorflow.python.keras.api._v2.keras.backend', 'tensorflow.python.keras.api._v2.keras.callbacks', 'tensorflow.python.keras.api._v2.keras.constraints', 'tensorflow.python.keras.api._v2.keras.datasets', 'tensorflow.python.keras.api._v2.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v2.keras.datasets.cifar10', 'tensorflow.python.keras.api._v2.keras.datasets.cifar100', 'tensorflow.python.keras.api._v2.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v2.keras.datasets.imdb', 'tensorflow.python.keras.api._v2.keras.datasets.mnist', 'tensorflow.python.keras.api._v2.keras.datasets.reuters', 'tensorflow.python.keras.api._v2.keras.estimator', 'tensorflow.python.keras.api._v2.keras.experimental', 'tensorflow.python.keras.api._v2.keras.initializers', 'tensorflow.python.keras.api._v2.keras.layers', 'tensorflow.python.keras.api._v2.keras.layers.experimental', 'tensorflow.python.keras.api._v2.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v2.keras.losses', 'tensorflow.python.keras.api._v2.keras.metrics', 'tensorflow.python.keras.api._v2.keras.mixed_precision', 'tensorflow.python.keras.api._v2.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v2.keras.models', 'tensorflow.python.keras.api._v2.keras.optimizers', 'tensorflow.python.keras.api._v2.keras.optimizers.schedules', 'tensorflow.python.keras.api._v2.keras.preprocessing', 'tensorflow.python.keras.api._v2.keras.preprocessing.image', 'tensorflow.python.keras.api._v2.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v2.keras.preprocessing.text', 'tensorflow.python.keras.api._v2.keras.regularizers', 'tensorflow.python.keras.api._v2.keras.utils', 'tensorflow.python.keras.api._v2.keras.wrappers', 'tensorflow.python.keras.api._v2.keras.wrappers.scikit_learn', 'tensorflow._api.v2.config', 'tensorflow._api.v2.config.experimental', 'tensorflow._api.v2.config.optimizer', 'tensorflow._api.v2.config.threading', 'tensorflow._api.v2.data', 'tensorflow._api.v2.data.experimental', 'tensorflow._api.v2.debugging', 'tensorflow._api.v2.debugging.experimental', 'tensorflow._api.v2.distribute', 'tensorflow._api.v2.distribute.cluster_resolver', 'tensorflow._api.v2.distribute.experimental', 'tensorflow._api.v2.dtypes', 'tensorflow._api.v2.errors', 'tensorflow._api.v2.experimental', 'tensorflow._api.v2.experimental.dlpack', 'tensorflow._api.v2.experimental.tensorrt', 'tensorflow._api.v2.feature_column', 'tensorflow._api.v2.graph_util', 'tensorflow._api.v2.image', 'tensorflow._api.v2.io', 'tensorflow._api.v2.io.gfile', 'tensorflow._api.v2.linalg', 'tensorflow._api.v2.linalg.experimental', 'tensorflow._api.v2.lite', 'tensorflow._api.v2.lite.experimental', 'tensorflow._api.v2.lookup', 'tensorflow._api.v2.lookup.experimental', 'tensorflow._api.v2.math', 'tensorflow._api.v2.math.special', 'tensorflow._api.v2.mixed_precision', 'tensorflow._api.v2.mixed_precision.experimental', 'tensorflow._api.v2.mlir', 'tensorflow._api.v2.mlir.experimental', 'tensorflow._api.v2.nest', 'tensorflow._api.v2.nn', 'tensorflow._api.v2.profiler', 'tensorflow._api.v2.profiler.experimental', 'tensorflow._api.v2.profiler.experimental.client', 'tensorflow._api.v2.profiler.experimental.server', 'tensorflow._api.v2.quantization', 'tensorflow._api.v2.queue', 'tensorflow._api.v2.ragged', 'tensorflow._api.v2.random', 'tensorflow._api.v2.random.experimental', 'tensorflow._api.v2.raw_ops', 'tensorflow._api.v2.saved_model', 'tensorflow._api.v2.sets', 'tensorflow._api.v2.signal', 'tensorflow._api.v2.sparse', 'tensorflow._api.v2.strings', 'tensorflow._api.v2.summary', 'tensorflow._api.v2.summary.experimental', 'tensorflow._api.v2.sysconfig', 'tensorflow._api.v2.test', 'tensorflow._api.v2.tpu', 'tensorflow._api.v2.tpu.experimental', 'tensorflow._api.v2.train', 'tensorflow._api.v2.train.experimental', 'tensorflow._api.v2.version', 'tensorflow._api.v2.xla', 'tensorflow._api.v2.xla.experimental', 'tensorflow.keras', 'tensorflow.keras.activations', 'tensorflow.keras.applications', 'tensorflow.keras.applications.densenet', 'tensorflow.keras.applications.imagenet_utils', 'tensorflow.keras.applications.inception_resnet_v2', 'tensorflow.keras.applications.inception_v3', 'tensorflow.keras.applications.mobilenet', 'tensorflow.keras.applications.mobilenet_v2', 'tensorflow.keras.applications.nasnet', 'tensorflow.keras.applications.resnet', 'tensorflow.keras.applications.resnet50', 'tensorflow.keras.applications.resnet_v2', 'tensorflow.keras.applications.vgg16', 'tensorflow.keras.applications.vgg19', 'tensorflow.keras.applications.xception', 'tensorflow.keras.backend', 'tensorflow.keras.callbacks', 'tensorflow.keras.constraints', 'tensorflow.keras.datasets', 'tensorflow.keras.datasets.boston_housing', 'tensorflow.keras.datasets.cifar10', 'tensorflow.keras.datasets.cifar100', 'tensorflow.keras.datasets.fashion_mnist', 'tensorflow.keras.datasets.imdb', 'tensorflow.keras.datasets.mnist', 'tensorflow.keras.datasets.reuters', 'tensorflow.keras.estimator', 'tensorflow.keras.experimental', 'tensorflow.keras.initializers', 'tensorflow.keras.layers', 'tensorflow.keras.layers.experimental', 'tensorflow.keras.layers.experimental.preprocessing', 'tensorflow.keras.losses', 'tensorflow.keras.metrics', 'tensorflow.keras.mixed_precision', 'tensorflow.keras.mixed_precision.experimental', 'tensorflow.keras.models', 'tensorflow.keras.optimizers', 'tensorflow.keras.optimizers.schedules', 'tensorflow.keras.preprocessing', 'tensorflow.keras.preprocessing.image', 'tensorflow.keras.preprocessing.sequence', 'tensorflow.keras.preprocessing.text', 'tensorflow.keras.regularizers', 'tensorflow.keras.utils', 'tensorflow.keras.wrappers', 'tensorflow.keras.wrappers.scikit_learn', 'keras.utils.losses_utils', 'keras.utils.metrics_utils', 'keras.utils.layer_utils', 'keras.utils.vis_utils', 'keras.models', 'keras.engine', 'keras.engine.input_layer', 'keras.engine.base_layer', 'keras.initializers', 'keras.legacy', 'keras.legacy.interfaces', 'keras.engine.network', 'keras.engine.saving', 'keras.losses', 'keras.optimizers', 'keras.engine.training', 'keras.engine.training_utils', 'keras.metrics', 'keras.layers', 'keras.layers.merge', 'keras.layers.core', 'keras.activations', 'keras.regularizers', 'keras.constraints', 'keras.layers.convolutional', 'keras.layers.pooling', 'keras.legacy.layers', 'keras.layers.local', 'keras.layers.recurrent', 'keras.layers.cudnn_recurrent', 'keras.layers.normalization', 'keras.layers.embeddings', 'keras.layers.noise', 'keras.layers.advanced_activations', 'keras.layers.wrappers', 'keras.layers.convolutional_recurrent', 'keras.engine.training_arrays', 'keras.callbacks', 'keras.callbacks.callbacks', 'keras.callbacks.tensorboard_v2', 'keras.engine.training_generator', 'keras.engine.sequential', 'keras.utils.multi_gpu_utils', 'keras.applications', 'keras_applications', 'keras_applications.vgg16', 'keras_applications.imagenet_utils', 'keras_applications.vgg19', 'keras_applications.resnet50', 'keras_applications.inception_v3', 'keras_applications.inception_resnet_v2', 'keras_applications.xception', 'keras_applications.mobilenet', 'keras_applications.mobilenet_v2', 'keras_applications.densenet', 'keras_applications.nasnet', 'keras_applications.resnet', 'keras_applications.resnet_common', 'keras_applications.resnet_v2', 'keras_applications.resnext', 'keras.applications.vgg16', 'keras.applications.vgg19', 'keras.applications.resnet50', 'keras.applications.inception_v3', 'keras.applications.inception_resnet_v2', 'keras.applications.xception', 'keras.applications.mobilenet', 'keras.applications.mobilenet_v2', 'keras.applications.densenet', 'keras.applications.nasnet', 'keras.applications.resnet', 'keras.applications.resnet_v2', 'keras.datasets', 'keras.datasets.mnist', 'keras.datasets.imdb', 'keras.preprocessing', 'keras.preprocessing.image', 'keras.preprocessing.sequence', 'keras.preprocessing.text', 'keras.datasets.reuters', 'keras.datasets.cifar10', 'keras.datasets.cifar', 'keras.datasets.cifar100', 'keras.datasets.boston_housing', 'keras.datasets.fashion_mnist', 'keras.wrappers', 'keras.wrappers.scikit_learn', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from C:\Users\Chelovek\.matplotlib\fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib:CONFIGDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib:(private) matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:matplotlib data path: D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:loaded rc file D:\Projects\dcase\venv\lib\site-packages\matplotlib\mpl-data\matplotlibrc
DEBUG:matplotlib:matplotlib version 3.2.1
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is win32
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', '_winapi', '_bootlocale', '_locale', 'encodings.cp1251', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'mpl_toolkits', 'pywin32_bootstrap', 'glob', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'fnmatch', 'posixpath', 'numpy', '__future__', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'ctypes', '_ctypes', 'struct', '_struct', 'ctypes._endian', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'textwrap', 'datetime', 'time', 'math', '_datetime', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'pathlib', 'errno', 'urllib', 'urllib.parse', 'pickle', '_compat_pickle', '_pickle', 'numpy.core.umath', 'numpy.core.numerictypes', 'numbers', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'collections.abc', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'platform', 'subprocess', 'signal', 'threading', 'traceback', 'linecache', 'tokenize', 'token', '_weakrefset', 'msvcrt', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'ast', '_ast', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'weakref', 'numpy.lib.format', 'numpy.lib._datasource', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'numpy.lib._iotools', 'numpy.lib.financial', 'decimal', '_decimal', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'cython_runtime', 'numpy.random._bit_generator', '_cython_0_29_17', 'numpy.random._common', 'secrets', 'base64', 'binascii', 'hmac', '_hashlib', 'hashlib', '_blake2', '_sha3', 'random', 'bisect', '_bisect', '_random', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'tqdm', 'tqdm.std', 'tqdm.utils', 'socket', '_socket', 'selectors', 'select', 'colorama', 'colorama.initialise', 'atexit', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'ctypes.wintypes', 'unicodedata', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'logging', 'string', '_string', 'common', 'argparse', 'gettext', 'locale', 'librosa', 'librosa.version', 'librosa._cache', 'joblib', 'joblib.memory', 'pydoc', 'inspect', 'dis', 'opcode', '_opcode', 'pkgutil', 'joblib.hashing', 'joblib._compat', 'joblib.func_inspect', 'joblib.logger', 'pprint', 'joblib.disk', 'joblib._memory_helpers', 'joblib._store_backends', 'json', 'json.decoder', 'json.scanner', '_json', 'json.encoder', 'joblib.backports', 'distutils', 'distutils.version', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'tempfile', '_multiprocessing', 'joblib.format_stack', 'joblib.my_exceptions', 'joblib._parallel_backends', 'gc', 'joblib.pool', 'joblib._memmapping_reducer', 'mmap', 'uuid', 'multiprocessing.pool', 'queue', '_queue', 'multiprocessing.util', 'joblib.executor', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_win32', 'multiprocessing.popen_spawn_win32', 'multiprocessing.spawn', 'runpy', 'multiprocessing.connection', 'multiprocessing.synchronize', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._win_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'librosa.core', 'librosa.core.time_frequency', 'six', 'librosa.util', 'librosa.util.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'typing', 'typing.io', 'typing.re', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_cython_0_29_14', '_ni_label', 'scipy.ndimage.morphology', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'difflib', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy._lib._util', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'numba', 'numba._version', 'numba.core', 'numba.core.config', 'yaml', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.loader', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.dumper', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.cyaml', '_yaml', 'llvmlite', 'llvmlite._version', 'llvmlite.binding', 'llvmlite.binding.dylib', 'llvmlite.binding.ffi', 'llvmlite.binding.common', 'llvmlite.utils', 'pkg_resources', 'zipfile', 'plistlib', 'xml', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'email', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources.py31compat', 'pkg_resources._vendor.appdirs', 'win32com', 'win32api', 'pythoncom', 'pywintypes', 'imp', '_win32sysloader', 'win32com.gen_py', 'win32com.shell', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'copy', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'pkg_resources.py2_warn', 'sysconfig', 'llvmlite.binding.executionengine', 'llvmlite.binding.targets', 'llvmlite.binding.object_file', 'llvmlite.binding.initfini', 'llvmlite.binding.linker', 'llvmlite.binding.module', 'llvmlite.binding.value', 'llvmlite.binding.context', 'llvmlite.binding.options', 'llvmlite.binding.passmanagers', 'llvmlite.binding.transforms', 'llvmlite.binding.analysis', 'llvmlite.ir', 'llvmlite.ir.types', 'llvmlite.ir._utils', 'llvmlite.ir.values', 'llvmlite.ir.module', 'llvmlite.ir.context', 'llvmlite.ir.builder', 'llvmlite.ir.instructions', 'llvmlite.ir.transforms', 'numba.testing', 'numba.testing.main', 'cProfile', '_lsprof', 'profile', 'numba.testing.loader', 'numba.testing._runtests', 'numba.core.types', 'numba.core.utils', 'timeit', 'numba.core.types.abstract', 'numba.core.types.containers', 'numba.core.types.common', 'numba.core.types.misc', 'numba.core.typeconv', 'numba.core.typeconv.castgraph', 'numba.core.errors', 'numba.core.types.functions', 'numba.core.types.iterators', 'numba.core.types.npytypes', 'numba.core.types.scalars', 'numba.np', 'numba.np.npdatetime_helpers', 'numba.core.types.function_type', 'numba.misc', 'numba.misc.special', 'numba.core.typing', 'numba.core.typing.context', 'numba.core.typeconv.rules', 'numba.core.typeconv.typeconv', 'numba.core.typeconv._typeconv', 'numba.core.typing.templates', 'numba.core.cpu_options', 'numba.core.typing.typeof', 'numba.np.numpy_support', 'numba.core.cgutils', 'numba.core.datamodel', 'numba.core.datamodel.manager', 'numba.core.datamodel.packer', 'numba.core.datamodel.registry', 'numba.core.datamodel.models', 'numba.core.decorators', 'numba.stencils', 'numba.stencils.stencil', 'numba.core.ir', 'numba.core.consts', 'numba.core.ir_utils', 'numba.core.extending', 'numba.core.imputils', 'numba.core.pythonapi', 'llvmlite.llvmpy', 'llvmlite.llvmpy.core', 'numba._helperlib', 'numba.core.lowering', 'numba._dynfunc', 'numba.core.debuginfo', 'numba.core.funcdesc', 'numba.core.itanium_mangler', 'numba.core.generators', 'numba.core.analysis', 'numba.core.controlflow', 'numba.core.postproc', 'numba.core.transforms', 'numba.core.rewrites', 'numba.core.rewrites.registry', 'numba.core.rewrites.static_getitem', 'numba.core.rewrites.static_raise', 'numba.core.rewrites.static_binop', 'numba.core.rewrites.ir_print', 'numba.core.rewrites.macros', 'numba.core.registry', 'numba.core.descriptors', 'numba.core.dispatcher', 'numba._dispatcher', 'numba.core.serialize', 'numba.core.bytecode', 'numba.core.compiler', 'numba.core.tracing', 'numba.core.interpreter', 'numba.core.dataflow', 'numba.core.byteflow', 'numba.core.unsafe', 'numba.core.unsafe.eh', 'numba.core.callconv', 'numba.core.base', 'numba.core.compiler_lock', 'numba.np.arrayobj', 'numba.misc.quicksort', 'numba.misc.mergesort', 'numba.cpython', 'numba.cpython.slicing', 'numba.cpython.unsafe', 'numba.cpython.unsafe.tuple', 'numba.cpython.builtins', 'numba.core.typing.builtins', 'numba.parfors', 'numba.parfors.parfor_lowering', 'numba.parfors.parfor', 'numba.core.typeinfer', 'numba.stencils.stencilparfor', 'numba.core.typing.npydecl', 'numba.parfors.array_analysis', 'numba.core.sigutils', 'numba.parfors.parfor_lowering_utils', 'numba.extending', 'numba.core.cpu', 'numba.core.callwrapper', 'numba.core.codegen', 'llvmlite.llvmpy.passes', 'numba.core.runtime', 'numba.core.runtime.nrt', 'numba.core.runtime.nrtdynmod', 'numba.core.runtime._nrt_python', 'numba.core.runtime.nrtopt', 'numba.misc.inspection', 'numba.core.externals', 'numba.core.intrinsics', 'numba.core.fastmathpass', 'numba.core.options', 'numba.core.entrypoints', 'numba.cpython.setobj', 'numba.cpython.listobj', 'numba.core.inline_closurecall', 'numba.cpython.rangeobj', 'numba.np.unsafe', 'numba.np.unsafe.ndarray', 'numba.core.compiler_machinery', 'numba.core.untyped_passes', 'numba.core.ssa', 'numba.core.typed_passes', 'numba.core.annotations', 'numba.core.annotations.type_annotations', 'numba.core.object_mode_passes', 'numba.core.pylowering', 'numba.core.caching', 'numba.misc.appdirs', 'numba.np.ufunc', 'numba.np.ufunc.decorators', 'numba.np.ufunc._internal', 'numba.np.ufunc.ufuncbuilder', 'numba.np.ufunc.sigparse', 'numba.np.ufunc.wrappers', 'numba.np.ufunc.parallel', 'numba.np.ufunc.dufunc', 'numba.np.ufunc.array_exprs', 'numba.experimental', 'numba.experimental.jitclass', 'numba.experimental.jitclass.decorators', 'numba.experimental.jitclass.base', 'numba.experimental.jitclass._box', 'numba.experimental.jitclass.boxing', 'numba.core.withcontexts', 'numba.cpython.charseq', 'numba.cpython.unicode', 'numba.cpython.hashing', 'numba.core.unsafe.bytes', 'numba.cpython.unicode_support', 'numba.typed', 'numba.typed.typeddict', 'numba.typed.dictobject', 'numba.typed.typedobjectutils', 'numba.core.boxing', 'numba.typed.dictimpl', 'numba.experimental.function_type', 'numba.core.ccallback', 'numba.core.typing.ctypes_utils', 'numba.typed.typedlist', 'numba.typed.listobject', 'librosa.util.exceptions', 'librosa.util.decorators', 'decorator', 'numba.decorators', 'librosa.util.files', 'librosa.util.matching', 'librosa.util.deprecation', 'librosa.util._nnls', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy._lib.messagestream', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy._lib.decorator', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'librosa.core.audio', 'soundfile', 'ctypes.util', '_soundfile', '_cffi_backend', 'audioread', 'audioread.ffdec', 'audioread.exceptions', 'audioread.version', 'scipy.signal', 'scipy.signal.sigtools', 'scipy.signal.windows', 'scipy.signal.windows.windows', 'scipy.signal.waveforms', 'scipy.signal._max_len_seq', 'scipy.signal._max_len_seq_inner', 'scipy.signal._upfirdn', 'scipy.signal._upfirdn_apply', 'scipy.signal.spline', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.ltisys', 'scipy.integrate', 'scipy.integrate.quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.signal.lti_conversion', 'scipy.signal.signaltools', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._savitzky_golay', 'scipy.signal.spectral', 'scipy.signal._spectral', 'scipy.signal.wavelets', 'scipy.signal._peak_finding', 'scipy.stats', 'scipy.stats.stats', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.stats._stats', 'scipy.stats._tukeylambda_stats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._rvs_sampling', 'scipy.stats._hypotests', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'scipy.signal._peak_finding_utils', 'resampy', 'resampy.version', 'resampy.filters', 'resampy.core', 'resampy.interpn', 'librosa.core.fft', 'encodings.cp437', 'librosa.core.spectrum', 'librosa.filters', 'librosa.core.pitch', 'librosa.core.constantq', 'librosa.core.harmonic', 'librosa.beat', 'librosa.onset', 'librosa.feature', 'librosa.feature.utils', 'librosa.feature.spectral', 'scipy.fftpack', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.convolve', 'scipy.fftpack.realtransforms', 'librosa.feature.rhythm', 'librosa.feature.inverse', 'librosa.decompose', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'sklearn.utils.fixes', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils.deprecation', 'sklearn.utils._estimator_html_repr', 'html', 'html.entities', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils.sparsefuncs', 'sklearn.utils._seq_dataset', 'sklearn.utils._random', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'array', 'sklearn.utils.multiclass', 'sklearn.preprocessing._discretization', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.metaestimators', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'librosa.segment', 'sklearn.cluster', 'sklearn.cluster._spectral', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.manifold', 'sklearn.manifold._locally_linear', 'sklearn.manifold._isomap', 'sklearn.utils.graph', 'sklearn.utils.graph_shortest_path', 'sklearn.manifold._mds', 'sklearn.isotonic', 'sklearn._isotonic', 'sklearn.manifold._spectral_embedding', 'sklearn.manifold._t_sne', 'sklearn.manifold._utils', 'sklearn.manifold._barnes_hut_tsne', 'sklearn.neighbors._quad_tree', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.cluster._kmeans', 'sklearn.cluster._k_means_fast', 'sklearn.cluster._k_means_lloyd', 'threadpoolctl', 'sklearn.cluster._k_means_elkan', 'sklearn.cluster._mean_shift', 'sklearn.cluster._affinity_propagation', 'sklearn.cluster._agglomerative', 'sklearn.cluster._hierarchical_fast', 'sklearn.utils._fast_dict', 'sklearn.cluster._feature_agglomeration', 'sklearn.cluster._dbscan', 'sklearn.cluster._dbscan_inner', 'sklearn.cluster._optics', 'sklearn.cluster._bicluster', 'sklearn.cluster._birch', 'sklearn.feature_extraction', 'sklearn.feature_extraction._dict_vectorizer', 'sklearn.feature_extraction._hash', 'sklearn.feature_extraction._hashing_fast', 'sklearn.feature_extraction.image', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction._stop_words', 'librosa.effects', 'librosa.output', 'csv', '_csv', 'scipy.io', 'scipy.io.matlab', 'scipy.io.matlab.mio', 'scipy.io.matlab.miobase', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.mio4', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.wavfile', 'librosa.sequence', 'keras_model', 'keras', 'keras.utils', 'keras.utils.np_utils', 'keras.utils.generic_utils', 'keras.utils.data_utils', 'tarfile', 'six.moves', 'six.moves.urllib', 'six.moves.urllib.error', 'urllib.error', 'urllib.response', 'six.moves.urllib.request', 'urllib.request', 'http', 'http.client', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'ssl', '_ssl', 'nturl2path', 'keras.utils.io_utils', 'h5py', 'h5py._errors', 'h5py._hl', 'h5py._hl.compat', 'h5py.version', 'h5py.h5', '_cython_0_29_13', 'h5py.defs', 'h5py._objects', 'h5py._conv', 'h5py.h5r', 'h5py.h5t', 'h5py.utils', 'h5py.h5py_warnings', 'h5py.h5z', 'h5py.h5a', 'h5py.h5s', 'h5py.h5p', 'h5py.h5ac', 'h5py._proxy', 'h5py.h5d', 'h5py.h5ds', 'h5py.h5f', 'h5py.h5g', 'h5py.h5i', 'h5py.h5fd', 'h5py.h5pl', 'h5py._hl.filters', 'h5py._hl.base', 'h5py._hl.files', 'h5py._hl.group', 'h5py.h5o', 'h5py.h5l', 'h5py._hl.dataset', 'h5py._hl.selections', 'h5py._hl.selections2', 'h5py._hl.datatype', 'h5py._hl.vds', 'h5py._hl.attrs', 'keras.utils.conv_utils', 'keras.backend', 'keras.backend.load_backend', 'keras.backend.common', 'keras.backend.tensorflow_backend', 'tensorflow', 'tensorflow.python', 'tensorflow.python.pywrap_tensorflow', 'tensorflow.python.platform', 'tensorflow.python.platform.self_check', 'tensorflow.python.platform.build_info', 'tensorflow.python.pywrap_dlopen_global_flags', 'tensorflow.python.pywrap_tensorflow_internal', 'swig_runtime_data4', '_pywrap_tensorflow_internal', 'tensorflow.core', 'tensorflow.core.framework', 'tensorflow.core.framework.graph_pb2', 'google.protobuf', 'google.protobuf.descriptor', 'google.protobuf.internal', 'google.protobuf.internal.api_implementation', 'google.protobuf.internal._api_implementation', 'google.protobuf.pyext', 'google.protobuf.internal.containers', 'google.protobuf.internal.enum_type_wrapper', 'google.protobuf.message', 'google.protobuf.pyext._message', 'google.protobuf.reflection', 'google.protobuf.message_factory', 'google.protobuf.descriptor_pool', 'google.protobuf.descriptor_database', 'google.protobuf.text_encoding', 'google.protobuf.pyext.cpp_message', 'google.protobuf.symbol_database', 'tensorflow.core.framework.function_pb2', 'tensorflow.core.framework.attr_value_pb2', 'tensorflow.core.framework.tensor_pb2', 'tensorflow.core.framework.resource_handle_pb2', 'tensorflow.core.framework.tensor_shape_pb2', 'google.protobuf.internal.well_known_types', 'tensorflow.core.framework.types_pb2', 'tensorflow.core.framework.node_def_pb2', 'tensorflow.core.framework.op_def_pb2', 'tensorflow.core.framework.versions_pb2', 'tensorflow.core.framework.summary_pb2', 'tensorflow.core.protobuf', 'tensorflow.core.protobuf.meta_graph_pb2', 'google.protobuf.any_pb2', 'tensorflow.core.protobuf.saved_object_graph_pb2', 'tensorflow.core.framework.variable_pb2', 'tensorflow.core.protobuf.struct_pb2', 'tensorflow.core.protobuf.trackable_object_graph_pb2', 'tensorflow.core.protobuf.saver_pb2', 'tensorflow.core.protobuf.config_pb2', 'tensorflow.core.framework.cost_graph_pb2', 'tensorflow.core.framework.step_stats_pb2', 'tensorflow.core.framework.allocation_description_pb2', 'tensorflow.core.framework.tensor_description_pb2', 'tensorflow.core.protobuf.cluster_pb2', 'tensorflow.core.protobuf.debug_pb2', 'tensorflow.core.protobuf.rewriter_config_pb2', 'tensorflow.core.protobuf.verifier_config_pb2', 'tensorflow.core.protobuf.tensorflow_server_pb2', 'tensorflow.core.protobuf.device_filters_pb2', 'tensorflow.core.util', 'tensorflow.core.util.event_pb2', 'tensorflow.python.framework', 'tensorflow.python.framework.framework_lib', 'tensorflow.python.framework.device', 'tensorflow.python.tf2', 'tensorflow.python.framework.device_spec', 'tensorflow.python.util', 'tensorflow.python.util.tf_export', 'tensorflow.python.util.tf_decorator', 'tensorflow.python.util.tf_stack', 'tensorflow.python._tf_stack', 'tensorflow.python.util.tf_inspect', 'tensorflow.python.framework.ops', 'tensorflow.python.pywrap_tfe', 'tensorflow.python._pywrap_tfe', 'tensorflow.python.client', 'tensorflow.python.client.pywrap_tf_session', 'tensorflow.python._pywrap_tf_session', 'tensorflow.python.eager', 'tensorflow.python.eager.context', 'absl', 'absl.logging', 'getpass', 'absl.flags', 'getopt', 'absl.flags._argument_parser', 'absl.flags._helpers', 'absl.flags._defines', 'absl.flags._exceptions', 'absl.flags._flag', 'absl._collections_abc', 'absl.flags._flagvalues', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'absl.flags._validators', 'absl.logging.converter', 'tensorflow.python.eager.executor', 'tensorflow.python.eager.monitoring', 'tensorflow.python.framework.c_api_util', 'tensorflow.core.framework.api_def_pb2', 'tensorflow.python.util.compat', 'tensorflow.python.util.tf_contextlib', 'tensorflow.python.util.is_in_graph_mode', 'tensorflow.python.eager.core', 'tensorflow.python.framework.errors', 'tensorflow.python.framework.errors_impl', 'tensorflow.core.lib', 'tensorflow.core.lib.core', 'tensorflow.core.lib.core.error_codes_pb2', 'tensorflow.core.protobuf.error_codes_pb2', 'tensorflow.python._pywrap_py_exception_registry', 'tensorflow.python.framework.error_interpolation', 'tensorflow.core.protobuf.graph_debug_info_pb2', 'tensorflow.python.util.deprecation', 'tensorflow.python.platform.tf_logging', 'tensorflow.python.util.decorator_utils', 'tensorflow.python.eager.tape', 'tensorflow.python.util.lazy_loader', 'tensorflow.python.framework.composite_tensor', 'tensorflow.python._pywrap_utils', 'tensorflow.python.util.nest', 'wrapt', 'wrapt.wrappers', 'wrapt._wrappers', 'wrapt.decorators', 'wrapt.importer', 'tensorflow.python.framework.dtypes', 'tensorflow.python._pywrap_bfloat16', 'tensorflow.python._dtypes', 'tensorflow.python.framework.indexed_slices', 'tensorflow.python.framework.tensor_conversion_registry', 'tensorflow.python.framework.tensor_like', 'tensorflow.python.framework.tensor_shape', 'tensorflow.python.framework.type_spec', 'tensorflow.python.framework.registry', 'tensorflow.python.framework.traceable_stack', 'tensorflow.python.framework.versions', 'tensorflow.python.ops', 'tensorflow.python.ops.control_flow_util', 'tensorflow.python.platform.app', 'absl.app', 'pdb', 'cmd', 'bdb', 'code', 'codeop', 'absl.command_name', 'faulthandler', 'tensorflow.python.platform.flags', 'tensorflow.python.util.function_utils', 'tensorflow.python.util.lock_util', 'tensorflow.python.util.memory', 'tensorflow.python.util.object_identity', 'tensorflow.python.framework.sparse_tensor', 'tensorflow.python.framework.constant_op', 'tensorflow.python.eager.execute', 'google.protobuf.text_format', 'encodings.raw_unicode_escape', 'encodings.unicode_escape', 'google.protobuf.internal.decoder', 'google.protobuf.internal.encoder', 'google.protobuf.internal.wire_format', 'google.protobuf.internal.type_checkers', 'tensorflow.python.framework.tensor_util', 'tensorflow.python.framework.tensor_spec', 'tensorflow.python.framework.common_shapes', 'tensorflow.python.ops.gen_sparse_ops', 'tensorflow.python.framework.op_def_registry', 'tensorflow.python._op_def_registry', 'tensorflow.python.framework.op_def_library', 'tensorflow.python.framework.op_callbacks', 'tensorflow.python.util.dispatch', 'tensorflow.python.framework.random_seed', 'tensorflow.python.framework.importer', 'tensorflow.python.framework.function', 'tensorflow.python.framework.graph_to_function_def', 'tensorflow.python.ops.array_ops', 'tensorflow.python.ops.gen_array_ops', 'tensorflow.python.ops.gen_math_ops', 'tensorflow.python.ops.resource_variable_ops', 'tensorflow.python.framework.auto_control_deps_utils', 'tensorflow.python.framework.cpp_shape_inference_pb2', 'tensorflow.python.ops.gen_logging_ops', 'tensorflow.python.ops.gen_resource_variable_ops', 'tensorflow.python.ops.gen_state_ops', 'tensorflow.python.ops.math_ops', 'tensorflow.python.framework.graph_util', 'tensorflow.python.framework.graph_util_impl', 'tensorflow.python.ops.gen_data_flow_ops', 'tensorflow.python.ops.gen_nn_ops', 'tensorflow.python.ops.state_ops', 'tensorflow.python.ops.variables', 'tensorflow.python.ops.control_flow_ops', 'tensorflow.core.protobuf.control_flow_pb2', 'tensorflow.python.ops.gen_control_flow_ops', 'tensorflow.python.ops.tensor_array_ops', 'tensorflow.python.ops.list_ops', 'tensorflow.python.ops.gen_list_ops', 'tensorflow.python.util.tf_should_use', 'tensorflow.python.training', 'tensorflow.python.training.tracking', 'tensorflow.python.training.tracking.base', 'tensorflow.python.ops.gen_io_ops', 'tensorflow.python.training.saving', 'tensorflow.python.training.saving.saveable_object', 'tensorflow.python.ops.variable_scope', 'tensorflow.python.client.session', 'tensorflow.python.ops.session_ops', 'tensorflow.python.training.experimental', 'tensorflow.python.training.experimental.mixed_precision_global_state', 'tensorflow.python.ops.init_ops', 'tensorflow.python.ops.gen_linalg_ops', 'tensorflow.python.ops.linalg_ops_impl', 'tensorflow.python.ops.random_ops', 'tensorflow.python.ops.gen_random_ops', 'tensorflow.python.framework.load_library', 'tensorflow.python._pywrap_python_op_gen', 'tensorflow.python.lib', 'tensorflow.python.lib.io', 'tensorflow.python.lib.io.file_io', 'tensorflow.python._pywrap_file_io', 'tensorflow.python.framework.config', 'tensorflow.python.client.client_lib', 'tensorflow.python.ops.standard_ops', 'tensorflow.python.autograph', 'tensorflow.python.autograph.operators', 'tensorflow.python.autograph.operators.control_flow', 'tensorflow.python.autograph.operators.py_builtins', 'tensorflow.python.autograph.utils', 'tensorflow.python.autograph.utils.context_managers', 'tensorflow.python.autograph.utils.misc', 'tensorflow.python.autograph.utils.py_func', 'tensorflow.python.ops.script_ops', 'tensorflow.python._pywrap_py_func', 'tensorflow.python.eager.backprop', 'tensorflow.python.eager.backprop_util', 'tensorflow.python.eager.imperative_grad', 'tensorflow.python.ops.unconnected_gradients', 'tensorflow.python.ops.check_ops', 'tensorflow.python.ops.default_gradient', 'tensorflow.python.framework.func_graph', 'tensorflow.python.eager.graph_only_ops', 'tensorflow.python.framework.auto_control_deps', 'tensorflow.python.ops.custom_gradient', 'tensorflow.python.ops.op_selector', 'tensorflow.python.ops.gen_script_ops', 'tensorflow.python.autograph.utils.tensor_list', 'tensorflow.python.autograph.utils.testing', 'tensorflow.python.autograph.utils.type_check', 'tensorflow.python.autograph.utils.tensors', 'tensorflow.python.data', 'tensorflow.python.data.experimental', 'tensorflow.python.data.experimental.ops', 'tensorflow.python.data.experimental.ops.batching', 'tensorflow.python.data.ops', 'tensorflow.python.data.ops.dataset_ops', 'tensorflow.python.compat', 'tensorflow.python.compat.compat', 'tensorflow.python.data.experimental.ops.distribute_options', 'tensorflow.python.data.util', 'tensorflow.python.data.util.options', 'tensorflow.python.data.experimental.ops.optimization_options', 'tensorflow.python.data.experimental.ops.stats_options', 'tensorflow.python.data.experimental.ops.stats_aggregator', 'tensorflow.python.ops.gen_experimental_dataset_ops', 'tensorflow.python.ops.summary_ops_v2', 'tensorflow.python.eager.profiler', 'tensorflow.python._pywrap_events_writer', 'tensorflow.python.platform.gfile', 'tensorflow.python.profiler', 'tensorflow.python.profiler.internal', 'tensorflow.python.profiler.internal._pywrap_profiler', 'tensorflow.python.framework.smart_cond', 'tensorflow.python.ops.gen_summary_ops', 'tensorflow.python.ops.summary_op_util', 'tensorflow.python.training.training_util', 'tensorflow.python.framework.graph_io', 'tensorflow.python.data.experimental.ops.threading_options', 'tensorflow.python.data.ops.iterator_ops', 'tensorflow.python.data.ops.optional_ops', 'tensorflow.python.data.util.structure', 'tensorflow.python.data.util.nest', 'tensorflow.python.ops.ragged', 'tensorflow.python.ops.ragged.ragged_array_ops', 'tensorflow.python.ops.sort_ops', 'tensorflow.python.ops.nn_ops', 'tensorflow.python.platform.device_context', 'tensorflow.python.ops.ragged.ragged_functional_ops', 'tensorflow.python.ops.ragged.ragged_config', 'tensorflow.python.ops.ragged.ragged_tensor', 'tensorflow.python.ops.gen_ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_tensor_value', 'tensorflow.python.ops.ragged.ragged_util', 'tensorflow.python.ops.gen_ragged_math_ops', 'tensorflow.python.ops.ragged.segment_id_ops', 'tensorflow.python.ops.ragged.ragged_math_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_ops', 'tensorflow.python.ops.ragged.ragged_gather_ops', 'tensorflow.python.ops.gen_ragged_array_ops', 'tensorflow.python.ops.ragged.ragged_batch_gather_with_default_op', 'tensorflow.python.ops.ragged.ragged_dispatch', 'tensorflow.python.ops.clip_ops', 'tensorflow.python.ops.data_flow_ops', 'tensorflow.python.lib.io.python_io', 'tensorflow.python.lib.io.tf_record', 'tensorflow.python._pywrap_record_io', 'tensorflow.python.ops.gen_bitwise_ops', 'tensorflow.python.ops.parsing_ops', 'tensorflow.python.ops.gen_parsing_ops', 'tensorflow.python.ops.parsing_config', 'tensorflow.python.ops.sparse_ops', 'tensorflow.python.ops.string_ops', 'tensorflow.python.ops.gen_string_ops', 'tensorflow.python.ops.ragged.ragged_concat_ops', 'tensorflow.python.ops.ragged.ragged_squeeze_op', 'tensorflow.python.ops.ragged.ragged_string_ops', 'tensorflow.python.ops.ragged.ragged_tensor_shape', 'tensorflow.python.ops.ragged.ragged_where_op', 'tensorflow.python.ops.ragged.ragged_operators', 'tensorflow.python.ops.ragged.ragged_getitem', 'tensorflow.python.ops.ragged.ragged_conversion_ops', 'tensorflow.python.ops.ragged.ragged_factory_ops', 'tensorflow.python.ops.ragged.ragged_map_ops', 'tensorflow.python.ops.gen_dataset_ops', 'tensorflow.python.training.saver', 'tensorflow.python.framework.meta_graph', 'tensorflow.python.ops.io_ops', 'tensorflow.python.training.checkpoint_management', 'tensorflow.python.training.checkpoint_state_pb2', 'tensorflow.python.training.py_checkpoint_reader', 'tensorflow.python._pywrap_checkpoint_reader', 'tensorflow.python.training.saving.saveable_object_util', 'tensorflow.python.data.util.random_seed', 'tensorflow.python.data.util.traverse', 'tensorflow.python.eager.function', 'tensorflow.python.eager.forwardprop_util', 'tensorflow.python.ops.functional_ops', 'tensorflow.python.ops.gen_functional_ops', 'tensorflow.python.ops.gradients_util', 'tensorflow.python.ops.control_flow_state', 'tensorflow.python.ops.control_flow_v2_func_graphs', 'tensorflow.python.training.tracking.tracking', 'tensorflow.python.eager.def_function', 'tensorflow.python.eager.lift_to_graph', 'tensorflow.python.training.tracking.data_structures', 'tensorflow.python.saved_model', 'tensorflow.python.saved_model.revived_types', 'tensorflow.python.training.tracking.layer_utils', 'tensorflow.python.data.util.convert', 'tensorflow.python.data.experimental.ops.cardinality', 'tensorflow.python.data.experimental.ops.counter', 'tensorflow.python.data.experimental.ops.scan_ops', 'tensorflow.python.data.experimental.ops.enumerate_ops', 'tensorflow.python.data.experimental.ops.error_ops', 'tensorflow.python.data.experimental.ops.get_single_element', 'tensorflow.python.data.experimental.ops.grouping', 'tensorflow.python.data.experimental.ops.interleave_ops', 'tensorflow.python.data.experimental.ops.random_ops', 'tensorflow.python.data.ops.readers', 'tensorflow.python.ops.gen_stateless_random_ops', 'tensorflow.python.data.experimental.ops.iterator_ops', 'tensorflow.python.training.basic_session_run_hooks', 'tensorflow.python.client.timeline', 'tensorflow.python.training.session_run_hook', 'tensorflow.python.training.summary_io', 'tensorflow.python.summary', 'tensorflow.python.summary.summary_iterator', 'tensorflow.python.summary.writer', 'tensorflow.python.summary.writer.writer', 'tensorflow.python.summary.plugin_asset', 'tensorflow.python.summary.writer.event_file_writer', 'tensorflow.python.summary.writer.event_file_writer_v2', 'tensorflow.python.summary.writer.writer_cache', 'tensorflow.python.data.experimental.ops.parsing_ops', 'tensorflow.python.data.experimental.ops.prefetching_ops', 'tensorflow.python.data.experimental.ops.readers', 'gzip', 'tensorflow.python.data.experimental.ops.resampling', 'tensorflow.python.ops.logging_ops', 'tensorflow.python.data.experimental.ops.shuffle_ops', 'tensorflow.python.data.experimental.ops.stats_ops', 'tensorflow.python.data.experimental.ops.take_while_ops', 'tensorflow.python.data.experimental.ops.unique', 'tensorflow.python.data.experimental.ops.writers', 'tensorflow.python.util.all_util', 'tensorflow.python.autograph.operators.special_values', 'tensorflow.python.autograph.utils.ag_logging', 'tensorflow.python.autograph.utils.compat_util', 'tensorflow.python.autograph.operators.data_structures', 'tensorflow.python.autograph.operators.exceptions', 'tensorflow.python.autograph.operators.logical', 'tensorflow.python.autograph.operators.slices', 'tensorflow.python.autograph.core', 'tensorflow.python.autograph.core.converter', 'tensorflow.python.autograph.pyct', 'tensorflow.python.autograph.pyct.anno', 'gast', 'gast.gast', 'gast.ast3', 'gast.astn', 'tensorflow.python.autograph.pyct.ast_util', 'tensorflow.python.autograph.pyct.parser', 'astunparse', 'astunparse.unparser', 'astunparse.printer', 'tensorflow.python.autograph.pyct.errors', 'tensorflow.python.autograph.pyct.inspect_utils', 'tensorflow.python.autograph.pyct.qual_names', 'tensorflow.python.autograph.pyct.cfg', 'tensorflow.python.autograph.pyct.templates', 'tensorflow.python.autograph.pyct.transformer', 'tensorflow.python.autograph.pyct.loader', 'tensorflow.python.autograph.pyct.origin_info', 'tensorflow.python.autograph.pyct.pretty_printer', 'termcolor', 'tensorflow.python.autograph.pyct.static_analysis', 'tensorflow.python.autograph.pyct.static_analysis.activity', 'tensorflow.python.autograph.pyct.static_analysis.annos', 'tensorflow.python.autograph.pyct.static_analysis.liveness', 'tensorflow.python.autograph.pyct.static_analysis.reaching_definitions', 'tensorflow.python.autograph.impl', 'tensorflow.python.autograph.impl.api', 'tensorflow.python.autograph.core.ag_ctx', 'tensorflow.python.autograph.impl.conversion', 'tensorflow.python.autograph.converters', 'tensorflow.python.autograph.converters.arg_defaults', 'tensorflow.python.autograph.converters.asserts', 'tensorflow.python.autograph.converters.break_statements', 'tensorflow.python.autograph.converters.call_trees', 'tensorflow.python.autograph.converters.conditional_expressions', 'tensorflow.python.autograph.converters.continue_statements', 'tensorflow.python.autograph.converters.control_flow', 'tensorflow.python.autograph.lang', 'tensorflow.python.autograph.lang.directives', 'tensorflow.python.autograph.converters.directives', 'tensorflow.python.autograph.converters.function_scopes', 'tensorflow.python.autograph.converters.lists', 'tensorflow.python.autograph.converters.logical_expressions', 'tensorflow.python.autograph.converters.return_statements', 'tensorflow.python.autograph.converters.slices', 'tensorflow.python.autograph.core.config', 'tensorflow.python.autograph.core.config_lib', 'tensorflow.python.autograph.core.function_wrappers', 'tensorflow.python.autograph.core.naming', 'tensorflow.python.autograph.core.unsupported_features_checker', 'tensorflow.python.autograph.lang.special_functions', 'tensorflow.python.autograph.pyct.error_utils', 'tensorflow.python.training.experimental.loss_scaling_gradient_tape', 'tensorflow.python.distribute', 'tensorflow.python.distribute.cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.cluster_resolver', 'tensorflow.python.training.server_lib', 'tensorflow.python.distribute.cluster_resolver.gce_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.kubernetes_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.slurm_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tfconfig_cluster_resolver', 'tensorflow.python.distribute.cluster_resolver.tpu_cluster_resolver', 'tensorflow.python.tpu', 'tensorflow.python.tpu.client', 'tensorflow.python.tpu.client.client', 'tensorflow.python.distribute.cross_device_ops', 'tensorflow.python.client.device_lib', 'tensorflow.core.framework.device_attributes_pb2', 'tensorflow.python._pywrap_device_lib', 'tensorflow.python.distribute.collective_util', 'tensorflow.python.distribute.cross_device_utils', 'tensorflow.python.distribute.all_reduce', 'tensorflow.python.ops.nccl_ops', 'tensorflow.python.ops.gen_nccl_ops', 'tensorflow.python.distribute.values', 'tensorflow.python.distribute.device_util', 'tensorflow.python.distribute.distribute_lib', 'tensorflow.python.distribute.distribution_strategy_context', 'tensorflow.python.distribute.numpy_dataset', 'tensorflow.python.distribute.reduce_util', 'tensorflow.python.ops.losses', 'tensorflow.python.ops.losses.loss_reduction', 'tensorflow.python.ops.losses.losses_impl', 'tensorflow.python.ops.confusion_matrix', 'tensorflow.python.ops.nn', 'tensorflow.python.ops.ctc_ops', 'tensorflow.python.ops.gen_ctc_ops', 'tensorflow.python.ops.inplace_ops', 'tensorflow.python.ops.linalg_ops', 'tensorflow.python.ops.map_fn', 'tensorflow.python.ops.nn_grad', 'tensorflow.python.ops.embedding_ops', 'tensorflow.python.ops.data_flow_grad', 'tensorflow.python.ops.nn_impl', 'tensorflow.python.ops.candidate_sampling_ops', 'tensorflow.python.ops.gen_candidate_sampling_ops', 'tensorflow.python.ops.losses.util', 'tensorflow.python.ops.weights_broadcast_ops', 'tensorflow.python.ops.sets', 'tensorflow.python.ops.sets_impl', 'tensorflow.python.ops.gen_set_ops', 'tensorflow.tools', 'tensorflow.tools.docs', 'tensorflow.tools.docs.doc_controls', 'tensorflow.python.ops.collective_ops', 'tensorflow.python.ops.gen_collective_ops', 'tensorflow.python.distribute.tpu_values', 'tensorflow.python.tpu.tpu', 'tensorflow.core.protobuf.tpu', 'tensorflow.core.protobuf.tpu.dynamic_padding_pb2', 'tensorflow.python.compiler', 'tensorflow.python.compiler.xla', 'tensorflow.python.compiler.xla.jit', 'tensorflow.python.compiler.xla.xla', 'tensorflow.compiler', 'tensorflow.compiler.jit', 'tensorflow.compiler.jit.ops', 'tensorflow.compiler.jit.ops.xla_ops', 'tensorflow.compiler.jit.ops.xla_ops_grad', 'tensorflow.python.distribute.summary_op_util', 'tensorflow.python.tpu.tpu_function', 'tensorflow.python.tpu.ops', 'tensorflow.python.tpu.ops.tpu_ops', 'tensorflow.python.ops.gen_tpu_ops', 'tensorflow.python.framework.kernels', 'tensorflow.core.framework.kernel_def_pb2', 'tensorflow.python.distribute.mirrored_strategy', 'tensorflow.python.distribute.input_lib', 'tensorflow.python.data.experimental.ops.distribute', 'tensorflow.python.data.ops.multi_device_iterator_ops', 'tensorflow.python.distribute.input_ops', 'tensorflow.python.distribute.multi_worker_util', 'tensorflow.python.distribute.distribute_coordinator_context', 'tensorflow.python.distribute.shared_variable_creator', 'tensorflow.python.training.coordinator', 'tensorflow.python.distribute.one_device_strategy', 'tensorflow.python.distribute.experimental', 'tensorflow.python.distribute.central_storage_strategy', 'tensorflow.python.distribute.parameter_server_strategy', 'tensorflow.python.training.device_setter', 'tensorflow.python.distribute.collective_all_reduce_strategy', 'tensorflow.python.distribute.tpu_strategy', 'tensorflow.compiler.xla', 'tensorflow.compiler.xla.experimental', 'tensorflow.compiler.xla.experimental.xla_sharding', 'tensorflow.compiler.xla.experimental.xla_sharding.xla_sharding', 'tensorflow.compiler.tf2xla', 'tensorflow.compiler.tf2xla.python', 'tensorflow.compiler.tf2xla.python.xla', 'tensorflow.compiler.tf2xla.ops', 'tensorflow.compiler.tf2xla.ops.gen_xla_ops', 'tensorflow.python.ops.bitwise_ops', 'tensorflow.compiler.xla.xla_data_pb2', 'tensorflow.python.tpu.device_assignment', 'tensorflow.python.tpu.topology', 'tensorflow.core.protobuf.tpu.topology_pb2', 'tensorflow.python.tpu.tpu_strategy_util', 'tensorflow.python.tpu.tpu_system_metadata', 'tensorflow.python.tpu.training_loop', 'tensorflow.python.tpu.tensor_tracer', 'tensorflow.python.platform.analytics', 'tensorflow.python.tpu.tensor_tracer_flags', 'tensorflow.python.tpu.tensor_tracer_report', 'tensorflow.python.tpu.tensor_tracer_pb2', 'tensorflow.python.training.experimental.loss_scale', 'tensorflow.python.ops.array_grad', 'tensorflow.python.ops.cudnn_rnn_grad', 'tensorflow.python.ops.gen_cudnn_rnn_ops', 'tensorflow.python.ops.manip_grad', 'tensorflow.python.ops.manip_ops', 'tensorflow.python.ops.gen_manip_ops', 'tensorflow.python.ops.math_grad', 'tensorflow.python.ops.random_grad', 'tensorflow.python.ops.rnn_grad', 'tensorflow.python.ops.gen_rnn_ops', 'tensorflow.python.ops.sparse_grad', 'tensorflow.python.ops.state_grad', 'tensorflow.python.ops.tensor_array_grad', 'tensorflow.python.ops.special_math_ops', 'opt_einsum', 'opt_einsum.blas', 'opt_einsum.helpers', 'opt_einsum.parser', 'opt_einsum.paths', 'opt_einsum.path_random', 'opt_einsum.contract', 'opt_einsum.backends', 'opt_einsum.backends.cupy', 'opt_einsum.sharing', 'opt_einsum.backends.dispatch', 'opt_einsum.backends.jax', 'opt_einsum.backends.tensorflow', 'opt_einsum.backends.theano', 'opt_einsum.backends.torch', 'opt_einsum._version', 'tensorflow.python.ops.gen_special_math_ops', 'tensorflow.python.eager.wrap_function', 'tensorflow.python.saved_model.nested_structure_coder', 'tensorflow.python.ops.batch_ops', 'tensorflow.python.ops.gen_batch_ops', 'tensorflow.python.ops.critical_section_ops', 'tensorflow.python.ops.gradients', 'tensorflow.python.eager.forwardprop', 'tensorflow.python.ops.gradients_impl', 'tensorflow.python.ops.control_flow_grad', 'tensorflow.python.ops.image_grad', 'tensorflow.python.ops.gen_image_ops', 'tensorflow.python.ops.linalg_grad', 'tensorflow.python.ops.linalg', 'tensorflow.python.ops.linalg.linalg_impl', 'tensorflow.python.ops.optional_grad', 'tensorflow.python.ops.histogram_ops', 'tensorflow.python.ops.lookup_ops', 'tensorflow.python.ops.gen_lookup_ops', 'tensorflow.python.ops.numerics', 'tensorflow.python.ops.partitioned_variables', 'tensorflow.python.ops.proto_ops', 'tensorflow.python.ops.gen_decode_proto_ops', 'tensorflow.python.ops.gen_encode_proto_ops', 'tensorflow.python.ops.stateless_random_ops', 'tensorflow.python.ops.template', 'tensorflow.python.training.tracking.util', 'tensorflow.python.training.saving.functional_saver', 'tensorflow.python.training.saving.saveable_hook', 'tensorflow.python.training.tracking.graph_view', 'tensorflow.python.training.optimizer', 'tensorflow.python.training.slot_creator', 'tensorflow.python.ops.parallel_for', 'tensorflow.python.ops.parallel_for.control_flow_ops', 'tensorflow.python.ops.parallel_for.pfor', 'tensorflow.python.ops.gen_spectral_ops', 'tensorflow.python.ops.parallel_for.gradients', 'tensorflow.python.compiler.tensorrt', 'tensorflow.python.compiler.tensorrt.trt_convert_windows', 'tensorflow.python.ops.initializers_ns', 'tensorflow.python.keras', 'tensorflow.python.keras.models', 'tensorflow.python.keras.backend', 'tensorflow.python.distribute.distribute_coordinator', 'tensorflow.python.training.monitored_session', 'tensorflow.python.ops.resources', 'tensorflow.python.summary.summary', 'google.protobuf.json_format', 'tensorflow.python.training.queue_runner', 'tensorflow.python.training.queue_runner_impl', 'tensorflow.core.protobuf.queue_runner_pb2', 'tensorflow.python.training.session_manager', 'tensorflow.python.keras.backend_config', 'tensorflow.python.ops.image_ops', 'tensorflow.python.ops.image_ops_impl', 'tensorflow.python.training.moving_averages', 'tensorflow.python.keras.metrics', 'tensorflow.python.keras.engine', 'tensorflow.python.keras.engine.base_layer', 'tensorflow.python.keras.constraints', 'tensorflow.python.keras.utils', 'tensorflow.python.keras.utils.generic_utils', 'tensorflow.python.keras.initializers', 'tensorflow.python.ops.init_ops_v2', 'tensorflow.python.keras.regularizers', 'tensorflow.python.keras.engine.base_layer_utils', 'tensorflow.python.keras.engine.input_spec', 'tensorflow.python.keras.engine.node', 'tensorflow.python.keras.mixed_precision', 'tensorflow.python.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.autocast_variable', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale_optimizer', 'tensorflow.python.keras.optimizers', 'tensorflow.python.keras.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.adadelta', 'tensorflow.python.keras.optimizer_v2.optimizer_v2', 'tensorflow.python.keras.optimizer_v2.learning_rate_schedule', 'tensorflow.python.keras.utils.tf_utils', 'tensorflow.python.training.training_ops', 'tensorflow.python.training.gen_training_ops', 'tensorflow.python.keras.optimizer_v2.adagrad', 'tensorflow.python.keras.optimizer_v2.adam', 'tensorflow.python.keras.optimizer_v2.adamax', 'tensorflow.python.keras.optimizer_v2.ftrl', 'tensorflow.python.keras.optimizer_v2.gradient_descent', 'tensorflow.python.keras.optimizer_v2.nadam', 'tensorflow.python.keras.optimizer_v2.rmsprop', 'tensorflow.python.keras.mixed_precision.experimental.loss_scale', 'tensorflow.python.keras.mixed_precision.experimental.policy', 'tensorflow.python.keras.mixed_precision.experimental.device_compatibility_check', 'tensorflow.python.framework.gpu_util', 'tensorflow.python.keras.saving', 'tensorflow.python.keras.saving.saved_model', 'tensorflow.python.keras.saving.saved_model.layer_serialization', 'tensorflow.python.keras.saving.saved_model.base_serialization', 'tensorflow.python.keras.saving.saved_model.json_utils', 'tensorflow.python.util.serialization', 'tensorflow.python.keras.saving.saved_model.constants', 'tensorflow.python.keras.saving.saved_model.save_impl', 'tensorflow.python.keras.saving.saving_utils', 'tensorflow.python.keras.losses', 'tensorflow.python.keras.utils.losses_utils', 'tensorflow.python.keras.utils.io_utils', 'tensorflow.python.keras.saving.saved_model.load', 'tensorflow.python.keras.saving.saved_model.utils', 'tensorflow.python.keras.saving.saved_model.serialized_attributes', 'tensorflow.python.keras.utils.metrics_utils', 'tensorflow.python.saved_model.load', 'tensorflow.python.saved_model.function_deserialization', 'tensorflow.python.framework.function_def_to_graph', 'tensorflow.python.saved_model.load_v1_in_v2', 'tensorflow.python.saved_model.loader_impl', 'tensorflow.core.protobuf.saved_model_pb2', 'tensorflow.python.saved_model.constants', 'tensorflow.python.saved_model.signature_def_utils', 'tensorflow.python.saved_model.signature_def_utils_impl', 'tensorflow.python.saved_model.signature_constants', 'tensorflow.python.saved_model.utils_impl', 'tensorflow.python.saved_model.signature_serialization', 'tensorflow.python.saved_model.function_serialization', 'tensorflow.python.keras.utils.layer_utils', 'tensorflow.python.keras.utils.conv_utils', 'tensorflow.python.keras.utils.version_utils', 'tensorflow.python.module', 'tensorflow.python.module.module', 'tensorflow.python.keras.saving.saved_model.metric_serialization', 'tensorflow.python.keras.engine.network', 'tensorflow.python.keras.engine.compile_utils', 'tensorflow.python.keras.engine.input_layer', 'tensorflow.python.keras.distribute', 'tensorflow.python.keras.distribute.distributed_training_utils', 'tensorflow.python.keras.callbacks', 'tensorflow.python.distribute.distributed_file_utils', 'tensorflow.python.keras.distribute.multi_worker_training_state', 'tensorflow.python.keras.utils.mode_keys', 'tensorflow.python.saved_model.model_utils', 'tensorflow.python.saved_model.model_utils.export_output', 'tensorflow.python.saved_model.model_utils.export_utils', 'tensorflow.python.saved_model.tag_constants', 'tensorflow.python.saved_model.model_utils.mode_keys', 'tensorflow.python.keras.utils.data_utils', 'multiprocessing.dummy', 'multiprocessing.dummy.connection', 'tensorflow.python.profiler.profiler_v2', 'requests', 'urllib3', 'urllib3.connectionpool', 'urllib3.exceptions', 'urllib3.packages', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.connection', 'urllib3.util', 'urllib3.util.connection', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.url', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3._collections', 'urllib3.request', 'urllib3.filepost', 'urllib3.fields', 'mimetypes', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.response', 'urllib3.util.queue', 'urllib3.poolmanager', 'chardet', 'chardet.compat', 'chardet.universaldetector', 'chardet.charsetgroupprober', 'chardet.enums', 'chardet.charsetprober', 'chardet.escprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.latin1prober', 'chardet.mbcsgroupprober', 'chardet.utf8prober', 'chardet.mbcssm', 'chardet.sjisprober', 'chardet.mbcharsetprober', 'chardet.chardistribution', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.jpcntx', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.sbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.version', 'requests.exceptions', 'requests.__version__', 'requests.utils', 'requests.certs', 'certifi', 'certifi.core', 'importlib.resources', 'requests._internal_utils', 'requests.compat', 'http.cookiejar', 'http.cookies', 'requests.cookies', 'requests.structures', 'requests.packages', 'requests.packages.urllib3', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.request', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.poolmanager', 'idna', 'idna.package_data', 'idna.core', 'idna.idnadata', 'idna.intranges', 'requests.packages.idna', 'requests.packages.idna.package_data', 'requests.packages.idna.core', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.chardet', 'requests.packages.chardet.compat', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.escprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.version', 'requests.models', 'encodings.idna', 'stringprep', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.api', 'requests.sessions', 'requests.adapters', 'tensorflow.python.keras.engine.training_utils', 'tensorflow.python.framework.composite_tensor_utils', 'tensorflow.python.keras.saving.hdf5_format', 'tensorflow.python.keras.saving.model_config', 'tensorflow.python.keras.saving.save', 'tensorflow.python.keras.saving.saved_model.save', 'tensorflow.python.saved_model.save', 'tensorflow.python.saved_model.builder_impl', 'tensorflow.python.saved_model.save_options', 'tensorflow.python.keras.saving.saved_model.network_serialization', 'tensorflow.python.keras.engine.sequential', 'tensorflow.python.keras.layers', 'tensorflow.python.keras.engine.base_preprocessing_layer', 'tensorflow.python.keras.engine.training_generator', 'tensorflow.python.keras.layers.preprocessing', 'tensorflow.python.keras.layers.preprocessing.image_preprocessing', 'tensorflow.python.ops.stateful_random_ops', 'tensorflow.python.ops.gen_stateful_random_ops', 'tensorflow.python.keras.layers.preprocessing.normalization', 'tensorflow.python.keras.layers.preprocessing.normalization_v1', 'tensorflow.python.keras.engine.base_preprocessing_layer_v1', 'tensorflow.python.keras.layers.preprocessing.text_vectorization', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding', 'tensorflow.python.keras.layers.preprocessing.index_lookup', 'tensorflow.python.keras.layers.preprocessing.text_vectorization_v1', 'tensorflow.python.keras.layers.preprocessing.categorical_encoding_v1', 'tensorflow.python.keras.layers.preprocessing.index_lookup_v1', 'tensorflow.python.keras.layers.advanced_activations', 'tensorflow.python.keras.layers.convolutional', 'tensorflow.python.keras.activations', 'tensorflow.python.keras.layers.pooling', 'tensorflow.python.keras.layers.core', 'tensorflow.python.keras.layers.dense_attention', 'tensorflow.python.keras.layers.embeddings', 'tensorflow.python.keras.layers.local', 'tensorflow.python.keras.layers.merge', 'tensorflow.python.keras.layers.noise', 'tensorflow.python.keras.layers.normalization', 'tensorflow.python.keras.layers.normalization_v2', 'tensorflow.python.keras.layers.kernelized', 'tensorflow.python.keras.layers.recurrent', 'tensorflow.python.keras.layers.recurrent_v2', 'tensorflow.python.keras.layers.convolutional_recurrent', 'tensorflow.python.keras.layers.cudnn_recurrent', 'tensorflow.python.keras.layers.wrappers', 'tensorflow.python.keras.layers.rnn_cell_wrapper_v2', 'tensorflow.python.ops.rnn_cell_wrapper_impl', 'tensorflow.python.keras.layers.serialization', 'tensorflow.python.keras.engine.training', 'tensorflow.python.keras.engine.data_adapter', 'pandas', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'dateutil', 'dateutil._version', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'dateutil.relativedelta', 'dateutil._common', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'tensorflow.python.keras.saving.saved_model.model_serialization', 'tensorflow.python.profiler.traceme', 'tensorflow.python.profiler.internal._pywrap_traceme', 'tensorflow.python.keras.engine.training_v1', 'tensorflow.python.keras.engine.training_arrays', 'tensorflow.python.keras.engine.training_distributed', 'tensorflow.python.keras.engine.partial_batch_padding_handler', 'tensorflow.python.keras.engine.training_eager', 'tensorflow.python.feature_column', 'tensorflow.python.feature_column.feature_column_lib', 'tensorflow.python.feature_column.dense_features_v2', 'tensorflow.python.feature_column.dense_features', 'tensorflow.python.feature_column.feature_column_v2', 'tensorflow.python.feature_column.feature_column', 'tensorflow.python.feature_column.utils', 'tensorflow.python.layers', 'tensorflow.python.layers.base', 'tensorflow.python.training.checkpoint_utils', 'tensorflow.python.feature_column.sequence_feature_column', 'tensorflow.python.feature_column.serialization', 'tensorflow.python.layers.layers', 'tensorflow.python.layers.core', 'tensorflow.python.layers.convolutional', 'tensorflow.python.layers.pooling', 'tensorflow.python.layers.normalization', 'tensorflow.python.ops.gradient_checker_v2', 'tensorflow.python.ops.metrics', 'tensorflow.python.ops.metrics_impl', 'tensorflow.python.ops.distributions', 'tensorflow.python.ops.distributions.distributions', 'tensorflow.python.ops.distributions.bernoulli', 'tensorflow.python.ops.distributions.distribution', 'tensorflow.python.ops.distributions.kullback_leibler', 'tensorflow.python.ops.distributions.util', 'tensorflow.python.ops.distributions.beta', 'tensorflow.python.ops.distributions.categorical', 'tensorflow.python.ops.distributions.dirichlet', 'tensorflow.python.ops.distributions.dirichlet_multinomial', 'tensorflow.python.ops.distributions.exponential', 'tensorflow.python.ops.distributions.gamma', 'tensorflow.python.ops.distributions.laplace', 'tensorflow.python.ops.distributions.special_math', 'tensorflow.python.ops.distributions.multinomial', 'tensorflow.python.ops.distributions.normal', 'tensorflow.python.ops.distributions.student_t', 'tensorflow.python.ops.distributions.uniform', 'tensorflow.python.ops.linalg.linalg', 'tensorflow.python.ops.linalg.adjoint_registrations', 'tensorflow.python.ops.linalg.linear_operator', 'tensorflow.python.ops.linalg.linear_operator_algebra', 'tensorflow.python.ops.linalg.linear_operator_util', 'tensorflow.python.ops.linalg.linear_operator_adjoint', 'tensorflow.python.ops.linalg.linear_operator_block_diag', 'tensorflow.python.ops.linalg.linear_operator_circulant', 'tensorflow.python.ops.signal', 'tensorflow.python.ops.signal.fft_ops', 'tensorflow.python.ops.linalg.linear_operator_diag', 'tensorflow.python.ops.linalg.linear_operator_householder', 'tensorflow.python.ops.linalg.linear_operator_identity', 'tensorflow.python.ops.linalg.linear_operator_kronecker', 'tensorflow.python.ops.linalg.cholesky_registrations', 'tensorflow.python.ops.linalg.linear_operator_lower_triangular', 'tensorflow.python.ops.linalg.inverse_registrations', 'tensorflow.python.ops.linalg.linear_operator_addition', 'tensorflow.python.ops.linalg.linear_operator_full_matrix', 'tensorflow.python.ops.linalg.linear_operator_block_lower_triangular', 'tensorflow.python.ops.linalg.linear_operator_inversion', 'tensorflow.python.ops.linalg.matmul_registrations', 'tensorflow.python.ops.linalg.linear_operator_composition', 'tensorflow.python.ops.linalg.linear_operator_zeros', 'tensorflow.python.ops.linalg.registrations_util', 'tensorflow.python.ops.linalg.solve_registrations', 'tensorflow.python.ops.linalg.linear_operator_low_rank_update', 'tensorflow.python.ops.linalg.linear_operator_permutation', 'tensorflow.python.ops.linalg.linear_operator_toeplitz', 'tensorflow.python.ops.linalg.linear_operator_tridiag', 'tensorflow.python.ops.linalg.sparse', 'tensorflow.python.ops.linalg.sparse.sparse', 'tensorflow.python.ops.linalg.sparse.conjugate_gradient', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_grad', 'tensorflow.python.ops.linalg.sparse.sparse_csr_matrix_ops', 'tensorflow.python.ops.linalg.sparse.gen_sparse_csr_matrix_ops', 'tensorflow.python.ops.losses.losses', 'tensorflow.python.ops.signal.signal', 'tensorflow.python.ops.signal.dct_ops', 'tensorflow.python.ops.signal.mel_ops', 'tensorflow.python.ops.signal.shape_ops', 'tensorflow.python.ops.signal.util_ops', 'tensorflow.python.ops.signal.mfcc_ops', 'tensorflow.python.ops.signal.reconstruction_ops', 'tensorflow.python.ops.signal.spectral_ops', 'tensorflow.python.ops.signal.window_ops', 'tensorflow.python.profiler.profiler', 'tensorflow.core.profiler', 'tensorflow.core.profiler.tfprof_log_pb2', 'tensorflow.core.profiler.tfprof_output_pb2', 'tensorflow.python.profiler.model_analyzer', 'tensorflow.core.profiler.tfprof_options_pb2', 'tensorflow.python._pywrap_tfprof', 'tensorflow.python.profiler.option_builder', 'tensorflow.python.profiler.tfprof_logger', 'tensorflow.python.profiler.internal.flops_registry', 'tensorflow.python.profiler.profiler_client', 'tensorflow.python.saved_model.saved_model', 'tensorflow.python.saved_model.builder', 'tensorflow.python.saved_model.loader', 'tensorflow.python.saved_model.main_op', 'tensorflow.python.saved_model.main_op_impl', 'tensorflow.python.saved_model.method_name_updater', 'tensorflow.python.saved_model.utils', 'tensorflow.python.saved_model.simple_save', 'tensorflow.python.tpu.api', 'tensorflow.python.tpu.bfloat16', 'tensorflow.python.tpu.feature_column_v2', 'tensorflow.python.tpu.feature_column', 'tensorflow.python.tpu.tpu_embedding', 'tensorflow.core.protobuf.tpu.optimization_parameters_pb2', 'google.protobuf.wrappers_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_configuration_pb2', 'tensorflow.core.protobuf.tpu.tpu_embedding_output_layout_pb2', 'tensorflow.python.tpu.tpu_optimizer', 'tensorflow.python.user_ops', 'tensorflow.python.user_ops.user_ops', 'tensorflow.python.ops.gen_user_ops', 'tensorflow.python.ops.gen_audio_ops', 'tensorflow.python.ops.gen_boosted_trees_ops', 'tensorflow.python.ops.gen_sendrecv_ops', 'tensorflow.python.training.training', 'tensorflow.python.ops.sdca_ops', 'tensorflow.python.ops.gen_sdca_ops', 'tensorflow.python.training.adadelta', 'tensorflow.python.training.adagrad', 'tensorflow.python.training.adagrad_da', 'tensorflow.python.training.proximal_adagrad', 'tensorflow.python.training.adam', 'tensorflow.python.training.ftrl', 'tensorflow.python.training.experimental.loss_scale_optimizer', 'tensorflow.python.training.experimental.mixed_precision', 'tensorflow.python.training.momentum', 'tensorflow.python.training.rmsprop', 'tensorflow.python.training.gradient_descent', 'tensorflow.python.training.proximal_gradient_descent', 'tensorflow.python.training.sync_replicas_optimizer', 'tensorflow.python.training.input', 'tensorflow.python.layers.utils', 'tensorflow.python.training.basic_loops', 'tensorflow.python.training.tracking.python_state', 'tensorflow.python.training.supervisor', 'tensorflow.python.training.warm_starting_util', 'tensorflow.python.training.checkpoint_ops', 'tensorflow.python.ops.gen_checkpoint_ops', 'tensorflow.core.example', 'tensorflow.core.example.example_pb2', 'tensorflow.core.example.feature_pb2', 'tensorflow.python.training.learning_rate_decay', 'tensorflow.python.training.quantize_training', 'tensorflow.python._pywrap_quantize_training', 'tensorflow.python.platform.resource_loader', 'tensorflow.python.platform.sysconfig', 'tensorflow.python.platform.test', 'tensorflow.python.framework.test_util', 'absl.testing', 'absl.testing.parameterized', 'absl.testing.absltest', 'shlex', 'absl._enum_module', 'absl.testing._pretty_print_reporter', 'absl.third_party', 'absl.third_party.unittest3_backport', 'absl.third_party.unittest3_backport.case', 'absl.third_party.unittest3_backport.result', 'absl.testing.xml_reporter', 'xml.sax', 'xml.sax.xmlreader', 'xml.sax.handler', 'xml.sax._exceptions', 'xml.sax.saxutils', 'unittest.mock', 'tensorflow.python._pywrap_stacktrace_handler', 'tensorflow.python._pywrap_util_port', 'tensorflow.python.ops.control_flow_util_v2', 'tensorflow.python.platform.googletest', 'tensorflow.python.platform.benchmark', 'tensorflow.core.util.test_log_pb2', 'tensorflow.python.util.protobuf', 'tensorflow.python.util.protobuf.compare', 'tensorflow.python.ops.gradient_checker', 'tensorflow.python.compat.v2_compat', 'tensorflow.python.ops.control_flow_v2_toggles', 'tensorflow.python.eager.remote', 'tensorflow.python.platform.remote_utils', 'tensorflow.python.ops.rnn', 'tensorflow.python.ops.rnn_cell_impl', 'tensorflow.python.ops.rnn_cell', 'tensorflow.python.debug', 'tensorflow.python.debug.lib', 'tensorflow.python.debug.lib.debug_data', 'tensorflow.python.debug.lib.debug_graphs', 'tensorflow.python.debug.lib.debug_gradients', 'tensorflow.python.debug.lib.debug_utils', 'tensorflow.python.debug.wrappers', 'tensorflow.python.debug.wrappers.dumping_wrapper', 'tensorflow.python.debug.wrappers.framework', 'tensorflow.python.debug.wrappers.grpc_wrapper', 'tensorflow.python.debug.lib.common', 'tensorflow.python.debug.wrappers.hooks', 'tensorflow.python.debug.wrappers.local_cli_wrapper', 'tensorflow.python.debug.cli', 'tensorflow.python.debug.cli.analyzer_cli', 'tensorflow.python.debug.cli.cli_config', 'tensorflow.python.debug.cli.debugger_cli_common', 'tensorflow.python.debug.cli.cli_shared', 'tensorflow.python.debug.cli.command_parser', 'tensorflow.python.debug.cli.tensor_format', 'tensorflow.python.debug.cli.evaluator', 'tensorflow.python.debug.cli.ui_factory', 'tensorflow.python.debug.lib.source_utils', 'tensorflow.python.debug.lib.profiling', 'tensorflow.python.debug.cli.profile_analyzer_cli', 'tensorflow.python.debug.lib.check_numerics_callback', 'tensorflow.core.protobuf.debug_event_pb2', 'tensorflow.python.debug.lib.op_callbacks_common', 'tensorflow.python.ops.gen_debug_ops', 'tensorflow.python.debug.lib.dumping_callback', 'tensorflow.python.debug.lib.debug_events_writer', 'tensorflow.python._pywrap_debug_events_writer', 'tensorflow.python.dlpack', 'tensorflow.python.dlpack.dlpack', 'tensorflow.python.compiler.mlir', 'tensorflow.python.compiler.mlir.mlir', 'tensorflow.python.pywrap_mlir', 'tensorflow.python._pywrap_mlir', 'tensorflow.python.tools', 'tensorflow.python.tools.module_util', 'tensorflow._api', 'tensorflow._api.v2', 'tensorflow._api.v2.audio', 'tensorflow._api.v2.autodiff', 'tensorflow._api.v2.autograph', 'tensorflow._api.v2.autograph.experimental', 'tensorflow._api.v2.bitwise', 'tensorflow._api.v2.compat', 'tensorflow._api.v2.compat.v1', 'tensorflow._api.v2.compat.v1.app', 'tensorflow._api.v2.compat.v1.audio', 'tensorflow._api.v2.compat.v1.autograph', 'tensorflow._api.v2.compat.v1.autograph.experimental', 'tensorflow._api.v2.compat.v1.bitwise', 'tensorflow._api.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v1.compat.v1', 'tensorflow._api.v2.compat.v1.compat.v1.compat', 'tensorflow._api.v2.compat.v1.config', 'tensorflow._api.v2.compat.v1.config.experimental', 'tensorflow._api.v2.compat.v1.config.optimizer', 'tensorflow._api.v2.compat.v1.config.threading', 'tensorflow._api.v2.compat.v1.data', 'tensorflow._api.v2.compat.v1.data.experimental', 'tensorflow._api.v2.compat.v1.debugging', 'tensorflow._api.v2.compat.v1.debugging.experimental', 'tensorflow._api.v2.compat.v1.distribute', 'tensorflow._api.v2.compat.v1.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v1.distribute.experimental', 'tensorflow._api.v2.compat.v1.distributions', 'tensorflow._api.v2.compat.v1.dtypes', 'tensorflow._api.v2.compat.v1.errors', 'tensorflow._api.v2.compat.v1.experimental', 'tensorflow._api.v2.compat.v1.feature_column', 'tensorflow._api.v2.compat.v1.gfile', 'tensorflow._api.v2.compat.v1.graph_util', 'tensorflow._api.v2.compat.v1.image', 'tensorflow._api.v2.compat.v1.initializers', 'tensorflow._api.v2.compat.v1.io', 'tensorflow._api.v2.compat.v1.io.gfile', 'tensorflow._api.v2.compat.v1.layers', 'tensorflow._api.v2.compat.v1.layers.experimental', 'tensorflow._api.v2.compat.v1.linalg', 'tensorflow._api.v2.compat.v1.linalg.experimental', 'tensorflow._api.v2.compat.v1.lite', 'tensorflow._api.v2.compat.v1.lite.constants', 'tensorflow.lite', 'tensorflow.lite.python', 'tensorflow.lite.python.lite_constants', 'tensorflow.lite.toco', 'tensorflow.lite.toco.toco_flags_pb2', 'tensorflow.lite.toco.types_pb2', 'tensorflow._api.v2.compat.v1.lite.experimental', 'tensorflow._api.v2.compat.v1.lite.experimental.nn', 'tensorflow.lite.python.lite', 'tensorflow.lite.experimental', 'tensorflow.lite.experimental.examples', 'tensorflow.lite.experimental.examples.lstm', 'tensorflow.lite.experimental.examples.lstm.rnn', 'tensorflow.lite.python.op_hint', 'tensorflow.lite.experimental.examples.lstm.rnn_cell', 'tensorflow.lite.experimental.microfrontend', 'tensorflow.lite.experimental.microfrontend.python', 'tensorflow.lite.experimental.microfrontend.python.ops', 'tensorflow.lite.experimental.microfrontend.python.ops.audio_microfrontend_op', 'tensorflow.lite.experimental.microfrontend.ops', 'tensorflow.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op', '0294638c8bf50491b025b096f3dba0a1', 'tensorflow.lite.experimental.tensorboard', 'tensorflow.lite.experimental.tensorboard.ops_util', 'tensorflow.lite.python.wrap_toco', 'tensorflow.python._pywrap_toco_api', 'tensorflow.lite.python.convert', 'distutils.spawn', 'distutils.errors', 'distutils.debug', 'distutils.log', 'tensorflow.lite.python.util', 'tensorflow.python.framework.convert_to_constants', 'tensorflow.python.grappler', 'tensorflow.python.grappler.tf_optimizer', 'tensorflow.python._pywrap_tf_optimizer', 'tensorflow.python.grappler.cluster', 'tensorflow.core.grappler', 'tensorflow.core.grappler.costs', 'tensorflow.core.grappler.costs.op_performance_data_pb2', 'tensorflow.core.protobuf.device_properties_pb2', 'tensorflow.python._pywrap_tf_cluster', 'tensorflow.lite.toco.model_flags_pb2', 'tensorflow.lite.python.convert_saved_model', 'tensorflow.lite.python.interpreter', 'tensorflow.lite.python.optimize', 'tensorflow.lite.python.optimize.calibrator', 'tensorflow._api.v2.compat.v1.logging', 'tensorflow._api.v2.compat.v1.lookup', 'tensorflow._api.v2.compat.v1.lookup.experimental', 'tensorflow._api.v2.compat.v1.losses', 'tensorflow._api.v2.compat.v1.manip', 'tensorflow._api.v2.compat.v1.math', 'tensorflow._api.v2.compat.v1.math.special', 'tensorflow._api.v2.compat.v1.metrics', 'tensorflow._api.v2.compat.v1.mixed_precision', 'tensorflow._api.v2.compat.v1.mixed_precision.experimental', 'tensorflow._api.v2.compat.v1.mlir', 'tensorflow._api.v2.compat.v1.mlir.experimental', 'tensorflow._api.v2.compat.v1.nest', 'tensorflow._api.v2.compat.v1.nn', 'tensorflow._api.v2.compat.v1.nn.rnn_cell', 'tensorflow._api.v2.compat.v1.profiler', 'tensorflow._api.v2.compat.v1.python_io', 'tensorflow._api.v2.compat.v1.quantization', 'tensorflow._api.v2.compat.v1.queue', 'tensorflow._api.v2.compat.v1.ragged', 'tensorflow._api.v2.compat.v1.random', 'tensorflow._api.v2.compat.v1.random.experimental', 'tensorflow._api.v2.compat.v1.raw_ops', 'tensorflow._api.v2.compat.v1.resource_loader', 'tensorflow._api.v2.compat.v1.saved_model', 'tensorflow._api.v2.compat.v1.saved_model.builder', 'tensorflow._api.v2.compat.v1.saved_model.constants', 'tensorflow._api.v2.compat.v1.saved_model.experimental', 'tensorflow._api.v2.compat.v1.saved_model.loader', 'tensorflow._api.v2.compat.v1.saved_model.main_op', 'tensorflow._api.v2.compat.v1.saved_model.signature_constants', 'tensorflow._api.v2.compat.v1.saved_model.signature_def_utils', 'tensorflow._api.v2.compat.v1.saved_model.tag_constants', 'tensorflow._api.v2.compat.v1.saved_model.utils', 'tensorflow._api.v2.compat.v1.sets', 'tensorflow._api.v2.compat.v1.signal', 'tensorflow._api.v2.compat.v1.sparse', 'tensorflow._api.v2.compat.v1.spectral', 'tensorflow._api.v2.compat.v1.strings', 'tensorflow._api.v2.compat.v1.summary', 'tensorflow._api.v2.compat.v1.sysconfig', 'tensorflow._api.v2.compat.v1.test', 'tensorflow._api.v2.compat.v1.tpu', 'tensorflow._api.v2.compat.v1.tpu.experimental', 'tensorflow._api.v2.compat.v1.train', 'tensorflow._api.v2.compat.v1.train.experimental', 'tensorflow._api.v2.compat.v1.train.queue_runner', 'tensorflow._api.v2.compat.v1.user_ops', 'tensorflow._api.v2.compat.v1.version', 'tensorflow._api.v2.compat.v1.xla', 'tensorflow._api.v2.compat.v1.xla.experimental', 'tensorflow.python.keras.api', 'tensorflow.python.keras.api.keras', 'tensorflow.python.keras.api.keras.activations', 'tensorflow.python.util.module_wrapper', 'tensorflow.tools.compatibility', 'tensorflow.tools.compatibility.all_renames_v2', 'tensorflow.tools.compatibility.renames_v2', 'tensorflow.python.keras.api.keras.applications', 'tensorflow.python.keras.api.keras.applications.densenet', 'tensorflow.python.keras.applications', 'tensorflow.python.keras.applications.densenet', 'tensorflow.python.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.imagenet_utils', 'tensorflow.python.keras.api.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api.keras.applications.inception_v3', 'tensorflow.python.keras.applications.inception_v3', 'tensorflow.python.keras.api.keras.applications.mobilenet', 'tensorflow.python.keras.applications.mobilenet', 'tensorflow.python.keras.api.keras.applications.mobilenet_v2', 'tensorflow.python.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api.keras.applications.nasnet', 'tensorflow.python.keras.applications.nasnet', 'tensorflow.python.keras.api.keras.applications.resnet', 'tensorflow.python.keras.applications.resnet', 'tensorflow.python.keras.api.keras.applications.resnet50', 'tensorflow.python.keras.api.keras.applications.resnet_v2', 'tensorflow.python.keras.applications.resnet_v2', 'tensorflow.python.keras.api.keras.applications.vgg16', 'tensorflow.python.keras.applications.vgg16', 'tensorflow.python.keras.api.keras.applications.vgg19', 'tensorflow.python.keras.applications.vgg19', 'tensorflow.python.keras.api.keras.applications.xception', 'tensorflow.python.keras.applications.xception', 'tensorflow.python.keras.api.keras.backend', 'tensorflow.python.keras.api.keras.callbacks', 'tensorflow.python.keras.callbacks_v1', 'tensorflow.python.keras.api.keras.constraints', 'tensorflow.python.keras.api.keras.datasets', 'tensorflow.python.keras.api.keras.datasets.boston_housing', 'tensorflow.python.keras.datasets', 'tensorflow.python.keras.datasets.boston_housing', 'tensorflow.python.keras.api.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar10', 'tensorflow.python.keras.datasets.cifar', 'tensorflow.python.keras.api.keras.datasets.cifar100', 'tensorflow.python.keras.datasets.cifar100', 'tensorflow.python.keras.api.keras.datasets.fashion_mnist', 'tensorflow.python.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api.keras.datasets.imdb', 'tensorflow.python.keras.datasets.imdb', 'tensorflow.python.keras.preprocessing', 'keras_preprocessing', 'tensorflow.python.keras.preprocessing.image', 'keras_preprocessing.image', 'keras_preprocessing.image.affine_transformations', 'keras_preprocessing.image.utils', 'keras_preprocessing.image.dataframe_iterator', 'keras_preprocessing.image.iterator', 'keras_preprocessing.image.directory_iterator', 'keras_preprocessing.image.image_data_generator', 'keras_preprocessing.image.numpy_array_iterator', 'tensorflow.python.keras.preprocessing.sequence', 'keras_preprocessing.sequence', 'tensorflow.python.keras.preprocessing.text', 'keras_preprocessing.text', 'tensorflow.python.keras.utils.all_utils', 'tensorflow.python.keras.utils.multi_gpu_utils', 'tensorflow.python.keras.utils.np_utils', 'tensorflow.python.keras.utils.vis_utils', 'tensorflow.python.keras.api.keras.datasets.mnist', 'tensorflow.python.keras.datasets.mnist', 'tensorflow.python.keras.api.keras.datasets.reuters', 'tensorflow.python.keras.datasets.reuters', 'tensorflow.python.keras.api.keras.estimator', 'tensorflow.python.keras.estimator', 'tensorflow.python.keras.api.keras.experimental', 'tensorflow.python.keras.premade', 'tensorflow.python.keras.premade.linear', 'tensorflow.python.keras.premade.wide_deep', 'tensorflow.python.keras.saving.saved_model_experimental', 'tensorflow.python.keras.api.keras.initializers', 'tensorflow.python.keras.api.keras.layers', 'tensorflow.python.keras.api.keras.layers.experimental', 'tensorflow.python.keras.api.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api.keras.losses', 'tensorflow.python.keras.api.keras.metrics', 'tensorflow.python.keras.api.keras.mixed_precision', 'tensorflow.python.keras.api.keras.mixed_precision.experimental', 'tensorflow.python.keras.mixed_precision.experimental.get_layer_policy', 'tensorflow.python.keras.api.keras.models', 'tensorflow.python.keras.api.keras.optimizers', 'tensorflow.python.keras.api.keras.optimizers.schedules', 'tensorflow.python.keras.api.keras.preprocessing', 'tensorflow.python.keras.api.keras.preprocessing.image', 'tensorflow.python.keras.api.keras.preprocessing.sequence', 'tensorflow.python.keras.api.keras.preprocessing.text', 'tensorflow.python.keras.api.keras.regularizers', 'tensorflow.python.keras.api.keras.utils', 'tensorflow.python.keras.api.keras.wrappers', 'tensorflow.python.keras.api.keras.wrappers.scikit_learn', 'tensorflow.python.keras.wrappers', 'tensorflow.python.keras.wrappers.scikit_learn', 'tensorflow.python.keras.api._v1', 'tensorflow.python.keras.api._v1.keras', 'tensorflow.python.keras.api._v1.keras.activations', 'tensorflow.python.keras.api._v1.keras.applications', 'tensorflow.python.keras.api._v1.keras.applications.densenet', 'tensorflow.python.keras.api._v1.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v1.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.inception_v3', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet', 'tensorflow.python.keras.api._v1.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v1.keras.applications.nasnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet', 'tensorflow.python.keras.api._v1.keras.applications.resnet50', 'tensorflow.python.keras.api._v1.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v1.keras.applications.vgg16', 'tensorflow.python.keras.api._v1.keras.applications.vgg19', 'tensorflow.python.keras.api._v1.keras.applications.xception', 'tensorflow.python.keras.api._v1.keras.backend', 'tensorflow.python.keras.api._v1.keras.callbacks', 'tensorflow.python.keras.api._v1.keras.constraints', 'tensorflow.python.keras.api._v1.keras.datasets', 'tensorflow.python.keras.api._v1.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v1.keras.datasets.cifar10', 'tensorflow.python.keras.api._v1.keras.datasets.cifar100', 'tensorflow.python.keras.api._v1.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v1.keras.datasets.imdb', 'tensorflow.python.keras.api._v1.keras.datasets.mnist', 'tensorflow.python.keras.api._v1.keras.datasets.reuters', 'tensorflow.python.keras.api._v1.keras.estimator', 'tensorflow.python.keras.api._v1.keras.experimental', 'tensorflow.python.keras.api._v1.keras.initializers', 'tensorflow.python.keras.api._v1.keras.layers', 'tensorflow.python.keras.api._v1.keras.layers.experimental', 'tensorflow.python.keras.api._v1.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v1.keras.losses', 'tensorflow.python.keras.api._v1.keras.metrics', 'tensorflow.python.keras.api._v1.keras.mixed_precision', 'tensorflow.python.keras.api._v1.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v1.keras.models', 'tensorflow.python.keras.api._v1.keras.optimizers', 'tensorflow.python.keras.api._v1.keras.optimizers.schedules', 'tensorflow.python.keras.api._v1.keras.preprocessing', 'tensorflow.python.keras.api._v1.keras.preprocessing.image', 'tensorflow.python.keras.api._v1.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v1.keras.preprocessing.text', 'tensorflow.python.keras.api._v1.keras.regularizers', 'tensorflow.python.keras.api._v1.keras.utils', 'tensorflow.python.keras.api._v1.keras.wrappers', 'tensorflow.python.keras.api._v1.keras.wrappers.scikit_learn', 'tensorflow._api.v2.compat.v1.compat.v2', 'tensorflow._api.v2.compat.v1.compat.v2.compat', 'tensorflow._api.v2.compat.v2', 'tensorflow._api.v2.compat.v2.audio', 'tensorflow._api.v2.compat.v2.autodiff', 'tensorflow._api.v2.compat.v2.autograph', 'tensorflow._api.v2.compat.v2.autograph.experimental', 'tensorflow._api.v2.compat.v2.bitwise', 'tensorflow._api.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.compat.v1', 'tensorflow._api.v2.compat.v2.compat.v1.compat', 'tensorflow._api.v2.compat.v2.compat.v2', 'tensorflow._api.v2.compat.v2.compat.v2.compat', 'tensorflow._api.v2.compat.v2.config', 'tensorflow._api.v2.compat.v2.config.experimental', 'tensorflow._api.v2.compat.v2.config.optimizer', 'tensorflow._api.v2.compat.v2.config.threading', 'tensorflow._api.v2.compat.v2.data', 'tensorflow._api.v2.compat.v2.data.experimental', 'tensorflow._api.v2.compat.v2.debugging', 'tensorflow._api.v2.compat.v2.debugging.experimental', 'tensorflow._api.v2.compat.v2.distribute', 'tensorflow._api.v2.compat.v2.distribute.cluster_resolver', 'tensorflow._api.v2.compat.v2.distribute.experimental', 'tensorflow._api.v2.compat.v2.dtypes', 'tensorflow._api.v2.compat.v2.errors', 'tensorflow._api.v2.compat.v2.experimental', 'tensorflow._api.v2.compat.v2.experimental.dlpack', 'tensorflow._api.v2.compat.v2.experimental.tensorrt', 'tensorflow._api.v2.compat.v2.feature_column', 'tensorflow._api.v2.compat.v2.graph_util', 'tensorflow._api.v2.compat.v2.image', 'tensorflow._api.v2.compat.v2.io', 'tensorflow._api.v2.compat.v2.io.gfile', 'tensorflow._api.v2.compat.v2.linalg', 'tensorflow._api.v2.compat.v2.linalg.experimental', 'tensorflow._api.v2.compat.v2.lite', 'tensorflow._api.v2.compat.v2.lite.experimental', 'tensorflow._api.v2.compat.v2.lookup', 'tensorflow._api.v2.compat.v2.lookup.experimental', 'tensorflow._api.v2.compat.v2.math', 'tensorflow._api.v2.compat.v2.math.special', 'tensorflow._api.v2.compat.v2.mixed_precision', 'tensorflow._api.v2.compat.v2.mixed_precision.experimental', 'tensorflow._api.v2.compat.v2.mlir', 'tensorflow._api.v2.compat.v2.mlir.experimental', 'tensorflow._api.v2.compat.v2.nest', 'tensorflow._api.v2.compat.v2.nn', 'tensorflow._api.v2.compat.v2.profiler', 'tensorflow._api.v2.compat.v2.profiler.experimental', 'tensorflow._api.v2.compat.v2.profiler.experimental.client', 'tensorflow._api.v2.compat.v2.profiler.experimental.server', 'tensorflow._api.v2.compat.v2.quantization', 'tensorflow._api.v2.compat.v2.queue', 'tensorflow._api.v2.compat.v2.ragged', 'tensorflow._api.v2.compat.v2.random', 'tensorflow._api.v2.compat.v2.random.experimental', 'tensorflow._api.v2.compat.v2.raw_ops', 'tensorflow._api.v2.compat.v2.saved_model', 'tensorflow._api.v2.compat.v2.sets', 'tensorflow._api.v2.compat.v2.signal', 'tensorflow._api.v2.compat.v2.sparse', 'tensorflow._api.v2.compat.v2.strings', 'tensorflow._api.v2.compat.v2.summary', 'tensorflow._api.v2.compat.v2.summary.experimental', 'tensorflow._api.v2.compat.v2.sysconfig', 'tensorflow._api.v2.compat.v2.test', 'tensorflow._api.v2.compat.v2.tpu', 'tensorflow._api.v2.compat.v2.tpu.experimental', 'tensorflow._api.v2.compat.v2.train', 'tensorflow._api.v2.compat.v2.train.experimental', 'tensorflow._api.v2.compat.v2.version', 'tensorflow._api.v2.compat.v2.xla', 'tensorflow._api.v2.compat.v2.xla.experimental', 'tensorboard', 'tensorboard.errors', 'tensorboard.lazy', 'tensorboard.version', 'tensorboard.summary', 'tensorboard.summary.v1', 'tensorboard.plugins', 'tensorboard.plugins.audio', 'tensorboard.plugins.audio.summary', 'tensorboard.util', 'tensorboard.util.encoder', 'tensorboard.util.op_evaluator', 'tensorboard.plugins.audio.metadata', 'tensorboard.compat', 'tensorboard.compat.proto', 'tensorboard.compat.proto.summary_pb2', 'tensorboard.compat.proto.tensor_pb2', 'tensorboard.compat.proto.resource_handle_pb2', 'tensorboard.compat.proto.tensor_shape_pb2', 'tensorboard.compat.proto.types_pb2', 'tensorboard.plugins.audio.plugin_data_pb2', 'tensorboard.util.tb_logging', 'tensorboard.plugins.audio.summary_v2', 'tensorboard.util.lazy_tensor_creator', 'tensorboard.plugins.custom_scalar', 'tensorboard.plugins.custom_scalar.summary', 'tensorboard.plugins.custom_scalar.layout_pb2', 'tensorboard.plugins.custom_scalar.metadata', 'tensorboard.plugins.histogram', 'tensorboard.plugins.histogram.summary', 'tensorboard.plugins.histogram.metadata', 'tensorboard.plugins.histogram.plugin_data_pb2', 'tensorboard.plugins.histogram.summary_v2', 'tensorboard.util.tensor_util', 'tensorboard.compat.tensorflow_stub', 'tensorboard.compat.proto.config_pb2', 'tensorboard.compat.proto.cost_graph_pb2', 'tensorboard.compat.proto.graph_pb2', 'tensorboard.compat.proto.function_pb2', 'tensorboard.compat.proto.attr_value_pb2', 'tensorboard.compat.proto.node_def_pb2', 'tensorboard.compat.proto.op_def_pb2', 'tensorboard.compat.proto.versions_pb2', 'tensorboard.compat.proto.step_stats_pb2', 'tensorboard.compat.proto.allocation_description_pb2', 'tensorboard.compat.proto.tensor_description_pb2', 'tensorboard.compat.proto.cluster_pb2', 'tensorboard.compat.proto.debug_pb2', 'tensorboard.compat.proto.rewriter_config_pb2', 'tensorboard.compat.proto.verifier_config_pb2', 'tensorboard.compat.proto.event_pb2', 'tensorboard.compat.proto.meta_graph_pb2', 'tensorboard.compat.proto.saved_object_graph_pb2', 'tensorboard.compat.proto.variable_pb2', 'tensorboard.compat.proto.struct_pb2', 'tensorboard.compat.proto.trackable_object_graph_pb2', 'tensorboard.compat.proto.saver_pb2', 'tensorboard.compat.tensorflow_stub.dtypes', 'tensorboard.compat.tensorflow_stub.pywrap_tensorflow', 'tensorboard.compat.tensorflow_stub.errors', 'tensorboard.compat.tensorflow_stub.error_codes', 'tensorboard.compat.tensorflow_stub.io', 'tensorboard.compat.tensorflow_stub.io.gfile', 'tensorboard.compat.tensorflow_stub.compat', 'tensorboard.compat.tensorflow_stub.compat.v1', 'tensorboard.compat.tensorflow_stub.app', 'tensorboard.compat.tensorflow_stub.flags', 'tensorboard.compat.tensorflow_stub.tensor_shape', 'tensorboard.plugins.image', 'tensorboard.plugins.image.summary', 'tensorboard.plugins.image.metadata', 'tensorboard.plugins.image.plugin_data_pb2', 'tensorboard.plugins.image.summary_v2', 'tensorboard.plugins.pr_curve', 'tensorboard.plugins.pr_curve.summary', 'tensorboard.plugins.pr_curve.metadata', 'tensorboard.plugins.pr_curve.plugin_data_pb2', 'tensorboard.plugins.scalar', 'tensorboard.plugins.scalar.summary', 'tensorboard.plugins.scalar.metadata', 'tensorboard.plugins.scalar.plugin_data_pb2', 'tensorboard.plugins.scalar.summary_v2', 'tensorboard.plugins.text', 'tensorboard.plugins.text.summary', 'tensorboard.plugins.text.metadata', 'tensorboard.plugins.text.plugin_data_pb2', 'tensorboard.plugins.text.summary_v2', 'tensorboard.summary.v2', 'tensorboard.summary._tf', 'tensorboard.summary._tf.summary', 'tensorflow.python.keras.api._v2', 'tensorflow.python.keras.api._v2.keras', 'tensorflow.python.keras.api._v2.keras.activations', 'tensorflow.python.keras.api._v2.keras.applications', 'tensorflow.python.keras.api._v2.keras.applications.densenet', 'tensorflow.python.keras.api._v2.keras.applications.imagenet_utils', 'tensorflow.python.keras.api._v2.keras.applications.inception_resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.inception_v3', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet', 'tensorflow.python.keras.api._v2.keras.applications.mobilenet_v2', 'tensorflow.python.keras.api._v2.keras.applications.nasnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet', 'tensorflow.python.keras.api._v2.keras.applications.resnet50', 'tensorflow.python.keras.api._v2.keras.applications.resnet_v2', 'tensorflow.python.keras.api._v2.keras.applications.vgg16', 'tensorflow.python.keras.api._v2.keras.applications.vgg19', 'tensorflow.python.keras.api._v2.keras.applications.xception', 'tensorflow.python.keras.api._v2.keras.backend', 'tensorflow.python.keras.api._v2.keras.callbacks', 'tensorflow.python.keras.api._v2.keras.constraints', 'tensorflow.python.keras.api._v2.keras.datasets', 'tensorflow.python.keras.api._v2.keras.datasets.boston_housing', 'tensorflow.python.keras.api._v2.keras.datasets.cifar10', 'tensorflow.python.keras.api._v2.keras.datasets.cifar100', 'tensorflow.python.keras.api._v2.keras.datasets.fashion_mnist', 'tensorflow.python.keras.api._v2.keras.datasets.imdb', 'tensorflow.python.keras.api._v2.keras.datasets.mnist', 'tensorflow.python.keras.api._v2.keras.datasets.reuters', 'tensorflow.python.keras.api._v2.keras.estimator', 'tensorflow.python.keras.api._v2.keras.experimental', 'tensorflow.python.keras.api._v2.keras.initializers', 'tensorflow.python.keras.api._v2.keras.layers', 'tensorflow.python.keras.api._v2.keras.layers.experimental', 'tensorflow.python.keras.api._v2.keras.layers.experimental.preprocessing', 'tensorflow.python.keras.api._v2.keras.losses', 'tensorflow.python.keras.api._v2.keras.metrics', 'tensorflow.python.keras.api._v2.keras.mixed_precision', 'tensorflow.python.keras.api._v2.keras.mixed_precision.experimental', 'tensorflow.python.keras.api._v2.keras.models', 'tensorflow.python.keras.api._v2.keras.optimizers', 'tensorflow.python.keras.api._v2.keras.optimizers.schedules', 'tensorflow.python.keras.api._v2.keras.preprocessing', 'tensorflow.python.keras.api._v2.keras.preprocessing.image', 'tensorflow.python.keras.api._v2.keras.preprocessing.sequence', 'tensorflow.python.keras.api._v2.keras.preprocessing.text', 'tensorflow.python.keras.api._v2.keras.regularizers', 'tensorflow.python.keras.api._v2.keras.utils', 'tensorflow.python.keras.api._v2.keras.wrappers', 'tensorflow.python.keras.api._v2.keras.wrappers.scikit_learn', 'tensorflow._api.v2.config', 'tensorflow._api.v2.config.experimental', 'tensorflow._api.v2.config.optimizer', 'tensorflow._api.v2.config.threading', 'tensorflow._api.v2.data', 'tensorflow._api.v2.data.experimental', 'tensorflow._api.v2.debugging', 'tensorflow._api.v2.debugging.experimental', 'tensorflow._api.v2.distribute', 'tensorflow._api.v2.distribute.cluster_resolver', 'tensorflow._api.v2.distribute.experimental', 'tensorflow._api.v2.dtypes', 'tensorflow._api.v2.errors', 'tensorflow._api.v2.experimental', 'tensorflow._api.v2.experimental.dlpack', 'tensorflow._api.v2.experimental.tensorrt', 'tensorflow._api.v2.feature_column', 'tensorflow._api.v2.graph_util', 'tensorflow._api.v2.image', 'tensorflow._api.v2.io', 'tensorflow._api.v2.io.gfile', 'tensorflow._api.v2.linalg', 'tensorflow._api.v2.linalg.experimental', 'tensorflow._api.v2.lite', 'tensorflow._api.v2.lite.experimental', 'tensorflow._api.v2.lookup', 'tensorflow._api.v2.lookup.experimental', 'tensorflow._api.v2.math', 'tensorflow._api.v2.math.special', 'tensorflow._api.v2.mixed_precision', 'tensorflow._api.v2.mixed_precision.experimental', 'tensorflow._api.v2.mlir', 'tensorflow._api.v2.mlir.experimental', 'tensorflow._api.v2.nest', 'tensorflow._api.v2.nn', 'tensorflow._api.v2.profiler', 'tensorflow._api.v2.profiler.experimental', 'tensorflow._api.v2.profiler.experimental.client', 'tensorflow._api.v2.profiler.experimental.server', 'tensorflow._api.v2.quantization', 'tensorflow._api.v2.queue', 'tensorflow._api.v2.ragged', 'tensorflow._api.v2.random', 'tensorflow._api.v2.random.experimental', 'tensorflow._api.v2.raw_ops', 'tensorflow._api.v2.saved_model', 'tensorflow._api.v2.sets', 'tensorflow._api.v2.signal', 'tensorflow._api.v2.sparse', 'tensorflow._api.v2.strings', 'tensorflow._api.v2.summary', 'tensorflow._api.v2.summary.experimental', 'tensorflow._api.v2.sysconfig', 'tensorflow._api.v2.test', 'tensorflow._api.v2.tpu', 'tensorflow._api.v2.tpu.experimental', 'tensorflow._api.v2.train', 'tensorflow._api.v2.train.experimental', 'tensorflow._api.v2.version', 'tensorflow._api.v2.xla', 'tensorflow._api.v2.xla.experimental', 'tensorflow.keras', 'tensorflow.keras.activations', 'tensorflow.keras.applications', 'tensorflow.keras.applications.densenet', 'tensorflow.keras.applications.imagenet_utils', 'tensorflow.keras.applications.inception_resnet_v2', 'tensorflow.keras.applications.inception_v3', 'tensorflow.keras.applications.mobilenet', 'tensorflow.keras.applications.mobilenet_v2', 'tensorflow.keras.applications.nasnet', 'tensorflow.keras.applications.resnet', 'tensorflow.keras.applications.resnet50', 'tensorflow.keras.applications.resnet_v2', 'tensorflow.keras.applications.vgg16', 'tensorflow.keras.applications.vgg19', 'tensorflow.keras.applications.xception', 'tensorflow.keras.backend', 'tensorflow.keras.callbacks', 'tensorflow.keras.constraints', 'tensorflow.keras.datasets', 'tensorflow.keras.datasets.boston_housing', 'tensorflow.keras.datasets.cifar10', 'tensorflow.keras.datasets.cifar100', 'tensorflow.keras.datasets.fashion_mnist', 'tensorflow.keras.datasets.imdb', 'tensorflow.keras.datasets.mnist', 'tensorflow.keras.datasets.reuters', 'tensorflow.keras.estimator', 'tensorflow.keras.experimental', 'tensorflow.keras.initializers', 'tensorflow.keras.layers', 'tensorflow.keras.layers.experimental', 'tensorflow.keras.layers.experimental.preprocessing', 'tensorflow.keras.losses', 'tensorflow.keras.metrics', 'tensorflow.keras.mixed_precision', 'tensorflow.keras.mixed_precision.experimental', 'tensorflow.keras.models', 'tensorflow.keras.optimizers', 'tensorflow.keras.optimizers.schedules', 'tensorflow.keras.preprocessing', 'tensorflow.keras.preprocessing.image', 'tensorflow.keras.preprocessing.sequence', 'tensorflow.keras.preprocessing.text', 'tensorflow.keras.regularizers', 'tensorflow.keras.utils', 'tensorflow.keras.wrappers', 'tensorflow.keras.wrappers.scikit_learn', 'keras.utils.losses_utils', 'keras.utils.metrics_utils', 'keras.utils.layer_utils', 'keras.utils.vis_utils', 'keras.models', 'keras.engine', 'keras.engine.input_layer', 'keras.engine.base_layer', 'keras.initializers', 'keras.legacy', 'keras.legacy.interfaces', 'keras.engine.network', 'keras.engine.saving', 'keras.losses', 'keras.optimizers', 'keras.engine.training', 'keras.engine.training_utils', 'keras.metrics', 'keras.layers', 'keras.layers.merge', 'keras.layers.core', 'keras.activations', 'keras.regularizers', 'keras.constraints', 'keras.layers.convolutional', 'keras.layers.pooling', 'keras.legacy.layers', 'keras.layers.local', 'keras.layers.recurrent', 'keras.layers.cudnn_recurrent', 'keras.layers.normalization', 'keras.layers.embeddings', 'keras.layers.noise', 'keras.layers.advanced_activations', 'keras.layers.wrappers', 'keras.layers.convolutional_recurrent', 'keras.engine.training_arrays', 'keras.callbacks', 'keras.callbacks.callbacks', 'keras.callbacks.tensorboard_v2', 'keras.engine.training_generator', 'keras.engine.sequential', 'keras.utils.multi_gpu_utils', 'keras.applications', 'keras_applications', 'keras_applications.vgg16', 'keras_applications.imagenet_utils', 'keras_applications.vgg19', 'keras_applications.resnet50', 'keras_applications.inception_v3', 'keras_applications.inception_resnet_v2', 'keras_applications.xception', 'keras_applications.mobilenet', 'keras_applications.mobilenet_v2', 'keras_applications.densenet', 'keras_applications.nasnet', 'keras_applications.resnet', 'keras_applications.resnet_common', 'keras_applications.resnet_v2', 'keras_applications.resnext', 'keras.applications.vgg16', 'keras.applications.vgg19', 'keras.applications.resnet50', 'keras.applications.inception_v3', 'keras.applications.inception_resnet_v2', 'keras.applications.xception', 'keras.applications.mobilenet', 'keras.applications.mobilenet_v2', 'keras.applications.densenet', 'keras.applications.nasnet', 'keras.applications.resnet', 'keras.applications.resnet_v2', 'keras.datasets', 'keras.datasets.mnist', 'keras.datasets.imdb', 'keras.preprocessing', 'keras.preprocessing.image', 'keras.preprocessing.sequence', 'keras.preprocessing.text', 'keras.datasets.reuters', 'keras.datasets.cifar10', 'keras.datasets.cifar', 'keras.datasets.cifar100', 'keras.datasets.boston_housing', 'keras.datasets.fashion_mnist', 'keras.wrappers', 'keras.wrappers.scikit_learn', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=C:\Users\Chelovek\.matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from C:\Users\Chelovek\.matplotlib\fontlist-v310.json
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan.hdf5
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :model exists
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan.hdf5
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.5065110565110565
INFO: :pAUC : 0.5020043967412389
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.4813091922005571
INFO: :pAUC : 0.5018325758686409
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.45298850574712646
INFO: :pAUC : 0.48744706594071385
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.5246260387811634
INFO: :pAUC : 0.5050298877387375
INFO: :AUC and pAUC results -> ./result/result.csv
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :model exists
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan.hdf5
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.46223587223587226
INFO: :pAUC : 0.5053666106297685
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.5166852367688022
INFO: :pAUC : 0.5110687582465914
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.6722126436781609
INFO: :pAUC : 0.5725952813067151
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.4942382271468144
INFO: :pAUC : 0.49686543227875785
INFO: :AUC and pAUC results -> ./result/result.csv
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :model exists
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan.hdf5
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.5451842751842751
INFO: :pAUC : 0.49605586447691713
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.583342618384401
INFO: :pAUC : 0.5178126374431902
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.6084195402298851
INFO: :pAUC : 0.5263157894736842
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.5869529085872576
INFO: :pAUC : 0.5235457063711911
INFO: :AUC and pAUC results -> ./result/result.csv
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.5416707616707617
INFO: :pAUC : 0.49359886201991465
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.5416707616707617
INFO: :pAUC : 0.49359886201991465
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.733816155988858
INFO: :pAUC : 0.5431754874651811
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.5416707616707617
INFO: :pAUC : 0.49359886201991465
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.733816155988858
INFO: :pAUC : 0.5431754874651811
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.6125862068965517
INFO: :pAUC : 0.5273744706594071
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.732382271468144
INFO: :pAUC : 0.528794284881178
INFO: :AUC and pAUC results -> ./result/result.csv
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.5416707616707617
INFO: :pAUC : 0.49359886201991465
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.733816155988858
INFO: :pAUC : 0.5431754874651811
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.6125862068965517
INFO: :pAUC : 0.5273744706594071
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.732382271468144
INFO: :pAUC : 0.528794284881178
INFO: :AUC and pAUC results -> ./result/result.csv
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.5194103194103195
INFO: :pAUC : 0.489590068537437
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.7347632311977716
INFO: :pAUC : 0.5420026389092508
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.6252011494252873
INFO: :pAUC : 0.5166364186327889
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.7982548476454294
INFO: :pAUC : 0.5225251494386937
INFO: :AUC and pAUC results -> ./result/result.csv
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000093.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000090.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000071.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000078.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000093.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000035.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000089.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.48533169533169535
INFO: :pAUC : 0.48933143669985774
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.6559610027855153
INFO: :pAUC : 0.5365782143380736
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000093.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000052.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000093.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000098.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000093.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000029.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000085.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000093.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000093.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000100.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000101.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000102.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000103.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000104.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000105.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000106.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000107.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000108.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000109.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000110.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000111.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000112.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000113.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000114.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000115.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000116.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000117.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000118.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000119.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000120.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000121.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000122.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000123.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000124.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000125.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000126.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000127.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000128.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000129.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000130.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000131.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000132.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000133.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000134.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000135.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000136.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000137.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000138.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000139.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000140.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000141.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000142.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000143.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000144.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000145.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000146.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000147.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000148.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000149.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000150.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000151.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000152.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000153.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000154.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000155.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000156.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000157.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000158.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000159.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000160.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000161.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000162.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000163.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000164.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000165.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000166.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000167.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000168.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000169.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000170.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000171.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000172.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000173.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000174.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000175.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000176.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000177.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000178.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000179.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000180.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000181.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000182.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000183.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000184.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000185.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000186.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000187.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000188.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000189.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000190.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000191.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000192.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000193.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000194.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000195.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000196.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000197.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000198.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000199.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000200.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000201.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000202.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000203.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000204.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000205.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000206.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000207.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000208.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000209.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000210.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000211.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000212.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000213.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000214.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000215.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000216.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000217.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000218.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000219.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000220.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000221.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000222.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000223.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000224.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000225.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000226.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000227.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000228.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000229.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000230.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000231.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000232.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000233.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000234.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000235.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000236.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000237.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000238.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000239.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000240.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000241.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000242.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000243.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000244.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000245.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000246.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000247.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000248.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000249.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000250.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000251.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000252.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000253.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000254.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000255.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000256.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000257.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000258.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000259.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000260.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000261.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000262.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000263.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000264.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000265.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000266.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000267.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000268.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000269.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000270.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000271.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000272.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000273.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000274.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000275.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000276.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000277.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000278.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000279.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000280.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000281.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000282.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000283.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000284.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000285.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000286.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000287.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000288.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000289.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000290.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000291.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000292.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000293.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000294.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000295.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000296.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000297.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000298.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000299.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000300.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000301.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000302.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000303.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000304.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000305.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000306.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000307.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000308.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000309.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000310.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000311.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000312.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000313.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000314.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000315.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000316.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000317.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000318.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000319.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000320.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000321.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000322.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000323.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000324.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000325.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000326.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000327.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000328.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000329.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000330.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000331.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000332.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000333.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000334.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000335.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000336.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000337.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000338.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000339.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000340.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000341.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000342.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000343.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000344.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000345.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000346.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000347.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000348.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000349.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000350.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000351.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000352.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000353.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000354.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000355.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000356.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000357.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000358.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000359.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000360.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000361.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000362.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000363.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000364.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000365.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000366.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000367.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000368.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000369.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000370.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000371.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000372.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000373.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000374.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000375.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000376.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000377.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000378.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000379.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000380.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000381.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000382.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000383.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000384.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000385.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000386.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000387.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000388.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000389.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000390.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000391.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000392.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000393.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000394.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000395.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000396.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000397.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000398.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000399.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000400.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000401.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000402.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000403.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000404.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000405.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000406.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000093.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000061.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.4914250614250614
INFO: :pAUC : 0.49928876244665715
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.4914250614250614
INFO: :pAUC : 0.49928876244665715
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.4914250614250614
INFO: :pAUC : 0.49928876244665715
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :model exists
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan.hdf5
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :model exists
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan.hdf5
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan.hdf5
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.4914250614250614
INFO: :pAUC : 0.49928876244665715
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.5194103194103195
INFO: :pAUC : 0.489590068537437
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.7347632311977716
INFO: :pAUC : 0.5420026389092508
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.6252011494252873
INFO: :pAUC : 0.5166364186327889
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.7982548476454294
INFO: :pAUC : 0.5225251494386937
INFO: :AUC and pAUC results -> ./result/result.csv
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 911
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 911
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 911
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 911
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan.hdf5
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.5194103194103195
INFO: :pAUC : 0.489590068537437
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.7347632311977716
INFO: :pAUC : 0.5420026389092508
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.6252011494252873
INFO: :pAUC : 0.5166364186327889
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.7982548476454294
INFO: :pAUC : 0.5225251494386937
INFO: :AUC and pAUC results -> ./result/result.csv
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.47660933660933663
INFO: :pAUC : 0.4992887624466572
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.4116155988857939
INFO: :pAUC : 0.5238234862923326
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.5725574712643677
INFO: :pAUC : 0.5069570477918935
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.47620498614958445
INFO: :pAUC : 0.49365796763376585
INFO: :AUC and pAUC results -> ./result/result.csv
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.4734398034398035
INFO: :pAUC : 0.4875210138368033
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.41298050139275766
INFO: :pAUC : 0.529394516933001
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.5687356321839081
INFO: :pAUC : 0.5009074410163339
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.4578393351800554
INFO: :pAUC : 0.5117364047237206
INFO: :AUC and pAUC results -> ./result/result.csv
>>>>>>> 7170db90b8c6e364615bd7f660e0d83394f19783
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
<<<<<<< HEAD
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
=======
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 975
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 974
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 976
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
ERROR: :file_broken or not exists!! : D
ERROR: :file_broken or not exists!! : :
ERROR: :file_broken or not exists!! : \
ERROR: :file_broken or not exists!! : P
ERROR: :file_broken or not exists!! : r
ERROR: :file_broken or not exists!! : o
ERROR: :file_broken or not exists!! : j
ERROR: :file_broken or not exists!! : e
ERROR: :file_broken or not exists!! : c
ERROR: :file_broken or not exists!! : t
ERROR: :file_broken or not exists!! : s
ERROR: :file_broken or not exists!! : \
ERROR: :file_broken or not exists!! : d
ERROR: :file_broken or not exists!! : c
ERROR: :file_broken or not exists!! : a
ERROR: :file_broken or not exists!! : s
ERROR: :file_broken or not exists!! : e
ERROR: :file_broken or not exists!! : \
ERROR: :file_broken or not exists!! : d
ERROR: :file_broken or not exists!! : e
ERROR: :file_broken or not exists!! : v
ERROR: :file_broken or not exists!! : _
ERROR: :file_broken or not exists!! : d
ERROR: :file_broken or not exists!! : a
ERROR: :file_broken or not exists!! : t
ERROR: :file_broken or not exists!! : a
ERROR: :file_broken or not exists!! : \
ERROR: :file_broken or not exists!! : f
ERROR: :file_broken or not exists!! : a
ERROR: :file_broken or not exists!! : n
ERROR: :file_broken or not exists!! : \
ERROR: :file_broken or not exists!! : t
ERROR: :file_broken or not exists!! : r
ERROR: :file_broken or not exists!! : a
ERROR: :file_broken or not exists!! : i
ERROR: :file_broken or not exists!! : n
ERROR: :file_broken or not exists!! : \
ERROR: :file_broken or not exists!! : n
ERROR: :file_broken or not exists!! : o
ERROR: :file_broken or not exists!! : r
ERROR: :file_broken or not exists!! : m
ERROR: :file_broken or not exists!! : a
ERROR: :file_broken or not exists!! : l
ERROR: :file_broken or not exists!! : _
ERROR: :file_broken or not exists!! : i
ERROR: :file_broken or not exists!! : d
ERROR: :file_broken or not exists!! : _
ERROR: :file_broken or not exists!! : 0
ERROR: :file_broken or not exists!! : 0
ERROR: :file_broken or not exists!! : _
ERROR: :file_broken or not exists!! : 0
ERROR: :file_broken or not exists!! : 0
ERROR: :file_broken or not exists!! : 0
ERROR: :file_broken or not exists!! : 0
ERROR: :file_broken or not exists!! : 0
ERROR: :file_broken or not exists!! : 0
ERROR: :file_broken or not exists!! : 0
ERROR: :file_broken or not exists!! : 0
ERROR: :file_broken or not exists!! : .
ERROR: :file_broken or not exists!! : w
ERROR: :file_broken or not exists!! : a
ERROR: :file_broken or not exists!! : v
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan_bad.hdf5
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan_bad.hdf5
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
INFO: :target_dir : D:\Projects\dcase\dev_data\fan
INFO: :train_file num : 3675
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('D:\\Projects\\dcase\\venv\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan_bad.hdf5
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000093.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000037.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000052.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000008.wav
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000103.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000107.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000112.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000115.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000116.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000117.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000120.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000121.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000124.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000131.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000132.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000134.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000148.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000151.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000155.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000157.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000158.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000159.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000160.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000161.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000162.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000168.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000170.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000174.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000175.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000177.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000181.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000188.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000189.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000191.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000192.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000195.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000197.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000199.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000202.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000205.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000206.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000208.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000209.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000214.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000215.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000216.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000217.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000218.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000221.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000222.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000234.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000238.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000241.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000244.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000247.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000251.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000252.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000259.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000260.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000265.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000269.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000272.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000274.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000276.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000279.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000282.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000286.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000289.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000290.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000291.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000293.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000295.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000298.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000300.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000301.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000303.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000306.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000308.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000310.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000312.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000313.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000314.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000316.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000335.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000338.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000339.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000341.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000342.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000344.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000346.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000348.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000353.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000354.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000360.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000362.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000366.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000373.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000374.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000376.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000379.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000381.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000386.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000390.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000392.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000394.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000402.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000403.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000406.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.5066584766584766
INFO: :pAUC : 0.48777964567438253
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000102.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000103.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000108.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000109.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000110.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000112.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000117.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000118.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000119.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000121.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000122.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000123.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000126.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000130.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000133.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000144.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000148.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000149.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000152.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000156.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000168.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000173.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000174.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000175.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000177.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000180.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000181.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000182.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000183.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000184.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000188.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000191.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000193.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000200.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000216.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000219.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000220.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000226.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000229.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000235.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000236.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000238.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000241.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000250.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000251.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000256.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000257.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000262.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000264.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000268.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000269.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000271.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000272.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000273.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000274.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000278.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000279.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000280.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000284.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000285.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000287.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000289.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000297.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000298.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000301.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000302.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000303.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000305.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000315.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000316.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000322.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000333.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000341.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000342.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000343.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000344.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000348.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000350.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000352.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000358.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.5471448467966573
INFO: :pAUC : 0.5507990030787274
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000101.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000105.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000106.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000108.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000109.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000111.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000112.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000114.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000116.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000117.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000118.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000121.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000122.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000124.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000128.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000131.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000132.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000137.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000143.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000145.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000148.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000150.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000152.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000153.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000155.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000156.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000160.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000161.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000163.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000166.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000167.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000168.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000169.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000170.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000173.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000178.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000180.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000182.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000188.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000189.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000191.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000196.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000198.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000199.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000202.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000208.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000209.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000210.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000211.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000212.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000217.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000219.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000225.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000227.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000233.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000235.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000236.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000237.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000238.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000239.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000240.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000241.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000242.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000245.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000246.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000250.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000251.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000253.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000254.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000263.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000268.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000269.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000270.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000271.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000272.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000278.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000283.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000285.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000288.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000289.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000293.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000296.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000298.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000301.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000306.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000313.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000314.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000322.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000325.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000326.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000328.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000330.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000333.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000338.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000339.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000343.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000345.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.4235919540229885
INFO: :pAUC : 0.499697519661222
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000093.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000100.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000104.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000105.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000106.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000125.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000126.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000127.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000135.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000137.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000138.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000142.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000145.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000148.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000150.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000154.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000158.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000159.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000162.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000171.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000172.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000179.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000180.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000181.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000183.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000185.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000187.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000190.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000191.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000195.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000196.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000198.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000200.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000201.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000207.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000208.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000212.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000217.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000223.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000226.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000227.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000231.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000232.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000236.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000239.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000241.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000243.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000246.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000248.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000249.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000250.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000255.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000257.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000259.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000260.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000268.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000273.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000275.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000277.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000278.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000280.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000282.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000283.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000286.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000288.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000289.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000290.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000292.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000297.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000298.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000299.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000302.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000305.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000306.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000312.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000317.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000324.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000325.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000326.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000337.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000340.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000348.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000349.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000352.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000354.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000357.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.48581717451523543
INFO: :pAUC : 0.4917626476162706
INFO: :AUC and pAUC results -> ./result/result.csv
DEBUG:tensorflow:Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
INFO: :load_directory <- development
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000033.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000103.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000112.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000115.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000116.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000117.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000120.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000121.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000124.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000131.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000132.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000134.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000140.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000148.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000151.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000155.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000157.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000158.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000159.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000160.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000161.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000162.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000168.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000170.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000174.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000175.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000177.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000181.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000188.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000189.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000191.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000192.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000195.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000197.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000199.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000202.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000205.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000206.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000208.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000209.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000214.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000215.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000216.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000217.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000221.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000222.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000234.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000238.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000241.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000244.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000247.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000251.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000252.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000259.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000269.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000272.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000274.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000276.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000279.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000282.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000286.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000288.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000289.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000290.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000291.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000293.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000295.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000298.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000300.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000301.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000303.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000306.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000308.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000310.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000312.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000313.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000314.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000316.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000335.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000339.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000341.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000342.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000344.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000346.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000348.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000353.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000354.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000360.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000362.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000366.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000372.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000373.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000374.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000376.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000379.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000381.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000386.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000390.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000392.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000394.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000400.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000402.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000403.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_00_00000406.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.513071253071253
INFO: :pAUC : 0.4876503297555929
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_02
INFO: :test_file  num : 459
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000047.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000050.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000057.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_02_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000005.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000029.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000070.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000077.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000100.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000102.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000103.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000108.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000109.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000110.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000112.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000117.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000118.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000119.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000121.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000123.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000130.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000133.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000144.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000148.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000149.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000152.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000156.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000168.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000173.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000174.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000175.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000177.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000180.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000181.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000182.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000183.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000184.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000188.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000191.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000193.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000200.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000216.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000219.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000220.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000226.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000229.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000235.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000236.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000238.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000241.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000243.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000250.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000251.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000256.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000257.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000262.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000264.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000268.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000269.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000271.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000272.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000273.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000274.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000278.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000279.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000284.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000285.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000287.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000289.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000297.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000298.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000301.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000302.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000303.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000305.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000313.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000315.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000316.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000322.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000333.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000338.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000341.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000342.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000343.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000344.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000348.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000350.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000352.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_02_00000358.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.5419359331476323
INFO: :pAUC : 0.5497727605922885
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_04
INFO: :test_file  num : 448
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000000.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000011.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000055.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000080.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_04_00000095.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000003.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000006.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000010.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000015.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000017.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000020.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000021.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000024.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000032.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000035.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000046.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000048.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000051.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000059.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000060.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000067.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000069.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000073.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000076.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000083.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000086.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000087.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000101.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000105.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000106.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000108.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000109.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000111.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000112.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000114.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000116.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000117.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000118.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000121.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000122.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000124.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000128.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000131.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000132.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000137.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000143.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000145.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000148.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000150.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000152.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000153.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000155.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000156.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000161.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000163.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000166.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000167.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000168.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000169.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000170.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000173.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000178.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000180.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000182.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000188.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000189.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000191.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000196.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000198.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000199.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000202.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000208.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000209.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000210.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000211.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000212.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000217.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000219.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000225.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000227.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000233.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000235.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000236.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000238.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000239.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000240.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000241.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000242.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000245.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000246.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000250.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000251.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000253.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000254.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000263.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000268.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000269.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000270.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000271.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000272.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000278.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000283.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000285.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000288.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000289.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000293.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000296.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000298.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000299.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000301.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000306.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000314.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000322.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000325.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000326.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000328.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000330.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000333.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000338.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000339.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000343.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_04_00000345.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.42410919540229886
INFO: :pAUC : 0.5001512401693889
INFO: :target_dir : D:\Projects\dcase\dev_data\fan_id_06
INFO: :test_file  num : 461
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000002.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000013.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000016.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000018.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000019.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000022.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000023.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000027.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000030.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000039.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000041.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000044.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000054.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000065.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000066.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000071.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000074.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000081.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000084.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000085.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000088.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000089.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000091.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000096.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000097.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\normal_id_06_00000099.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000001.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000007.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000008.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000009.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000012.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000014.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000025.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000026.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000028.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000031.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000034.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000036.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000038.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000040.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000042.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000045.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000049.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000052.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000053.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000056.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000058.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000061.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000062.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000063.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000064.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000068.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000075.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000078.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000079.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000082.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000090.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000092.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000093.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000094.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000098.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000100.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000104.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000105.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000106.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000109.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000120.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000125.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000126.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000127.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000135.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000137.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000138.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000142.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000145.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000146.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000148.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000150.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000154.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000158.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000159.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000162.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000171.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000172.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000179.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000180.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000181.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000183.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000185.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000187.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000190.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000191.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000195.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000196.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000198.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000200.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000201.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000207.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000208.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000212.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000217.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000223.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000226.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000227.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000231.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000232.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000236.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000239.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000241.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000243.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000246.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000248.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000249.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000255.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000257.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000258.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000259.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000260.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000268.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000275.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000277.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000278.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000280.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000282.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000283.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000286.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000288.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000289.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000290.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000292.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000297.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000298.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000299.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000302.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000305.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000306.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000312.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000317.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000324.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000325.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000326.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000337.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000340.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000348.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000349.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000352.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000354.wav
ERROR: :file broken!!: D:\Projects\dcase\dev_data\fan/test\anomaly_id_06_00000357.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.486371191135734
INFO: :pAUC : 0.4933663799387666
INFO: :AUC and pAUC results -> ./result/result.csv
>>>>>>> 6f1d1ec725d33faa4429e888c3692eb9b5349b6a
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:2503: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

DEBUG:matplotlib.axes._base:update_title_pos
DEBUG:matplotlib.font_manager:findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\markh\\Work\\my_dcase\\testing\\env\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\markh\\Work\\my_dcase\\testing\\env\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan_good.hdf5
INFO: :load_directory <- development
INFO: :model exists
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000100.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000101.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000102.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000103.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000104.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000105.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000106.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000107.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000108.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000109.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000110.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000111.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000112.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000113.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000114.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000115.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000116.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000117.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000118.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000119.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000120.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000121.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000122.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000123.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000124.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000125.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000126.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000127.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000128.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000129.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000130.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000131.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000132.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000133.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000134.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000135.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000136.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000137.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000138.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000139.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000140.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000141.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000142.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000143.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000144.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000145.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000146.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000147.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000148.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000149.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000150.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000151.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000152.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000153.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000154.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000155.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000156.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000157.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000158.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000159.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000160.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000161.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000162.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000163.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000164.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000165.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000166.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000167.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000168.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000169.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000170.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000171.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000172.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000173.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000174.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000175.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000176.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000177.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000178.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000179.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000180.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000181.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000182.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000183.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000184.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000185.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000186.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000187.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000188.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000189.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000190.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000191.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000192.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000193.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000194.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000195.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000196.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000197.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000198.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000199.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000200.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000201.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000202.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000203.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000204.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000205.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000206.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000207.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000208.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000209.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000210.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000211.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000212.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000213.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000214.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000215.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000216.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000217.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000218.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000219.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000220.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000221.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000222.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000223.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000224.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000225.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000226.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000227.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000228.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000229.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000230.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000231.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000232.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000233.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000234.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000235.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000236.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000237.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000238.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000239.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000240.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000241.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000242.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000243.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000244.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000245.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000246.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000247.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000248.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000249.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000250.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000251.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000252.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000253.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000254.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000255.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000256.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000257.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000258.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000259.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000260.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000261.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000262.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000263.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000264.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000265.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000266.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000267.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000268.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000269.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000270.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000271.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000272.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000273.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000274.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000275.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000276.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000277.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000278.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000279.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000280.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000281.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000282.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000283.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000284.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000285.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000286.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000287.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000288.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000289.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000290.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000291.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000292.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000293.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000294.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000295.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000296.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000297.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000298.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000299.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000300.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000301.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000302.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000303.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000304.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000305.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000306.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000307.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000308.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000309.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000310.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000311.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000312.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000313.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000314.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000315.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000316.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000317.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000318.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000319.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000320.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000321.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000322.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000323.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000324.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000325.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000326.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000327.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000328.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000329.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000330.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000331.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000332.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000333.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000334.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000335.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000336.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000337.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000338.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000339.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000340.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000341.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000342.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000343.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000344.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000345.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000346.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000347.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000348.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000349.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000350.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000351.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000352.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000353.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000354.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000355.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000356.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000357.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000358.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000359.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000360.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000361.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000362.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000363.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000364.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000365.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000366.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000367.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000368.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000369.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000370.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000371.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000372.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000373.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000374.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000375.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000376.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000377.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000378.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000379.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000380.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000381.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000382.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000383.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000384.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000385.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000386.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000387.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000388.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000389.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000390.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000391.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000392.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000393.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000394.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000395.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000396.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000397.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000398.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000399.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000400.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000401.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000402.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000403.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000404.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000405.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000406.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.5
INFO: :pAUC : 0.5
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_02
INFO: :test_file  num : 459
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000100.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000101.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000102.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000103.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000104.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000105.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000106.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000107.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000108.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000109.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000110.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000111.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000112.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000113.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000114.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000115.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000116.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000117.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000118.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000119.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000120.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000121.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000122.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000123.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000124.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000125.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000126.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000127.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000128.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000129.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000130.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000131.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000132.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000133.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000134.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000135.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000136.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000137.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000138.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000139.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000140.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000141.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000142.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000143.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000144.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000145.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000146.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000147.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000148.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000149.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000150.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000151.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000152.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000153.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000154.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000155.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000156.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000157.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000158.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000159.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000160.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000161.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000162.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000163.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000164.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000165.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000166.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000167.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000168.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000169.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000170.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000171.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000172.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000173.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000174.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000175.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000176.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000177.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000178.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000179.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000180.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000181.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000182.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000183.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000184.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000185.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000186.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000187.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000188.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000189.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000190.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000191.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000192.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000193.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000194.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000195.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000196.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000197.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000198.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000199.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000200.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000201.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000202.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000203.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000204.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000205.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000206.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000207.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000208.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000209.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000210.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000211.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000212.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000213.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000214.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000215.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000216.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000217.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000218.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000219.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000220.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000221.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000222.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000223.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000224.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000225.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000226.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000227.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000228.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000229.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000230.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000231.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000232.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000233.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000234.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000235.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000236.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000237.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000238.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000239.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000240.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000241.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000242.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000243.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000244.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000245.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000246.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000247.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000248.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000249.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000250.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000251.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000252.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000253.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000254.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000255.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000256.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000257.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000258.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000259.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000260.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000261.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000262.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000263.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000264.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000265.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000266.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000267.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000268.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000269.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000270.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000271.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000272.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000273.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000274.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000275.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000276.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000277.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000278.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000279.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000280.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000281.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000282.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000283.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000284.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000285.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000286.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000287.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000288.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000289.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000290.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000291.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000292.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000293.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000294.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000295.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000296.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000297.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000298.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000299.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000300.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000301.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000302.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000303.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000304.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000305.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000306.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000307.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000308.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000309.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000310.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000311.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000312.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000313.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000314.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000315.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000316.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000317.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000318.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000319.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000320.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000321.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000322.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000323.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000324.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000325.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000326.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000327.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000328.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000329.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000330.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000331.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000332.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000333.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000334.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000335.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000336.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000337.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000338.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000339.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000340.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000341.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000342.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000343.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000344.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000345.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000346.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000347.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000348.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000349.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000350.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000351.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000352.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000353.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000354.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000355.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000356.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000357.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000358.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.5
INFO: :pAUC : 0.5
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_04
INFO: :test_file  num : 448
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000100.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000101.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000102.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000103.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000104.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000105.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000106.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000107.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000108.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000109.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000110.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000111.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000112.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000113.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000114.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000115.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000116.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000117.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000118.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000119.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000120.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000121.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000122.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000123.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000124.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000125.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000126.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000127.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000128.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000129.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000130.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000131.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000132.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000133.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000134.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000135.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000136.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000137.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000138.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000139.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000140.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000141.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000142.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000143.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000144.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000145.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000146.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000147.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000148.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000149.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000150.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000151.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000152.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000153.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000154.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000155.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000156.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000157.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000158.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000159.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000160.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000161.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000162.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000163.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000164.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000165.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000166.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000167.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000168.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000169.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000170.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000171.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000172.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000173.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000174.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000175.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000176.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000177.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000178.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000179.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000180.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000181.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000182.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000183.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000184.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000185.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000186.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000187.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000188.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000189.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000190.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000191.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000192.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000193.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000194.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000195.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000196.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000197.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000198.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000199.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000200.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000201.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000202.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000203.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000204.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000205.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000206.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000207.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000208.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000209.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000210.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000211.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000212.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000213.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000214.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000215.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000216.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000217.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000218.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000219.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000220.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000221.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000222.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000223.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000224.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000225.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000226.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000227.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000228.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000229.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000230.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000231.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000232.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000233.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000234.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000235.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000236.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000237.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000238.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000239.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000240.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000241.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000242.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000243.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000244.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000245.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000246.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000247.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000248.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000249.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000250.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000251.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000252.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000253.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000254.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000255.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000256.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000257.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000258.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000259.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000260.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000261.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000262.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000263.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000264.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000265.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000266.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000267.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000268.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000269.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000270.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000271.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000272.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000273.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000274.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000275.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000276.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000277.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000278.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000279.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000280.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000281.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000282.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000283.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000284.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000285.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000286.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000287.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000288.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000289.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000290.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000291.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000292.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000293.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000294.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000295.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000296.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000297.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000298.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000299.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000300.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000301.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000302.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000303.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000304.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000305.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000306.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000307.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000308.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000309.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000310.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000311.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000312.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000313.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000314.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000315.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000316.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000317.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000318.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000319.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000320.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000321.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000322.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000323.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000324.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000325.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000326.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000327.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000328.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000329.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000330.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000331.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000332.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000333.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000334.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000335.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000336.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000337.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000338.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000339.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000340.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000341.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000342.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000343.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000344.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000345.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000346.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000347.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.5
INFO: :pAUC : 0.5
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_06
INFO: :test_file  num : 461
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000100.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000101.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000102.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000103.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000104.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000105.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000106.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000107.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000108.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000109.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000110.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000111.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000112.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000113.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000114.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000115.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000116.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000117.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000118.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000119.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000120.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000121.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000122.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000123.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000124.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000125.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000126.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000127.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000128.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000129.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000130.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000131.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000132.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000133.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000134.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000135.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000136.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000137.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000138.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000139.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000140.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000141.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000142.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000143.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000144.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000145.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000146.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000147.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000148.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000149.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000150.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000151.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000152.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000153.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000154.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000155.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000156.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000157.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000158.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000159.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000160.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000161.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000162.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000163.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000164.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000165.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000166.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000167.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000168.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000169.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000170.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000171.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000172.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000173.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000174.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000175.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000176.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000177.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000178.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000179.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000180.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000181.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000182.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000183.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000184.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000185.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000186.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000187.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000188.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000189.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000190.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000191.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000192.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000193.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000194.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000195.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000196.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000197.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000198.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000199.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000200.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000201.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000202.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000203.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000204.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000205.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000206.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000207.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000208.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000209.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000210.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000211.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000212.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000213.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000214.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000215.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000216.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000217.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000218.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000219.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000220.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000221.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000222.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000223.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000224.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000225.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000226.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000227.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000228.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000229.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000230.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000231.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000232.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000233.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000234.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000235.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000236.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000237.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000238.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000239.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000240.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000241.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000242.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000243.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000244.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000245.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000246.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000247.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000248.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000249.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000250.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000251.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000252.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000253.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000254.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000255.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000256.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000257.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000258.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000259.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000260.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000261.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000262.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000263.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000264.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000265.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000266.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000267.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000268.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000269.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000270.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000271.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000272.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000273.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000274.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000275.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000276.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000277.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000278.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000279.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000280.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000281.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000282.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000283.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000284.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000285.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000286.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000287.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000288.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000289.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000290.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000291.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000292.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000293.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000294.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000295.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000296.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000297.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000298.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000299.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000300.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000301.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000302.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000303.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000304.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000305.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000306.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000307.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000308.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000309.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000310.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000311.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000312.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000313.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000314.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000315.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000316.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000317.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000318.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000319.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000320.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000321.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000322.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000323.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000324.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000325.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000326.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000327.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000328.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000329.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000330.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000331.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000332.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000333.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000334.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000335.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000336.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000337.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000338.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000339.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000340.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000341.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000342.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000343.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000344.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000345.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000346.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000347.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000348.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000349.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000350.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000351.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000352.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000353.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000354.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000355.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000356.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000357.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000358.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000359.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000360.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.5
INFO: :pAUC : 0.5
INFO: :AUC and pAUC results -> ./result/result.csv
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000050.wav
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000063.wav
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000002.wav
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :load_directory <- development
INFO: :model exists
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:68: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan
INFO: :train_file num : 3675
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:2503: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

DEBUG:matplotlib.axes._base:update_title_pos
DEBUG:matplotlib.font_manager:findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\markh\\Work\\my_dcase\\testing\\env\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\markh\\Work\\my_dcase\\testing\\env\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
INFO: :save_model -> ./model/model_fan_good.hdf5
DEBUG:parso.python.diff:diff parser start
DEBUG:parso.python.diff:line_lengths old: 2; new: 1
DEBUG:parso.python.diff:-> code[replace] old[1:2] new[1:1]
DEBUG:parso.python.diff:parse_part from 1 to 1 (to 0 in part parser)
DEBUG:parso.python.diff:diff parser end
INFO: :load_directory <- development
INFO: :load_directory <- development
INFO: :load_directory <- development
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000100.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000101.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000102.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000103.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000104.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000105.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000106.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000107.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000108.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000109.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000110.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000111.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000112.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000113.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000114.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000115.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000116.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000117.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000118.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000119.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000120.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000121.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000122.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000123.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000124.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000125.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000126.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000127.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000128.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000129.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000130.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000131.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000132.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000133.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000134.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000135.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000136.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000137.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000138.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000139.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000140.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000141.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000142.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000143.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000144.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000145.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000146.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000147.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000148.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000149.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000150.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000151.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000152.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000153.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000154.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000155.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000156.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000157.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000158.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000159.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000160.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000161.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000162.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000163.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000164.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000165.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000166.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000167.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000168.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000169.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000170.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000171.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000172.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000173.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000174.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000175.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000176.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000177.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000178.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000179.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000180.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000181.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000182.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000183.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000184.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000185.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000186.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000187.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000188.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000189.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000190.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000191.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000192.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000193.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000194.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000195.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000196.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000197.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000198.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000199.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000200.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000201.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000202.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000203.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000204.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000205.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000206.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000207.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000208.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000209.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000210.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000211.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000212.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000213.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000214.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000215.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000216.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000217.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000218.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000219.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000220.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000221.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000222.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000223.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000224.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000225.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000226.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000227.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000228.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000229.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000230.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000231.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000232.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000233.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000234.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000235.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000236.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000237.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000238.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000239.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000240.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000241.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000242.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000243.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000244.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000245.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000246.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000247.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000248.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000249.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000250.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000251.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000252.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000253.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000254.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000255.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000256.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000257.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000258.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000259.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000260.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000261.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000262.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000263.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000264.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000265.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000266.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000267.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000268.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000269.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000270.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000271.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000272.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000273.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000274.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000275.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000276.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000277.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000278.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000279.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000280.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000281.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000282.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000283.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000284.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000285.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000286.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000287.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000288.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000289.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000290.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000291.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000292.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000293.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000294.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000295.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000296.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000297.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000298.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000299.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000300.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000301.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000302.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000303.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000304.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000305.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000306.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000307.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000308.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000309.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000310.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000311.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000312.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000313.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000314.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000315.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000316.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000317.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000318.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000319.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000320.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000321.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000322.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000323.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000324.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000325.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000326.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000327.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000328.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000329.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000330.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000331.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000332.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000333.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000334.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000335.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000336.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000337.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000338.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000339.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000340.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000341.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000342.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000343.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000344.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000345.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000346.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000347.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000348.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000349.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000350.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000351.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000352.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000353.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000354.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000355.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000356.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000357.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000358.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000359.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000360.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000361.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000362.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000363.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000364.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000365.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000366.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000367.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000368.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000369.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000370.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000371.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000372.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000373.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000374.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000375.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000376.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000377.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000378.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000379.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000380.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000381.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000382.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000383.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000384.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000385.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000386.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000387.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000388.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000389.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000390.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000391.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000392.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000393.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000394.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000395.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000396.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000397.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000398.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000399.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000400.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000401.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000402.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000403.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000404.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000405.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000406.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.5
INFO: :pAUC : 0.5
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_02
INFO: :test_file  num : 459
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_02_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000100.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000101.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000102.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000103.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000104.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000105.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000106.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000107.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000108.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000109.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000110.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000111.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000112.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000113.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000114.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000115.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000116.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000117.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000118.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000119.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000120.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000121.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000122.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000123.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000124.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000125.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000126.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000127.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000128.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000129.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000130.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000131.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000132.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000133.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000134.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000135.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000136.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000137.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000138.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000139.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000140.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000141.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000142.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000143.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000144.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000145.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000146.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000147.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000148.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000149.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000150.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000151.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000152.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000153.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000154.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000155.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000156.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000157.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000158.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000159.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000160.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000161.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000162.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000163.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000164.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000165.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000166.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000167.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000168.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000169.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000170.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000171.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000172.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000173.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000174.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000175.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000176.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000177.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000178.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000179.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000180.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000181.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000182.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000183.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000184.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000185.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000186.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000187.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000188.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000189.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000190.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000191.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000192.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000193.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000194.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000195.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000196.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000197.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000198.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000199.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000200.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000201.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000202.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000203.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000204.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000205.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000206.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000207.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000208.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000209.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000210.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000211.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000212.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000213.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000214.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000215.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000216.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000217.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000218.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000219.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000220.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000221.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000222.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000223.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000224.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000225.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000226.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000227.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000228.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000229.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000230.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000231.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000232.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000233.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000234.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000235.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000236.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000237.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000238.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000239.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000240.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000241.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000242.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000243.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000244.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000245.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000246.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000247.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000248.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000249.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000250.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000251.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000252.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000253.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000254.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000255.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000256.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000257.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000258.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000259.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000260.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000261.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000262.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000263.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000264.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000265.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000266.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000267.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000268.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000269.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000270.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000271.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000272.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000273.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000274.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000275.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000276.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000277.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000278.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000279.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000280.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000281.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000282.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000283.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000284.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000285.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000286.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000287.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000288.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000289.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000290.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000291.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000292.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000293.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000294.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000295.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000296.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000297.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000298.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000299.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000300.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000301.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000302.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000303.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000304.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000305.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000306.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000307.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000308.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000309.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000310.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000311.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000312.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000313.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000314.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000315.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000316.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000317.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000318.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000319.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000320.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000321.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000322.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000323.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000324.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000325.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000326.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000327.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000328.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000329.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000330.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000331.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000332.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000333.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000334.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000335.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000336.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000337.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000338.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000339.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000340.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000341.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000342.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000343.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000344.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000345.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000346.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000347.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000348.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000349.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000350.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000351.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000352.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000353.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000354.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000355.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000356.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000357.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_02_00000358.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.5
INFO: :pAUC : 0.5
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_04
INFO: :test_file  num : 448
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_04_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000100.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000101.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000102.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000103.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000104.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000105.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000106.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000107.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000108.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000109.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000110.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000111.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000112.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000113.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000114.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000115.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000116.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000117.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000118.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000119.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000120.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000121.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000122.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000123.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000124.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000125.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000126.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000127.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000128.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000129.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000130.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000131.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000132.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000133.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000134.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000135.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000136.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000137.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000138.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000139.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000140.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000141.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000142.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000143.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000144.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000145.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000146.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000147.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000148.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000149.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000150.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000151.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000152.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000153.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000154.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000155.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000156.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000157.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000158.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000159.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000160.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000161.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000162.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000163.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000164.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000165.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000166.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000167.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000168.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000169.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000170.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000171.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000172.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000173.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000174.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000175.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000176.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000177.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000178.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000179.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000180.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000181.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000182.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000183.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000184.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000185.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000186.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000187.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000188.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000189.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000190.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000191.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000192.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000193.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000194.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000195.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000196.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000197.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000198.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000199.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000200.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000201.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000202.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000203.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000204.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000205.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000206.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000207.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000208.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000209.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000210.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000211.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000212.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000213.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000214.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000215.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000216.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000217.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000218.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000219.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000220.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000221.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000222.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000223.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000224.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000225.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000226.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000227.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000228.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000229.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000230.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000231.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000232.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000233.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000234.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000235.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000236.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000237.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000238.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000239.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000240.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000241.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000242.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000243.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000244.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000245.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000246.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000247.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000248.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000249.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000250.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000251.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000252.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000253.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000254.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000255.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000256.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000257.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000258.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000259.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000260.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000261.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000262.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000263.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000264.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000265.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000266.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000267.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000268.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000269.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000270.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000271.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000272.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000273.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000274.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000275.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000276.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000277.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000278.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000279.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000280.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000281.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000282.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000283.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000284.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000285.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000286.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000287.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000288.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000289.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000290.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000291.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000292.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000293.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000294.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000295.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000296.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000297.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000298.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000299.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000300.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000301.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000302.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000303.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000304.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000305.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000306.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000307.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000308.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000309.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000310.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000311.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000312.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000313.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000314.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000315.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000316.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000317.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000318.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000319.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000320.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000321.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000322.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000323.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000324.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000325.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000326.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000327.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000328.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000329.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000330.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000331.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000332.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000333.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000334.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000335.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000336.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000337.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000338.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000339.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000340.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000341.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000342.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000343.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000344.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000345.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000346.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_04_00000347.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.5
INFO: :pAUC : 0.5
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_06
INFO: :test_file  num : 461
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_06_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000100.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000101.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000102.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000103.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000104.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000105.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000106.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000107.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000108.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000109.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000110.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000111.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000112.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000113.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000114.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000115.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000116.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000117.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000118.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000119.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000120.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000121.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000122.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000123.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000124.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000125.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000126.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000127.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000128.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000129.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000130.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000131.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000132.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000133.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000134.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000135.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000136.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000137.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000138.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000139.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000140.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000141.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000142.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000143.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000144.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000145.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000146.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000147.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000148.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000149.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000150.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000151.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000152.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000153.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000154.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000155.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000156.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000157.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000158.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000159.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000160.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000161.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000162.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000163.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000164.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000165.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000166.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000167.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000168.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000169.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000170.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000171.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000172.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000173.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000174.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000175.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000176.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000177.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000178.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000179.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000180.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000181.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000182.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000183.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000184.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000185.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000186.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000187.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000188.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000189.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000190.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000191.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000192.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000193.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000194.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000195.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000196.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000197.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000198.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000199.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000200.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000201.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000202.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000203.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000204.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000205.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000206.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000207.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000208.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000209.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000210.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000211.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000212.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000213.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000214.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000215.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000216.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000217.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000218.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000219.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000220.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000221.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000222.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000223.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000224.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000225.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000226.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000227.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000228.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000229.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000230.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000231.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000232.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000233.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000234.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000235.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000236.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000237.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000238.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000239.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000240.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000241.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000242.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000243.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000244.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000245.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000246.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000247.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000248.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000249.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000250.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000251.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000252.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000253.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000254.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000255.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000256.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000257.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000258.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000259.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000260.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000261.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000262.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000263.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000264.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000265.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000266.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000267.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000268.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000269.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000270.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000271.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000272.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000273.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000274.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000275.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000276.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000277.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000278.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000279.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000280.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000281.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000282.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000283.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000284.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000285.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000286.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000287.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000288.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000289.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000290.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000291.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000292.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000293.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000294.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000295.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000296.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000297.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000298.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000299.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000300.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000301.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000302.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000303.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000304.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000305.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000306.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000307.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000308.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000309.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000310.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000311.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000312.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000313.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000314.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000315.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000316.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000317.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000318.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000319.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000320.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000321.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000322.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000323.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000324.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000325.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000326.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000327.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000328.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000329.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000330.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000331.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000332.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000333.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000334.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000335.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000336.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000337.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000338.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000339.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000340.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000341.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000342.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000343.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000344.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000345.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000346.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000347.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000348.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000349.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000350.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000351.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000352.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000353.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000354.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000355.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000356.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000357.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000358.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000359.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_06_00000360.wav
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.5
INFO: :pAUC : 0.5
INFO: :AUC and pAUC results -> ./result/result.csv
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000098.wav
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000005.wav
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000075.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000076.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000077.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000078.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000079.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000080.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000081.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000082.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000083.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000084.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000085.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000086.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000087.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000088.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000089.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000090.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000091.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000092.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000093.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000094.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000095.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000096.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000097.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000098.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000099.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000007.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000008.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000009.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000010.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000011.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000012.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000013.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000014.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000015.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000016.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000017.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000018.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000019.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000020.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000021.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000022.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000023.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000024.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000025.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000026.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000027.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000028.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000029.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000030.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000031.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000032.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000033.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000034.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000035.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000036.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000037.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000038.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000039.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000040.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000041.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000042.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000043.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000044.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000045.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000046.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000047.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000048.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000049.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000050.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000051.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000052.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000053.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000054.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000055.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000056.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000057.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000058.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000059.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000060.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000061.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000062.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000063.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000064.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000065.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000066.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000067.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000068.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000069.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000070.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000071.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000072.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000073.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000074.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\anomaly_id_00_00000075.wav
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000006.wav
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000004.wav
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000001.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000002.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000003.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000004.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000005.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000006.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000007.wav
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000001.wav
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
ERROR: :file broken!!: C:\Users\markh\Work\my_dcase\testing\dev_data\fan/test\normal_id_00_00000000.wav
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_00.csv
INFO: :AUC : 0.49850122850122847
INFO: :pAUC : 0.5036855036855037
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_02
INFO: :test_file  num : 459
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_02.csv
INFO: :AUC : 0.5115877437325905
INFO: :pAUC : 0.5310071836974051
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_04
INFO: :test_file  num : 448
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_04.csv
INFO: :AUC : 0.44318965517241377
INFO: :pAUC : 0.49168179068360557
INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_06
INFO: :test_file  num : 461
INFO: :anomaly score result ->  ./result/anomaly_score_fan_id_06.csv
INFO: :AUC : 0.43534626038781166
INFO: :pAUC : 0.5077999708412305
INFO: :AUC and pAUC results -> ./result/result.csv
INFO: :load_directory <- development
WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:508: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:3837: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:125: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:127: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:168: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:175: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:180: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:184: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:193: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:200: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\optimizers.py:757: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:977: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.

WARNING:tensorflow:From C:\Users\markh\Work\my_dcase\testing\env\lib\site-packages\keras\backend\tensorflow_backend.py:964: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.

INFO: :target_dir : C:\Users\markh\Work\my_dcase\testing\dev_data\fan_id_00
INFO: :test_file  num : 507
